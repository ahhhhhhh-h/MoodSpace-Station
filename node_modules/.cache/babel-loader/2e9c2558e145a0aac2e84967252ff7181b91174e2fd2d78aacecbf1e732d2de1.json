{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  BaseStemmer\n} = require('@nlpjs/core');\n\n/* eslint-disable */\nclass StemmerPl extends BaseStemmer {\n  constructor(container) {\n    super(container);\n    this.name = 'stemmer-pl';\n  }\n  stemNoun(word) {\n    let slice;\n    if (word.length > 7) {\n      slice = word.slice(-5);\n      if (['zacja', 'zacji'].includes(slice)) {\n        return word.slice(0, -4);\n      }\n    }\n    if (word.length > 6) {\n      slice = word.slice(-4);\n      if (['acja', 'acji', 'tach', 'anie', 'enie', 'eniu', 'aniu'].includes(slice)) {\n        return word.slice(0, -4);\n      }\n      if (slice === 'tyka') {\n        return word.slice(0, -2);\n      }\n    }\n    if (word.length > 5) {\n      slice = word.slice(-3);\n      if (['ach', 'ami', 'nia', 'niu', 'cia', 'ciu'].includes(slice)) {\n        return word.slice(0, -3);\n      }\n      if (['cji', 'cja'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n      slice = word.slice(-2);\n      if (['ce', 'ta'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n  stemDiminutive(word) {\n    let slice;\n    if (word.length > 6) {\n      slice = word.slice(-5);\n      if (['eczek', 'iczek', 'iszek', 'aszek', 'uszek'].includes(slice)) {\n        return word.slice(0, -5);\n      }\n      slice = word.slice(-4);\n      if (['enek', 'ejek', 'erek'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    if (word.length > 4) {\n      slice = word.slice(-2);\n      if (['ek', 'ak'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n  stemAdjective(word) {\n    if (word.length > 7 && word.startsWith('naj')) {\n      if (word.endsWith('szych')) {\n        return word.slice(3, -5);\n      }\n      if (word.endsWith('sze') || word.endsWith('szy')) {\n        return word.slice(3, -3);\n      }\n    }\n    if (word.length > 6 && word.endsWith('czny')) {\n      return word.slice(0, -4);\n    }\n    if (word.length > 5) {\n      let slice = word.slice(-3);\n      if (['owy', 'owa', 'owe', 'ych', 'ego'].includes(slice)) {\n        return word.slice(0, -3);\n      }\n      if (word.endsWith('ej')) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n  stemVerb(word) {\n    let slice = word.slice(-3);\n    if (word.length > 5) {\n      if (['bym', 'esz', 'asz', 'cie', 'esc', 'asc', 'łem', 'amy', 'emy'].includes(slice)) {\n        return word.slice(0, -3);\n      }\n    }\n    if (word.length > 3) {\n      if (['esz', 'asz', 'esc', 'asc', 'ec', 'ac'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n      slice = word.slice(-2);\n      if (slice === 'aj') {\n        return word.slice(0, -1);\n      }\n      if (['ac', 'em', 'am', 'ał', 'ił', 'ic', 'ac'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n  stemAdverb(word) {\n    if (word.length > 4) {\n      const slice = word.slice(-3);\n      if (['nie', 'wie', 'rze'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n  stemPlural(word) {\n    if (word.length > 4) {\n      if (word.endsWith('ami')) {\n        return word.slice(0, -3);\n      }\n      if (word.endsWith('ow') || word.endsWith('om')) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n  stemGeneral(word) {\n    if (word.length > 4) {\n      if (word.endsWith('ia') || word.endsWith('ie')) {\n        return word.slice(0, -2);\n      }\n      if (['u', 'a', 'i', 'e', 'ł', 'y'].includes(word[word.length - 1])) {\n        return word.slice(0, -1);\n      }\n    }\n    return word;\n  }\n  innerStem() {\n    let current = this.getCurrent();\n    current = this.stemNoun(current);\n    current = this.stemDiminutive(current);\n    current = this.stemAdjective(current);\n    current = this.stemVerb(current);\n    current = this.stemAdverb(current);\n    current = this.stemPlural(current);\n    current = this.stemGeneral(current);\n    this.setCurrent(current);\n  }\n}\nmodule.exports = StemmerPl;","map":{"version":3,"names":["BaseStemmer","require","StemmerPl","constructor","container","name","stemNoun","word","slice","length","includes","stemDiminutive","stemAdjective","startsWith","endsWith","stemVerb","stemAdverb","stemPlural","stemGeneral","innerStem","current","getCurrent","setCurrent","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-pl/src/stemmer-pl.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { BaseStemmer } = require('@nlpjs/core');\n\n/* eslint-disable */\nclass StemmerPl extends BaseStemmer {\n  constructor(container) {\n    super(container);\n    this.name = 'stemmer-pl';\n  }\n\n  stemNoun(word) {\n    let slice;\n    if (word.length > 7) {\n      slice = word.slice(-5);\n      if (['zacja', 'zacji'].includes(slice)) {\n        return word.slice(0, -4);\n      }\n    }\n    if (word.length > 6) {\n      slice = word.slice(-4);\n      if (['acja', 'acji', 'tach', 'anie', 'enie', 'eniu', 'aniu'].includes(slice)) {\n        return word.slice(0, -4);\n      }\n      if (slice === 'tyka') {\n        return word.slice(0, -2);\n      }\n    }\n    if (word.length > 5) {\n      slice = word.slice(-3);\n      if (['ach', 'ami', 'nia', 'niu', 'cia', 'ciu'].includes(slice)) {\n        return word.slice(0, -3);\n      }\n      if (['cji', 'cja'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n      slice = word.slice(-2);\n      if (['ce', 'ta'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n\n  stemDiminutive(word) {\n    let slice;\n    if (word.length > 6) {\n      slice = word.slice(-5);\n      if (['eczek', 'iczek', 'iszek', 'aszek', 'uszek'].includes(slice)) {\n        return word.slice(0, -5);\n      }\n      slice = word.slice(-4);\n      if (['enek', 'ejek', 'erek'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    if (word.length > 4) {\n      slice = word.slice(-2);\n      if (['ek', 'ak'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n\n  stemAdjective(word) {\n    if (word.length > 7 && word.startsWith('naj')) {\n      if (word.endsWith('szych')) {\n        return word.slice(3, -5);\n      }\n      if (word.endsWith('sze') || word.endsWith('szy')) {\n        return word.slice(3, -3);\n      }\n    }\n    if (word.length > 6 && word.endsWith('czny')) {\n      return word.slice(0, -4);\n    }\n    if (word.length > 5) {\n      let slice = word.slice(-3);\n      if (['owy', 'owa', 'owe', 'ych', 'ego'].includes(slice)) {\n        return word.slice(0, -3);\n      }\n      if (word.endsWith('ej')) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n\n  stemVerb(word) {\n    let slice = word.slice(-3);\n    if (word.length > 5) {\n      if (['bym', 'esz', 'asz', 'cie', 'esc', 'asc', 'łem', 'amy', 'emy'].includes(slice)) {\n        return word.slice(0, -3);\n      }\n    }\n    if (word.length > 3) {\n      if (['esz', 'asz', 'esc', 'asc', 'ec', 'ac'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n      slice = word.slice(-2);\n      if (slice === 'aj') {\n        return word.slice(0, -1);\n      }\n      if (['ac', 'em', 'am', 'ał', 'ił', 'ic', 'ac'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n\n  stemAdverb(word) {\n    if (word.length > 4) {\n      const slice = word.slice(-3);\n      if (['nie', 'wie', 'rze'].includes(slice)) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n\n  stemPlural(word) {\n    if (word.length > 4) {\n      if (word.endsWith('ami')) {\n        return word.slice(0, -3);\n      }\n      if (word.endsWith('ow') || word.endsWith('om')) {\n        return word.slice(0, -2);\n      }\n    }\n    return word;\n  }\n\n  stemGeneral(word) {\n    if (word.length > 4) {\n      if (word.endsWith('ia') || word.endsWith('ie')) {\n        return word.slice(0, -2);\n      }\n      if (['u', 'a', 'i', 'e', 'ł', 'y'].includes(word[word.length - 1])) {\n        return word.slice(0, -1);\n\n      }\n    }\n    return word;\n  }\n\n  innerStem() {\n    let current = this.getCurrent();\n    current = this.stemNoun(current);\n    current = this.stemDiminutive(current);\n    current = this.stemAdjective(current);\n    current = this.stemVerb(current);\n    current = this.stemAdverb(current);\n    current = this.stemPlural(current);\n    current = this.stemGeneral(current);\n    this.setCurrent(current)\n  }\n}\n\nmodule.exports = StemmerPl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}