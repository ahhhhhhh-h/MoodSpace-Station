{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\nvar CharacterClass = require(\"./CharacterClass\");\n\n/**\n * InvokeDefinitionMap represents invoke definition a part of char.def\n * @constructor\n */\nfunction InvokeDefinitionMap() {\n  this.map = [];\n  this.lookup_table = {}; // Just for building dictionary\n}\n\n/**\n * Load InvokeDefinitionMap from buffer\n * @param {Uint8Array} invoke_def_buffer\n * @returns {InvokeDefinitionMap}\n */\nInvokeDefinitionMap.load = function (invoke_def_buffer) {\n  var invoke_def = new InvokeDefinitionMap();\n  var character_category_definition = [];\n  var buffer = new ByteBuffer(invoke_def_buffer);\n  while (buffer.position + 1 < buffer.size()) {\n    var class_id = character_category_definition.length;\n    var is_always_invoke = buffer.get();\n    var is_grouping = buffer.get();\n    var max_length = buffer.getInt();\n    var class_name = buffer.getString();\n    character_category_definition.push(new CharacterClass(class_id, class_name, is_always_invoke, is_grouping, max_length));\n  }\n  invoke_def.init(character_category_definition);\n  return invoke_def;\n};\n\n/**\n * Initializing method\n * @param {Array.<CharacterClass>} character_category_definition Array of CharacterClass\n */\nInvokeDefinitionMap.prototype.init = function (character_category_definition) {\n  if (character_category_definition == null) {\n    return;\n  }\n  for (var i = 0; i < character_category_definition.length; i++) {\n    var character_class = character_category_definition[i];\n    this.map[i] = character_class;\n    this.lookup_table[character_class.class_name] = i;\n  }\n};\n\n/**\n * Get class information by class ID\n * @param {number} class_id\n * @returns {CharacterClass}\n */\nInvokeDefinitionMap.prototype.getCharacterClass = function (class_id) {\n  return this.map[class_id];\n};\n\n/**\n * For building character definition dictionary\n * @param {string} class_name character\n * @returns {number} class_id\n */\nInvokeDefinitionMap.prototype.lookup = function (class_name) {\n  var class_id = this.lookup_table[class_name];\n  if (class_id == null) {\n    return null;\n  }\n  return class_id;\n};\n\n/**\n * Transform from map to binary buffer\n * @returns {Uint8Array}\n */\nInvokeDefinitionMap.prototype.toBuffer = function () {\n  var buffer = new ByteBuffer();\n  for (var i = 0; i < this.map.length; i++) {\n    var char_class = this.map[i];\n    buffer.put(char_class.is_always_invoke);\n    buffer.put(char_class.is_grouping);\n    buffer.putInt(char_class.max_length);\n    buffer.putString(char_class.class_name);\n  }\n  buffer.shrink();\n  return buffer.buffer;\n};\nmodule.exports = InvokeDefinitionMap;","map":{"version":3,"names":["ByteBuffer","require","CharacterClass","InvokeDefinitionMap","map","lookup_table","load","invoke_def_buffer","invoke_def","character_category_definition","buffer","position","size","class_id","length","is_always_invoke","get","is_grouping","max_length","getInt","class_name","getString","push","init","prototype","i","character_class","getCharacterClass","lookup","toBuffer","char_class","put","putInt","putString","shrink","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/kuromoji/src/dict/InvokeDefinitionMap.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\nvar CharacterClass = require(\"./CharacterClass\");\n\n/**\n * InvokeDefinitionMap represents invoke definition a part of char.def\n * @constructor\n */\nfunction InvokeDefinitionMap() {\n    this.map = [];\n    this.lookup_table = {};  // Just for building dictionary\n}\n\n/**\n * Load InvokeDefinitionMap from buffer\n * @param {Uint8Array} invoke_def_buffer\n * @returns {InvokeDefinitionMap}\n */\nInvokeDefinitionMap.load = function (invoke_def_buffer) {\n    var invoke_def = new InvokeDefinitionMap();\n    var character_category_definition = [];\n\n    var buffer = new ByteBuffer(invoke_def_buffer);\n    while (buffer.position + 1 < buffer.size()) {\n        var class_id = character_category_definition.length;\n        var is_always_invoke = buffer.get();\n        var is_grouping = buffer.get();\n        var max_length = buffer.getInt();\n        var class_name = buffer.getString();\n        character_category_definition.push(new CharacterClass(class_id, class_name, is_always_invoke, is_grouping, max_length));\n    }\n\n    invoke_def.init(character_category_definition);\n\n    return invoke_def;\n};\n\n/**\n * Initializing method\n * @param {Array.<CharacterClass>} character_category_definition Array of CharacterClass\n */\nInvokeDefinitionMap.prototype.init = function (character_category_definition) {\n    if (character_category_definition == null) {\n        return;\n    }\n    for (var i = 0; i < character_category_definition.length; i++) {\n        var character_class = character_category_definition[i];\n        this.map[i] = character_class;\n        this.lookup_table[character_class.class_name] = i;\n    }\n};\n\n/**\n * Get class information by class ID\n * @param {number} class_id\n * @returns {CharacterClass}\n */\nInvokeDefinitionMap.prototype.getCharacterClass = function (class_id) {\n    return this.map[class_id];\n};\n\n/**\n * For building character definition dictionary\n * @param {string} class_name character\n * @returns {number} class_id\n */\nInvokeDefinitionMap.prototype.lookup = function (class_name) {\n    var class_id = this.lookup_table[class_name];\n    if (class_id == null) {\n        return null;\n    }\n    return class_id;\n};\n\n/**\n * Transform from map to binary buffer\n * @returns {Uint8Array}\n */\nInvokeDefinitionMap.prototype.toBuffer = function () {\n    var buffer = new ByteBuffer();\n    for (var i = 0; i < this.map.length; i++) {\n        var char_class = this.map[i];\n        buffer.put(char_class.is_always_invoke);\n        buffer.put(char_class.is_grouping);\n        buffer.putInt(char_class.max_length);\n        buffer.putString(char_class.class_name);\n    }\n    buffer.shrink();\n    return buffer.buffer;\n};\n\nmodule.exports = InvokeDefinitionMap;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC9C,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;;AAEhD;AACA;AACA;AACA;AACA,SAASE,mBAAmBA,CAAA,EAAG;EAC3B,IAAI,CAACC,GAAG,GAAG,EAAE;EACb,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAE;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACAF,mBAAmB,CAACG,IAAI,GAAG,UAAUC,iBAAiB,EAAE;EACpD,IAAIC,UAAU,GAAG,IAAIL,mBAAmB,CAAC,CAAC;EAC1C,IAAIM,6BAA6B,GAAG,EAAE;EAEtC,IAAIC,MAAM,GAAG,IAAIV,UAAU,CAACO,iBAAiB,CAAC;EAC9C,OAAOG,MAAM,CAACC,QAAQ,GAAG,CAAC,GAAGD,MAAM,CAACE,IAAI,CAAC,CAAC,EAAE;IACxC,IAAIC,QAAQ,GAAGJ,6BAA6B,CAACK,MAAM;IACnD,IAAIC,gBAAgB,GAAGL,MAAM,CAACM,GAAG,CAAC,CAAC;IACnC,IAAIC,WAAW,GAAGP,MAAM,CAACM,GAAG,CAAC,CAAC;IAC9B,IAAIE,UAAU,GAAGR,MAAM,CAACS,MAAM,CAAC,CAAC;IAChC,IAAIC,UAAU,GAAGV,MAAM,CAACW,SAAS,CAAC,CAAC;IACnCZ,6BAA6B,CAACa,IAAI,CAAC,IAAIpB,cAAc,CAACW,QAAQ,EAAEO,UAAU,EAAEL,gBAAgB,EAAEE,WAAW,EAAEC,UAAU,CAAC,CAAC;EAC3H;EAEAV,UAAU,CAACe,IAAI,CAACd,6BAA6B,CAAC;EAE9C,OAAOD,UAAU;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACAL,mBAAmB,CAACqB,SAAS,CAACD,IAAI,GAAG,UAAUd,6BAA6B,EAAE;EAC1E,IAAIA,6BAA6B,IAAI,IAAI,EAAE;IACvC;EACJ;EACA,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,6BAA6B,CAACK,MAAM,EAAEW,CAAC,EAAE,EAAE;IAC3D,IAAIC,eAAe,GAAGjB,6BAA6B,CAACgB,CAAC,CAAC;IACtD,IAAI,CAACrB,GAAG,CAACqB,CAAC,CAAC,GAAGC,eAAe;IAC7B,IAAI,CAACrB,YAAY,CAACqB,eAAe,CAACN,UAAU,CAAC,GAAGK,CAAC;EACrD;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAtB,mBAAmB,CAACqB,SAAS,CAACG,iBAAiB,GAAG,UAAUd,QAAQ,EAAE;EAClE,OAAO,IAAI,CAACT,GAAG,CAACS,QAAQ,CAAC;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAV,mBAAmB,CAACqB,SAAS,CAACI,MAAM,GAAG,UAAUR,UAAU,EAAE;EACzD,IAAIP,QAAQ,GAAG,IAAI,CAACR,YAAY,CAACe,UAAU,CAAC;EAC5C,IAAIP,QAAQ,IAAI,IAAI,EAAE;IAClB,OAAO,IAAI;EACf;EACA,OAAOA,QAAQ;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACAV,mBAAmB,CAACqB,SAAS,CAACK,QAAQ,GAAG,YAAY;EACjD,IAAInB,MAAM,GAAG,IAAIV,UAAU,CAAC,CAAC;EAC7B,KAAK,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACrB,GAAG,CAACU,MAAM,EAAEW,CAAC,EAAE,EAAE;IACtC,IAAIK,UAAU,GAAG,IAAI,CAAC1B,GAAG,CAACqB,CAAC,CAAC;IAC5Bf,MAAM,CAACqB,GAAG,CAACD,UAAU,CAACf,gBAAgB,CAAC;IACvCL,MAAM,CAACqB,GAAG,CAACD,UAAU,CAACb,WAAW,CAAC;IAClCP,MAAM,CAACsB,MAAM,CAACF,UAAU,CAACZ,UAAU,CAAC;IACpCR,MAAM,CAACuB,SAAS,CAACH,UAAU,CAACV,UAAU,CAAC;EAC3C;EACAV,MAAM,CAACwB,MAAM,CAAC,CAAC;EACf,OAAOxB,MAAM,CAACA,MAAM;AACxB,CAAC;AAEDyB,MAAM,CAACC,OAAO,GAAGjC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}