{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Mappings between IPADIC dictionary features and tokenized results\n * @constructor\n */\nfunction IpadicFormatter() {}\nIpadicFormatter.prototype.formatEntry = function (word_id, position, type, features) {\n  var token = {};\n  token.word_id = word_id;\n  token.word_type = type;\n  token.word_position = position;\n  token.surface_form = features[0];\n  token.pos = features[1];\n  token.pos_detail_1 = features[2];\n  token.pos_detail_2 = features[3];\n  token.pos_detail_3 = features[4];\n  token.conjugated_type = features[5];\n  token.conjugated_form = features[6];\n  token.basic_form = features[7];\n  token.reading = features[8];\n  token.pronunciation = features[9];\n  return token;\n};\nIpadicFormatter.prototype.formatUnknownEntry = function (word_id, position, type, features, surface_form) {\n  var token = {};\n  token.word_id = word_id;\n  token.word_type = type;\n  token.word_position = position;\n  token.surface_form = surface_form;\n  token.pos = features[1];\n  token.pos_detail_1 = features[2];\n  token.pos_detail_2 = features[3];\n  token.pos_detail_3 = features[4];\n  token.conjugated_type = features[5];\n  token.conjugated_form = features[6];\n  token.basic_form = features[7];\n  // token.reading = features[8];\n  // token.pronunciation = features[9];\n\n  return token;\n};\nmodule.exports = IpadicFormatter;","map":{"version":3,"names":["IpadicFormatter","prototype","formatEntry","word_id","position","type","features","token","word_type","word_position","surface_form","pos","pos_detail_1","pos_detail_2","pos_detail_3","conjugated_type","conjugated_form","basic_form","reading","pronunciation","formatUnknownEntry","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/kuromoji/src/util/IpadicFormatter.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Mappings between IPADIC dictionary features and tokenized results\n * @constructor\n */\nfunction IpadicFormatter() {\n}\n\nIpadicFormatter.prototype.formatEntry = function (word_id, position, type, features) {\n    var token = {};\n    token.word_id = word_id;\n    token.word_type = type;\n    token.word_position = position;\n\n    token.surface_form = features[0];\n    token.pos = features[1];\n    token.pos_detail_1 = features[2];\n    token.pos_detail_2 = features[3];\n    token.pos_detail_3 = features[4];\n    token.conjugated_type = features[5];\n    token.conjugated_form = features[6];\n    token.basic_form = features[7];\n    token.reading = features[8];\n    token.pronunciation = features[9];\n\n    return token;\n};\n\nIpadicFormatter.prototype.formatUnknownEntry = function (word_id, position, type, features, surface_form) {\n    var token = {};\n    token.word_id = word_id;\n    token.word_type = type;\n    token.word_position = position;\n\n    token.surface_form = surface_form;\n    token.pos = features[1];\n    token.pos_detail_1 = features[2];\n    token.pos_detail_2 = features[3];\n    token.pos_detail_3 = features[4];\n    token.conjugated_type = features[5];\n    token.conjugated_form = features[6];\n    token.basic_form = features[7];\n    // token.reading = features[8];\n    // token.pronunciation = features[9];\n\n    return token;\n};\n\nmodule.exports = IpadicFormatter;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAAA,EAAG,CAC3B;AAEAA,eAAe,CAACC,SAAS,CAACC,WAAW,GAAG,UAAUC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EACjF,IAAIC,KAAK,GAAG,CAAC,CAAC;EACdA,KAAK,CAACJ,OAAO,GAAGA,OAAO;EACvBI,KAAK,CAACC,SAAS,GAAGH,IAAI;EACtBE,KAAK,CAACE,aAAa,GAAGL,QAAQ;EAE9BG,KAAK,CAACG,YAAY,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAChCC,KAAK,CAACI,GAAG,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACvBC,KAAK,CAACK,YAAY,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAChCC,KAAK,CAACM,YAAY,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAChCC,KAAK,CAACO,YAAY,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAChCC,KAAK,CAACQ,eAAe,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnCC,KAAK,CAACS,eAAe,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnCC,KAAK,CAACU,UAAU,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC9BC,KAAK,CAACW,OAAO,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC3BC,KAAK,CAACY,aAAa,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEjC,OAAOC,KAAK;AAChB,CAAC;AAEDP,eAAe,CAACC,SAAS,CAACmB,kBAAkB,GAAG,UAAUjB,OAAO,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,EAAEI,YAAY,EAAE;EACtG,IAAIH,KAAK,GAAG,CAAC,CAAC;EACdA,KAAK,CAACJ,OAAO,GAAGA,OAAO;EACvBI,KAAK,CAACC,SAAS,GAAGH,IAAI;EACtBE,KAAK,CAACE,aAAa,GAAGL,QAAQ;EAE9BG,KAAK,CAACG,YAAY,GAAGA,YAAY;EACjCH,KAAK,CAACI,GAAG,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACvBC,KAAK,CAACK,YAAY,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAChCC,KAAK,CAACM,YAAY,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAChCC,KAAK,CAACO,YAAY,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAChCC,KAAK,CAACQ,eAAe,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnCC,KAAK,CAACS,eAAe,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnCC,KAAK,CAACU,UAAU,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC9B;EACA;;EAEA,OAAOC,KAAK;AAChB,CAAC;AAEDc,MAAM,CAACC,OAAO,GAAGtB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}