{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar zlib = require(\"zlibjs/bin/gunzip.min.js\");\nvar DictionaryLoader = require(\"./DictionaryLoader\");\n\n/**\n * BrowserDictionaryLoader inherits DictionaryLoader, using jQuery XHR for download\n * @param {string} dic_path Dictionary path\n * @constructor\n */\nfunction BrowserDictionaryLoader(dic_path) {\n  DictionaryLoader.apply(this, [dic_path]);\n}\nBrowserDictionaryLoader.prototype = Object.create(DictionaryLoader.prototype);\n\n/**\n * Utility function to load gzipped dictionary\n * @param {string} url Dictionary URL\n * @param {BrowserDictionaryLoader~onLoad} callback Callback function\n */\nBrowserDictionaryLoader.prototype.loadArrayBuffer = function (url, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", url, true);\n  xhr.responseType = \"arraybuffer\";\n  xhr.onload = function () {\n    if (this.status > 0 && this.status !== 200) {\n      callback(xhr.statusText, null);\n      return;\n    }\n    var arraybuffer = this.response;\n    var gz = new zlib.Zlib.Gunzip(new Uint8Array(arraybuffer));\n    var typed_array = gz.decompress();\n    callback(null, typed_array.buffer);\n  };\n  xhr.onerror = function (err) {\n    callback(err, null);\n  };\n  xhr.send();\n};\n\n/**\n * Callback\n * @callback BrowserDictionaryLoader~onLoad\n * @param {Object} err Error object\n * @param {Uint8Array} buffer Loaded buffer\n */\n\nmodule.exports = BrowserDictionaryLoader;","map":{"version":3,"names":["zlib","require","DictionaryLoader","BrowserDictionaryLoader","dic_path","apply","prototype","Object","create","loadArrayBuffer","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","statusText","arraybuffer","response","gz","Zlib","Gunzip","Uint8Array","typed_array","decompress","buffer","onerror","err","send","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/kuromoji/src/loader/BrowserDictionaryLoader.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar zlib = require(\"zlibjs/bin/gunzip.min.js\");\nvar DictionaryLoader = require(\"./DictionaryLoader\");\n\n/**\n * BrowserDictionaryLoader inherits DictionaryLoader, using jQuery XHR for download\n * @param {string} dic_path Dictionary path\n * @constructor\n */\nfunction BrowserDictionaryLoader(dic_path) {\n    DictionaryLoader.apply(this, [dic_path]);\n}\n\nBrowserDictionaryLoader.prototype = Object.create(DictionaryLoader.prototype);\n\n/**\n * Utility function to load gzipped dictionary\n * @param {string} url Dictionary URL\n * @param {BrowserDictionaryLoader~onLoad} callback Callback function\n */\nBrowserDictionaryLoader.prototype.loadArrayBuffer = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"arraybuffer\";\n    xhr.onload = function () {\n        if (this.status > 0 && this.status !== 200) {\n            callback(xhr.statusText, null);\n            return;\n        }\n        var arraybuffer = this.response;\n\n        var gz = new zlib.Zlib.Gunzip(new Uint8Array(arraybuffer));\n        var typed_array = gz.decompress();\n        callback(null, typed_array.buffer);\n    };\n    xhr.onerror = function (err) {\n        callback(err, null);\n    };\n    xhr.send();\n};\n\n/**\n * Callback\n * @callback BrowserDictionaryLoader~onLoad\n * @param {Object} err Error object\n * @param {Uint8Array} buffer Loaded buffer\n */\n\nmodule.exports = BrowserDictionaryLoader;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC9C,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA,SAASE,uBAAuBA,CAACC,QAAQ,EAAE;EACvCF,gBAAgB,CAACG,KAAK,CAAC,IAAI,EAAE,CAACD,QAAQ,CAAC,CAAC;AAC5C;AAEAD,uBAAuB,CAACG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACN,gBAAgB,CAACI,SAAS,CAAC;;AAE7E;AACA;AACA;AACA;AACA;AACAH,uBAAuB,CAACG,SAAS,CAACG,eAAe,GAAG,UAAUC,GAAG,EAAEC,QAAQ,EAAE;EACzE,IAAIC,GAAG,GAAG,IAAIC,cAAc,CAAC,CAAC;EAC9BD,GAAG,CAACE,IAAI,CAAC,KAAK,EAAEJ,GAAG,EAAE,IAAI,CAAC;EAC1BE,GAAG,CAACG,YAAY,GAAG,aAAa;EAChCH,GAAG,CAACI,MAAM,GAAG,YAAY;IACrB,IAAI,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,IAAI,CAACA,MAAM,KAAK,GAAG,EAAE;MACxCN,QAAQ,CAACC,GAAG,CAACM,UAAU,EAAE,IAAI,CAAC;MAC9B;IACJ;IACA,IAAIC,WAAW,GAAG,IAAI,CAACC,QAAQ;IAE/B,IAAIC,EAAE,GAAG,IAAIrB,IAAI,CAACsB,IAAI,CAACC,MAAM,CAAC,IAAIC,UAAU,CAACL,WAAW,CAAC,CAAC;IAC1D,IAAIM,WAAW,GAAGJ,EAAE,CAACK,UAAU,CAAC,CAAC;IACjCf,QAAQ,CAAC,IAAI,EAAEc,WAAW,CAACE,MAAM,CAAC;EACtC,CAAC;EACDf,GAAG,CAACgB,OAAO,GAAG,UAAUC,GAAG,EAAE;IACzBlB,QAAQ,CAACkB,GAAG,EAAE,IAAI,CAAC;EACvB,CAAC;EACDjB,GAAG,CAACkB,IAAI,CAAC,CAAC;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG7B,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}