{"ast":null,"code":"var _EmotionAnalyzer;\nexport class EmotionAnalyzer {\n  constructor() {\n    // ✅ 这里填你的 DeepSeek 真实 API Key\n    this.apiKey = 'sk-b7d7e06604e44a5e965959754c904de5';\n    // ✅ DeepSeek的标准接口地址（基本和OpenAI一样）\n    this.apiUrl = 'https://api.deepseek.com/v1/chat/completions';\n  }\n  static getInstance() {\n    if (!EmotionAnalyzer.instance) {\n      EmotionAnalyzer.instance = new EmotionAnalyzer();\n    }\n    return EmotionAnalyzer.instance;\n  }\n  async analyzeEmotion(text) {\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag, _data$choices$$messag2;\n      if (!text.trim()) {\n        return 'received';\n      }\n      const prompt = `\n请判断下列中文内容的情绪类别，只返回以下三种英文结果：\n- positive（积极）\n- negative（消极）\n- received（中性）\n\n不要输出多余文字，只返回其中一个词即可。\n\n文本内容：\n\"${text}\"\n`;\n      const response = await fetch(this.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'deepseek-chat',\n          // DeepSeek使用的基础对话模型\n          messages: [{\n            role: 'user',\n            content: prompt\n          }],\n          temperature: 0.2,\n          // 让回答更稳定，不要乱说\n          max_tokens: 20 // 控制返回内容短一点\n        })\n      });\n      if (!response.ok) {\n        console.error('DeepSeek情绪识别API HTTP错误:', response.status, response.statusText);\n        return 'received';\n      }\n      const data = await response.json();\n      const reply = (_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : (_data$choices$$messag2 = _data$choices$$messag.content) === null || _data$choices$$messag2 === void 0 ? void 0 : _data$choices$$messag2.trim().toLowerCase();\n\n      // 根据DeepSeek返回的文本，判断情绪类型\n      if (reply !== null && reply !== void 0 && reply.includes('positive')) {\n        return 'positive';\n      }\n      if (reply !== null && reply !== void 0 && reply.includes('negative')) {\n        return 'negative';\n      }\n      return 'received';\n    } catch (error) {\n      console.error('DeepSeek情绪识别出错:', error);\n      return 'received';\n    }\n  }\n}\n_EmotionAnalyzer = EmotionAnalyzer;\nEmotionAnalyzer.instance = void 0;","map":{"version":3,"names":["EmotionAnalyzer","constructor","apiKey","apiUrl","getInstance","instance","analyzeEmotion","text","_data$choices","_data$choices$","_data$choices$$messag","_data$choices$$messag2","trim","prompt","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","temperature","max_tokens","ok","console","error","status","statusText","data","json","reply","choices","message","toLowerCase","includes","_EmotionAnalyzer"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/src/utils/EmotionAnalyzer.ts"],"sourcesContent":["import { EmotionType } from '../types';\n\nexport class EmotionAnalyzer {\n  private static instance: EmotionAnalyzer;\n\n  // ✅ 这里填你的 DeepSeek 真实 API Key\n  private apiKey: string = 'sk-b7d7e06604e44a5e965959754c904de5';\n\n  // ✅ DeepSeek的标准接口地址（基本和OpenAI一样）\n  private apiUrl: string = 'https://api.deepseek.com/v1/chat/completions';\n\n  private constructor() {}\n\n  public static getInstance(): EmotionAnalyzer {\n    if (!EmotionAnalyzer.instance) {\n      EmotionAnalyzer.instance = new EmotionAnalyzer();\n    }\n    return EmotionAnalyzer.instance;\n  }\n\n  public async analyzeEmotion(text: string): Promise<EmotionType> {\n    try {\n      if (!text.trim()) {\n        return 'received';\n      }\n\n      const prompt = `\n请判断下列中文内容的情绪类别，只返回以下三种英文结果：\n- positive（积极）\n- negative（消极）\n- received（中性）\n\n不要输出多余文字，只返回其中一个词即可。\n\n文本内容：\n\"${text}\"\n`;\n\n      const response = await fetch(this.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'deepseek-chat',  // DeepSeek使用的基础对话模型\n          messages: [{ role: 'user', content: prompt }],\n          temperature: 0.2,         // 让回答更稳定，不要乱说\n          max_tokens: 20             // 控制返回内容短一点\n        }),\n      });\n\n      if (!response.ok) {\n        console.error('DeepSeek情绪识别API HTTP错误:', response.status, response.statusText);\n        return 'received';\n      }\n\n      const data = await response.json();\n      const reply = data.choices?.[0]?.message?.content?.trim().toLowerCase();\n\n      // 根据DeepSeek返回的文本，判断情绪类型\n      if (reply?.includes('positive')) {\n        return 'positive';\n      }\n      if (reply?.includes('negative')) {\n        return 'negative';\n      }\n      return 'received';\n    } catch (error) {\n      console.error('DeepSeek情绪识别出错:', error);\n      return 'received';\n    }\n  }\n}\n"],"mappings":";AAEA,OAAO,MAAMA,eAAe,CAAC;EASnBC,WAAWA,CAAA,EAAG;IANtB;IAAA,KACQC,MAAM,GAAW,qCAAqC;IAE9D;IAAA,KACQC,MAAM,GAAW,8CAA8C;EAEhD;EAEvB,OAAcC,WAAWA,CAAA,EAAoB;IAC3C,IAAI,CAACJ,eAAe,CAACK,QAAQ,EAAE;MAC7BL,eAAe,CAACK,QAAQ,GAAG,IAAIL,eAAe,CAAC,CAAC;IAClD;IACA,OAAOA,eAAe,CAACK,QAAQ;EACjC;EAEA,MAAaC,cAAcA,CAACC,IAAY,EAAwB;IAC9D,IAAI;MAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,qBAAA,EAAAC,sBAAA;MACF,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,CAAC,EAAE;QAChB,OAAO,UAAU;MACnB;MAEA,MAAMC,MAAM,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAGN,IAAI;AACP,CAAC;MAEK,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,IAAI,CAACZ,MAAM,EAAE;QACxCa,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAU,IAAI,CAACf,MAAM;QACxC,CAAC;QACDgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,eAAe;UAAG;UACzBC,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEX;UAAO,CAAC,CAAC;UAC7CY,WAAW,EAAE,GAAG;UAAU;UAC1BC,UAAU,EAAE,EAAE,CAAa;QAC7B,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEf,QAAQ,CAACgB,MAAM,EAAEhB,QAAQ,CAACiB,UAAU,CAAC;QAC9E,OAAO,UAAU;MACnB;MAEA,MAAMC,IAAI,GAAG,MAAMlB,QAAQ,CAACmB,IAAI,CAAC,CAAC;MAClC,MAAMC,KAAK,IAAA1B,aAAA,GAAGwB,IAAI,CAACG,OAAO,cAAA3B,aAAA,wBAAAC,cAAA,GAAZD,aAAA,CAAe,CAAC,CAAC,cAAAC,cAAA,wBAAAC,qBAAA,GAAjBD,cAAA,CAAmB2B,OAAO,cAAA1B,qBAAA,wBAAAC,sBAAA,GAA1BD,qBAAA,CAA4Bc,OAAO,cAAAb,sBAAA,uBAAnCA,sBAAA,CAAqCC,IAAI,CAAC,CAAC,CAACyB,WAAW,CAAC,CAAC;;MAEvE;MACA,IAAIH,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEI,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC/B,OAAO,UAAU;MACnB;MACA,IAAIJ,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEI,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC/B,OAAO,UAAU;MACnB;MACA,OAAO,UAAU;IACnB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,OAAO,UAAU;IACnB;EACF;AACF;AAACU,gBAAA,GAvEYvC,eAAe;AAAfA,eAAe,CACXK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}