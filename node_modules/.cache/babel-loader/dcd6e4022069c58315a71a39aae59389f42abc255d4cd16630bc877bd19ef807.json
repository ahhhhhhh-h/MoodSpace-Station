{"ast":null,"code":"/* eslint-disable */\nfunction BaseStemmer() {\n  this.setCurrent = function (value) {\n    this.current = value;\n    this.cursor = 0;\n    this.limit = this.current.length;\n    this.limit_backward = 0;\n    this.bra = this.cursor;\n    this.ket = this.limit;\n  };\n  this.getCurrent = function () {\n    return this.current;\n  };\n  this.copy_from = function (other) {\n    this.current = other.current;\n    this.cursor = other.cursor;\n    this.limit = other.limit;\n    this.limit_backward = other.limit_backward;\n    this.bra = other.bra;\n    this.ket = other.ket;\n  };\n  this.in_grouping = function (s, min, max) {\n    if (this.cursor >= this.limit) return false;\n    var ch = this.current.charCodeAt(this.cursor);\n    if (ch > max || ch < min) return false;\n    ch -= min;\n    if ((s[ch >>> 3] & 0x1 << (ch & 0x7)) == 0) return false;\n    this.cursor++;\n    return true;\n  };\n  this.in_grouping_b = function (s, min, max) {\n    if (this.cursor <= this.limit_backward) return false;\n    var ch = this.current.charCodeAt(this.cursor - 1);\n    if (ch > max || ch < min) return false;\n    ch -= min;\n    if ((s[ch >>> 3] & 0x1 << (ch & 0x7)) == 0) return false;\n    this.cursor--;\n    return true;\n  };\n  this.out_grouping = function (s, min, max) {\n    if (this.cursor >= this.limit) return false;\n    var ch = this.current.charCodeAt(this.cursor);\n    if (ch > max || ch < min) {\n      this.cursor++;\n      return true;\n    }\n    ch -= min;\n    if ((s[ch >>> 3] & 0X1 << (ch & 0x7)) == 0) {\n      this.cursor++;\n      return true;\n    }\n    return false;\n  };\n  this.out_grouping_b = function (s, min, max) {\n    if (this.cursor <= this.limit_backward) return false;\n    var ch = this.current.charCodeAt(this.cursor - 1);\n    if (ch > max || ch < min) {\n      this.cursor--;\n      return true;\n    }\n    ch -= min;\n    if ((s[ch >>> 3] & 0x1 << (ch & 0x7)) == 0) {\n      this.cursor--;\n      return true;\n    }\n    return false;\n  };\n  this.eq_s = function (s) {\n    if (this.limit - this.cursor < s.length) return false;\n    if (this.current.slice(this.cursor, this.cursor + s.length) != s) {\n      return false;\n    }\n    this.cursor += s.length;\n    return true;\n  };\n  this.eq_s_b = function (s) {\n    if (this.cursor - this.limit_backward < s.length) return false;\n    if (this.current.slice(this.cursor - s.length, this.cursor) != s) {\n      return false;\n    }\n    this.cursor -= s.length;\n    return true;\n  };\n\n  /** @return {number} */\n  this.find_among = function (v) {\n    var i = 0;\n    var j = v.length;\n    var c = this.cursor;\n    var l = this.limit;\n    var common_i = 0;\n    var common_j = 0;\n    var first_key_inspected = false;\n    while (true) {\n      var k = i + (j - i >>> 1);\n      var diff = 0;\n      var common = common_i < common_j ? common_i : common_j; // smaller\n      var w = v[k];\n      var i2;\n      /// s : string, substring_i : int, result : int, method\n      for (i2 = common; i2 < w[0].length; i2++) {\n        if (c + common == l) {\n          diff = -1;\n          break;\n        }\n        diff = this.current.charCodeAt(c + common) - w[0].charCodeAt(i2);\n        if (diff != 0) break;\n        common++;\n      }\n      if (diff < 0) {\n        j = k;\n        common_j = common;\n      } else {\n        i = k;\n        common_i = common;\n      }\n      if (j - i <= 1) {\n        if (i > 0) break; // v->s has been inspected\n        if (j == i) break; // only one item in v\n\n        // - but now we need to go round once more to get\n        // v->s inspected. This looks messy, but is actually\n        // the optimal approach.\n\n        if (first_key_inspected) break;\n        first_key_inspected = true;\n      }\n    }\n    while (true) {\n      var w = v[i];\n      if (common_i >= w[0].length) {\n        this.cursor = c + w[0].length;\n        if (w.length < 4) return w[2];\n        var res = w[3](this);\n        this.cursor = c + w[0].length;\n        if (res) return w[2];\n      }\n      i = w[1];\n      if (i < 0) return 0;\n    }\n  };\n\n  // find_among_b is for backwards processing. Same comments apply\n  this.find_among_b = function (v) {\n    var i = 0;\n    var j = v.length;\n    var c = this.cursor;\n    var lb = this.limit_backward;\n    var common_i = 0;\n    var common_j = 0;\n    var first_key_inspected = false;\n    while (true) {\n      var k = i + (j - i >> 1);\n      var diff = 0;\n      var common = common_i < common_j ? common_i : common_j;\n      var w = v[k];\n      var i2;\n      for (i2 = w[0].length - 1 - common; i2 >= 0; i2--) {\n        if (c - common == lb) {\n          diff = -1;\n          break;\n        }\n        diff = this.current.charCodeAt(c - 1 - common) - w[0].charCodeAt(i2);\n        if (diff != 0) break;\n        common++;\n      }\n      if (diff < 0) {\n        j = k;\n        common_j = common;\n      } else {\n        i = k;\n        common_i = common;\n      }\n      if (j - i <= 1) {\n        if (i > 0) break;\n        if (j == i) break;\n        if (first_key_inspected) break;\n        first_key_inspected = true;\n      }\n    }\n    while (true) {\n      var w = v[i];\n      if (common_i >= w[0].length) {\n        this.cursor = c - w[0].length;\n        if (w.length < 4) return w[2];\n        var res = w[3](this);\n        this.cursor = c - w[0].length;\n        if (res) return w[2];\n      }\n      i = w[1];\n      if (i < 0) return 0;\n    }\n  };\n\n  /* to replace chars between c_bra and c_ket in this.current by the\n   * chars in s.\n   */\n  this.replace_s = function (c_bra, c_ket, s) {\n    var adjustment = s.length - (c_ket - c_bra);\n    this.current = this.current.slice(0, c_bra) + s + this.current.slice(c_ket);\n    this.limit += adjustment;\n    if (this.cursor >= c_ket) this.cursor += adjustment;else if (this.cursor > c_bra) this.cursor = c_bra;\n    return adjustment;\n  };\n  this.slice_check = function () {\n    if (this.bra < 0 || this.bra > this.ket || this.ket > this.limit || this.limit > this.current.length) {\n      return false;\n    }\n    return true;\n  };\n  this.slice_from = function (s) {\n    var result = false;\n    if (this.slice_check()) {\n      this.replace_s(this.bra, this.ket, s);\n      result = true;\n    }\n    return result;\n  };\n  this.slice_del = function () {\n    return this.slice_from(\"\");\n  };\n  this.insert = function (c_bra, c_ket, s) {\n    var adjustment = this.replace_s(c_bra, c_ket, s);\n    if (c_bra <= this.bra) this.bra += adjustment;\n    if (c_bra <= this.ket) this.ket += adjustment;\n  };\n  this.slice_to = function () {\n    var result = '';\n    if (this.slice_check()) {\n      result = this.current.slice(this.bra, this.ket);\n    }\n    return result;\n  };\n  this.assign_to = function () {\n    return this.current.slice(0, this.limit);\n  };\n}\n;\nfunction IndonesianStemmer() {\n  var base = new BaseStemmer();\n  /** @const */\n  var a_0 = [[\"kah\", -1, 1], [\"lah\", -1, 1], [\"pun\", -1, 1]];\n\n  /** @const */\n  var a_1 = [[\"nya\", -1, 1], [\"ku\", -1, 1], [\"mu\", -1, 1]];\n\n  /** @const */\n  var a_2 = [[\"i\", -1, 1, r_SUFFIX_I_OK], [\"an\", -1, 1, r_SUFFIX_AN_OK], [\"kan\", 1, 1, r_SUFFIX_KAN_OK]];\n\n  /** @const */\n  var a_3 = [[\"di\", -1, 1], [\"ke\", -1, 2], [\"me\", -1, 1], [\"mem\", 2, 5], [\"men\", 2, 1], [\"meng\", 4, 1], [\"meny\", 4, 3, r_VOWEL], [\"pem\", -1, 6], [\"pen\", -1, 2], [\"peng\", 8, 2], [\"peny\", 8, 4, r_VOWEL], [\"ter\", -1, 1]];\n\n  /** @const */\n  var a_4 = [[\"be\", -1, 3, r_KER], [\"belajar\", 0, 4], [\"ber\", 0, 3], [\"pe\", -1, 1], [\"pelajar\", 3, 2], [\"per\", 3, 1]];\n\n  /** @const */\n  var /** Array<int> */g_vowel = [17, 65, 16];\n  var /** number */I_prefix = 0;\n  var /** number */I_measure = 0;\n\n  /** @return {boolean} */\n  function r_remove_particle() {\n    // (, line 50\n    // [, line 51\n    base.ket = base.cursor;\n    // substring, line 51\n    if (base.find_among_b(a_0) == 0) {\n      return false;\n    }\n    // ], line 51\n    base.bra = base.cursor;\n    // (, line 52\n    // delete, line 52\n    if (!base.slice_del()) {\n      return false;\n    }\n    I_measure -= 1;\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_remove_possessive_pronoun() {\n    // (, line 56\n    // [, line 57\n    base.ket = base.cursor;\n    // substring, line 57\n    if (base.find_among_b(a_1) == 0) {\n      return false;\n    }\n    // ], line 57\n    base.bra = base.cursor;\n    // (, line 58\n    // delete, line 58\n    if (!base.slice_del()) {\n      return false;\n    }\n    I_measure -= 1;\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_SUFFIX_KAN_OK() {\n    // (, line 63\n    // and, line 85\n    if (!(I_prefix != 3)) {\n      return false;\n    }\n    if (!(I_prefix != 2)) {\n      return false;\n    }\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_SUFFIX_AN_OK() {\n    // (, line 89\n    if (!(I_prefix != 1)) {\n      return false;\n    }\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_SUFFIX_I_OK() {\n    // (, line 91\n    if (!(I_prefix <= 2)) {\n      return false;\n    }\n    // not, line 128\n    {\n      var /** number */v_1 = base.limit - base.cursor;\n      lab0: {\n        // literal, line 128\n        if (!base.eq_s_b(\"s\")) {\n          break lab0;\n        }\n        return false;\n      }\n      base.cursor = base.limit - v_1;\n    }\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_remove_suffix() {\n    // (, line 131\n    // [, line 132\n    base.ket = base.cursor;\n    // substring, line 132\n    if (base.find_among_b(a_2) == 0) {\n      return false;\n    }\n    // ], line 132\n    base.bra = base.cursor;\n    // (, line 134\n    // delete, line 134\n    if (!base.slice_del()) {\n      return false;\n    }\n    I_measure -= 1;\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_VOWEL() {\n    // (, line 141\n    if (!base.in_grouping(g_vowel, 97, 117)) {\n      return false;\n    }\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_KER() {\n    // (, line 143\n    if (!base.out_grouping(g_vowel, 97, 117)) {\n      return false;\n    }\n    // literal, line 143\n    if (!base.eq_s(\"er\")) {\n      return false;\n    }\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_remove_first_order_prefix() {\n    var /** number */among_var;\n    // (, line 145\n    // [, line 146\n    base.bra = base.cursor;\n    // substring, line 146\n    among_var = base.find_among(a_3);\n    if (among_var == 0) {\n      return false;\n    }\n    // ], line 146\n    base.ket = base.cursor;\n    switch (among_var) {\n      case 1:\n        // (, line 147\n        // delete, line 147\n        if (!base.slice_del()) {\n          return false;\n        }\n        I_prefix = 1;\n        I_measure -= 1;\n        break;\n      case 2:\n        // (, line 148\n        // delete, line 148\n        if (!base.slice_del()) {\n          return false;\n        }\n        I_prefix = 3;\n        I_measure -= 1;\n        break;\n      case 3:\n        // (, line 149\n        I_prefix = 1;\n        // <-, line 149\n        if (!base.slice_from(\"s\")) {\n          return false;\n        }\n        I_measure -= 1;\n        break;\n      case 4:\n        // (, line 150\n        I_prefix = 3;\n        // <-, line 150\n        if (!base.slice_from(\"s\")) {\n          return false;\n        }\n        I_measure -= 1;\n        break;\n      case 5:\n        // (, line 151\n        I_prefix = 1;\n        I_measure -= 1;\n        // or, line 151\n        lab0: {\n          var /** number */v_1 = base.cursor;\n          lab1: {\n            // and, line 151\n            var /** number */v_2 = base.cursor;\n            if (!base.in_grouping(g_vowel, 97, 117)) {\n              break lab1;\n            }\n            base.cursor = v_2;\n            // <-, line 151\n            if (!base.slice_from(\"p\")) {\n              return false;\n            }\n            break lab0;\n          }\n          base.cursor = v_1;\n          // delete, line 151\n          if (!base.slice_del()) {\n            return false;\n          }\n        }\n        break;\n      case 6:\n        // (, line 152\n        I_prefix = 3;\n        I_measure -= 1;\n        // or, line 152\n        lab2: {\n          var /** number */v_3 = base.cursor;\n          lab3: {\n            // and, line 152\n            var /** number */v_4 = base.cursor;\n            if (!base.in_grouping(g_vowel, 97, 117)) {\n              break lab3;\n            }\n            base.cursor = v_4;\n            // <-, line 152\n            if (!base.slice_from(\"p\")) {\n              return false;\n            }\n            break lab2;\n          }\n          base.cursor = v_3;\n          // delete, line 152\n          if (!base.slice_del()) {\n            return false;\n          }\n        }\n        break;\n    }\n    return true;\n  }\n  ;\n\n  /** @return {boolean} */\n  function r_remove_second_order_prefix() {\n    var /** number */among_var;\n    // (, line 156\n    // [, line 162\n    base.bra = base.cursor;\n    // substring, line 162\n    among_var = base.find_among(a_4);\n    if (among_var == 0) {\n      return false;\n    }\n    // ], line 162\n    base.ket = base.cursor;\n    switch (among_var) {\n      case 1:\n        // (, line 163\n        // delete, line 163\n        if (!base.slice_del()) {\n          return false;\n        }\n        I_prefix = 2;\n        I_measure -= 1;\n        break;\n      case 2:\n        // (, line 164\n        // <-, line 164\n        if (!base.slice_from(\"ajar\")) {\n          return false;\n        }\n        I_measure -= 1;\n        break;\n      case 3:\n        // (, line 165\n        // delete, line 165\n        if (!base.slice_del()) {\n          return false;\n        }\n        I_prefix = 4;\n        I_measure -= 1;\n        break;\n      case 4:\n        // (, line 166\n        // <-, line 166\n        if (!base.slice_from(\"ajar\")) {\n          return false;\n        }\n        I_prefix = 4;\n        I_measure -= 1;\n        break;\n    }\n    return true;\n  }\n  ;\n  this.stem = /** @return {boolean} */function () {\n    // (, line 171\n    I_measure = 0;\n    // do, line 173\n    var /** number */v_1 = base.cursor;\n    lab0: {\n      // (, line 173\n      // repeat, line 173\n      while (true) {\n        var /** number */v_2 = base.cursor;\n        lab1: {\n          // (, line 173\n          // gopast, line 173\n          golab2: while (true) {\n            lab3: {\n              if (!base.in_grouping(g_vowel, 97, 117)) {\n                break lab3;\n              }\n              break golab2;\n            }\n            if (base.cursor >= base.limit) {\n              break lab1;\n            }\n            base.cursor++;\n          }\n          I_measure += 1;\n          continue;\n        }\n        base.cursor = v_2;\n        break;\n      }\n    }\n    base.cursor = v_1;\n    if (!(I_measure > 2)) {\n      return false;\n    }\n    I_prefix = 0;\n    // backwards, line 176\n    base.limit_backward = base.cursor;\n    base.cursor = base.limit;\n    // (, line 176\n    // do, line 177\n    var /** number */v_4 = base.limit - base.cursor;\n    // call remove_particle, line 177\n    r_remove_particle();\n    base.cursor = base.limit - v_4;\n    if (!(I_measure > 2)) {\n      return false;\n    }\n    // do, line 179\n    var /** number */v_5 = base.limit - base.cursor;\n    // call remove_possessive_pronoun, line 179\n    r_remove_possessive_pronoun();\n    base.cursor = base.limit - v_5;\n    base.cursor = base.limit_backward;\n    if (!(I_measure > 2)) {\n      return false;\n    }\n    // or, line 188\n    lab4: {\n      var /** number */v_6 = base.cursor;\n      lab5: {\n        // test, line 182\n        var /** number */v_7 = base.cursor;\n        // (, line 182\n        // call remove_first_order_prefix, line 183\n        if (!r_remove_first_order_prefix()) {\n          break lab5;\n        }\n        // do, line 184\n        var /** number */v_8 = base.cursor;\n        lab6: {\n          // (, line 184\n          // test, line 185\n          var /** number */v_9 = base.cursor;\n          // (, line 185\n          if (!(I_measure > 2)) {\n            break lab6;\n          }\n          // backwards, line 185\n          base.limit_backward = base.cursor;\n          base.cursor = base.limit;\n          // call remove_suffix, line 185\n          if (!r_remove_suffix()) {\n            break lab6;\n          }\n          base.cursor = base.limit_backward;\n          base.cursor = v_9;\n          if (!(I_measure > 2)) {\n            break lab6;\n          }\n          // call remove_second_order_prefix, line 186\n          if (!r_remove_second_order_prefix()) {\n            break lab6;\n          }\n        }\n        base.cursor = v_8;\n        base.cursor = v_7;\n        break lab4;\n      }\n      base.cursor = v_6;\n      // (, line 188\n      // do, line 189\n      var /** number */v_10 = base.cursor;\n      // call remove_second_order_prefix, line 189\n      r_remove_second_order_prefix();\n      base.cursor = v_10;\n      // do, line 190\n      var /** number */v_11 = base.cursor;\n      lab7: {\n        // (, line 190\n        if (!(I_measure > 2)) {\n          break lab7;\n        }\n        // backwards, line 190\n        base.limit_backward = base.cursor;\n        base.cursor = base.limit;\n        // call remove_suffix, line 190\n        if (!r_remove_suffix()) {\n          break lab7;\n        }\n        base.cursor = base.limit_backward;\n      }\n      base.cursor = v_11;\n    }\n    return true;\n  };\n\n  /**@return{string}*/\n  this['stemWord'] = function (/**string*/word) {\n    base.setCurrent(word);\n    this.stem();\n    return base.getCurrent();\n  };\n}\n;\nmodule.exports = IndonesianStemmer;","map":{"version":3,"names":["BaseStemmer","setCurrent","value","current","cursor","limit","length","limit_backward","bra","ket","getCurrent","copy_from","other","in_grouping","s","min","max","ch","charCodeAt","in_grouping_b","out_grouping","out_grouping_b","eq_s","slice","eq_s_b","find_among","v","i","j","c","l","common_i","common_j","first_key_inspected","k","diff","common","w","i2","res","find_among_b","lb","replace_s","c_bra","c_ket","adjustment","slice_check","slice_from","result","slice_del","insert","slice_to","assign_to","IndonesianStemmer","base","a_0","a_1","a_2","r_SUFFIX_I_OK","r_SUFFIX_AN_OK","r_SUFFIX_KAN_OK","a_3","r_VOWEL","a_4","r_KER","g_vowel","I_prefix","I_measure","r_remove_particle","r_remove_possessive_pronoun","v_1","lab0","r_remove_suffix","r_remove_first_order_prefix","among_var","lab1","v_2","lab2","v_3","lab3","v_4","r_remove_second_order_prefix","stem","golab2","v_5","lab4","v_6","lab5","v_7","v_8","lab6","v_9","v_10","v_11","lab7","word","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-id/src/indonesian-stemmer.js"],"sourcesContent":["/* eslint-disable */\nfunction BaseStemmer() {\n  this.setCurrent = function(value) {\n      this.current = value;\nthis.cursor = 0;\nthis.limit = this.current.length;\nthis.limit_backward = 0;\nthis.bra = this.cursor;\nthis.ket = this.limit;\n  };\n\n  this.getCurrent = function() {\n      return this.current;\n  };\n\n  this.copy_from = function(other) {\nthis.current          = other.current;\nthis.cursor           = other.cursor;\nthis.limit            = other.limit;\nthis.limit_backward   = other.limit_backward;\nthis.bra              = other.bra;\nthis.ket              = other.ket;\n  };\n\n  this.in_grouping = function(s, min, max) {\nif (this.cursor >= this.limit) return false;\nvar ch = this.current.charCodeAt(this.cursor);\nif (ch > max || ch < min) return false;\nch -= min;\nif ((s[ch >>> 3] & (0x1 << (ch & 0x7))) == 0) return false;\nthis.cursor++;\nreturn true;\n  };\n\n  this.in_grouping_b = function(s, min, max) {\nif (this.cursor <= this.limit_backward) return false;\nvar ch = this.current.charCodeAt(this.cursor - 1);\nif (ch > max || ch < min) return false;\nch -= min;\nif ((s[ch >>> 3] & (0x1 << (ch & 0x7))) == 0) return false;\nthis.cursor--;\nreturn true;\n  };\n\n  this.out_grouping = function(s, min, max) {\nif (this.cursor >= this.limit) return false;\nvar ch = this.current.charCodeAt(this.cursor);\nif (ch > max || ch < min) {\n    this.cursor++;\n    return true;\n}\nch -= min;\nif ((s[ch >>> 3] & (0X1 << (ch & 0x7))) == 0) {\n    this.cursor++;\n    return true;\n}\nreturn false;\n  };\n\n  this.out_grouping_b = function(s, min, max) {\nif (this.cursor <= this.limit_backward) return false;\nvar ch = this.current.charCodeAt(this.cursor - 1);\nif (ch > max || ch < min) {\n    this.cursor--;\n    return true;\n}\nch -= min;\nif ((s[ch >>> 3] & (0x1 << (ch & 0x7))) == 0) {\n    this.cursor--;\n    return true;\n}\nreturn false;\n  };\n\n  this.eq_s = function(s)\n  {\nif (this.limit - this.cursor < s.length) return false;\n      if (this.current.slice(this.cursor, this.cursor + s.length) != s)\n      {\n          return false;\n      }\nthis.cursor += s.length;\nreturn true;\n  };\n\n  this.eq_s_b = function(s)\n  {\nif (this.cursor - this.limit_backward < s.length) return false;\n      if (this.current.slice(this.cursor - s.length, this.cursor) != s)\n      {\n          return false;\n      }\nthis.cursor -= s.length;\nreturn true;\n  };\n\n  /** @return {number} */ this.find_among = function(v)\n  {\nvar i = 0;\nvar j = v.length;\n\nvar c = this.cursor;\nvar l = this.limit;\n\nvar common_i = 0;\nvar common_j = 0;\n\nvar first_key_inspected = false;\n\nwhile (true)\n      {\n    var k = i + ((j - i) >>> 1);\n    var diff = 0;\n    var common = common_i < common_j ? common_i : common_j; // smaller\n    var w = v[k];\n    var i2;\n/// s : string, substring_i : int, result : int, method\n    for (i2 = common; i2 < w[0].length; i2++)\n          {\n  if (c + common == l)\n              {\n      diff = -1;\n      break;\n  }\n  diff = this.current.charCodeAt(c + common) - w[0].charCodeAt(i2);\n  if (diff != 0) break;\n  common++;\n    }\n    if (diff < 0)\n          {\n  j = k;\n  common_j = common;\n    }\n          else\n          {\n  i = k;\n  common_i = common;\n    }\n    if (j - i <= 1)\n          {\n  if (i > 0) break; // v->s has been inspected\n  if (j == i) break; // only one item in v\n\n  // - but now we need to go round once more to get\n  // v->s inspected. This looks messy, but is actually\n  // the optimal approach.\n\n  if (first_key_inspected) break;\n  first_key_inspected = true;\n    }\n}\nwhile (true)\n      {\n    var w = v[i];\n    if (common_i >= w[0].length)\n          {\n  this.cursor = c + w[0].length;\n  if (w.length < 4) return w[2];\n  var res = w[3](this);\n  this.cursor = c + w[0].length;\n  if (res) return w[2];\n    }\n    i = w[1];\n    if (i < 0) return 0;\n}\n  };\n\n  // find_among_b is for backwards processing. Same comments apply\n  this.find_among_b = function(v)\n  {\nvar i = 0;\nvar j = v.length\n\nvar c = this.cursor;\nvar lb = this.limit_backward;\n\nvar common_i = 0;\nvar common_j = 0;\n\nvar first_key_inspected = false;\n\nwhile (true)\n      {\n    var k = i + ((j - i) >> 1);\n    var diff = 0;\n    var common = common_i < common_j ? common_i : common_j;\n    var w = v[k];\n    var i2;\n    for (i2 = w[0].length - 1 - common; i2 >= 0; i2--)\n          {\n  if (c - common == lb)\n              {\n      diff = -1;\n      break;\n  }\n  diff = this.current.charCodeAt(c - 1 - common) - w[0].charCodeAt(i2);\n  if (diff != 0) break;\n  common++;\n    }\n    if (diff < 0)\n          {\n  j = k;\n  common_j = common;\n    }\n          else\n          {\n  i = k;\n  common_i = common;\n    }\n    if (j - i <= 1)\n          {\n  if (i > 0) break;\n  if (j == i) break;\n  if (first_key_inspected) break;\n  first_key_inspected = true;\n    }\n}\nwhile (true)\n      {\n    var w = v[i];\n    if (common_i >= w[0].length)\n          {\n  this.cursor = c - w[0].length;\n  if (w.length < 4) return w[2];\n  var res = w[3](this);\n  this.cursor = c - w[0].length;\n  if (res) return w[2];\n    }\n    i = w[1];\n    if (i < 0) return 0;\n}\n  };\n\n  /* to replace chars between c_bra and c_ket in this.current by the\n   * chars in s.\n   */\n  this.replace_s = function(c_bra, c_ket, s)\n  {\nvar adjustment = s.length - (c_ket - c_bra);\nthis.current = this.current.slice(0, c_bra) + s + this.current.slice(c_ket);\nthis.limit += adjustment;\nif (this.cursor >= c_ket) this.cursor += adjustment;\nelse if (this.cursor > c_bra) this.cursor = c_bra;\nreturn adjustment;\n  };\n\n  this.slice_check = function()\n  {\n      if (this.bra < 0 ||\n          this.bra > this.ket ||\n          this.ket > this.limit ||\n          this.limit > this.current.length)\n      {\n          return false;\n      }\n      return true;\n  };\n\n  this.slice_from = function(s)\n  {\n      var result = false;\nif (this.slice_check())\n      {\n    this.replace_s(this.bra, this.ket, s);\n          result = true;\n      }\n      return result;\n  };\n\n  this.slice_del = function()\n  {\nreturn this.slice_from(\"\");\n  };\n\n  this.insert = function(c_bra, c_ket, s)\n  {\n      var adjustment = this.replace_s(c_bra, c_ket, s);\nif (c_bra <= this.bra) this.bra += adjustment;\nif (c_bra <= this.ket) this.ket += adjustment;\n  };\n\n  this.slice_to = function()\n  {\n      var result = '';\nif (this.slice_check())\n      {\n          result = this.current.slice(this.bra, this.ket);\n      }\n      return result;\n  };\n\n  this.assign_to = function()\n  {\n      return this.current.slice(0, this.limit);\n  };\n};\n\nfunction IndonesianStemmer() {\n  var base = new BaseStemmer();\n  /** @const */ var a_0 = [\n      [\"kah\", -1, 1],\n      [\"lah\", -1, 1],\n      [\"pun\", -1, 1]\n  ];\n\n  /** @const */ var a_1 = [\n      [\"nya\", -1, 1],\n      [\"ku\", -1, 1],\n      [\"mu\", -1, 1]\n  ];\n\n  /** @const */ var a_2 = [\n      [\"i\", -1, 1, r_SUFFIX_I_OK],\n      [\"an\", -1, 1, r_SUFFIX_AN_OK],\n      [\"kan\", 1, 1, r_SUFFIX_KAN_OK]\n  ];\n\n  /** @const */ var a_3 = [\n      [\"di\", -1, 1],\n      [\"ke\", -1, 2],\n      [\"me\", -1, 1],\n      [\"mem\", 2, 5],\n      [\"men\", 2, 1],\n      [\"meng\", 4, 1],\n      [\"meny\", 4, 3, r_VOWEL],\n      [\"pem\", -1, 6],\n      [\"pen\", -1, 2],\n      [\"peng\", 8, 2],\n      [\"peny\", 8, 4, r_VOWEL],\n      [\"ter\", -1, 1]\n  ];\n\n  /** @const */ var a_4 = [\n      [\"be\", -1, 3, r_KER],\n      [\"belajar\", 0, 4],\n      [\"ber\", 0, 3],\n      [\"pe\", -1, 1],\n      [\"pelajar\", 3, 2],\n      [\"per\", 3, 1]\n  ];\n\n  /** @const */ var /** Array<int> */ g_vowel = [17, 65, 16];\n\n  var /** number */ I_prefix = 0;\n  var /** number */ I_measure = 0;\n\n\n  /** @return {boolean} */\n  function r_remove_particle() {\n      // (, line 50\n      // [, line 51\n      base.ket = base.cursor;\n      // substring, line 51\n      if (base.find_among_b(a_0) == 0)\n      {\n          return false;\n      }\n      // ], line 51\n      base.bra = base.cursor;\n      // (, line 52\n      // delete, line 52\n      if (!base.slice_del())\n      {\n          return false;\n      }\n      I_measure -= 1;\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_remove_possessive_pronoun() {\n      // (, line 56\n      // [, line 57\n      base.ket = base.cursor;\n      // substring, line 57\n      if (base.find_among_b(a_1) == 0)\n      {\n          return false;\n      }\n      // ], line 57\n      base.bra = base.cursor;\n      // (, line 58\n      // delete, line 58\n      if (!base.slice_del())\n      {\n          return false;\n      }\n      I_measure -= 1;\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_SUFFIX_KAN_OK() {\n      // (, line 63\n      // and, line 85\n      if (!(I_prefix != 3))\n      {\n          return false;\n      }\n      if (!(I_prefix != 2))\n      {\n          return false;\n      }\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_SUFFIX_AN_OK() {\n      // (, line 89\n      if (!(I_prefix != 1))\n      {\n          return false;\n      }\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_SUFFIX_I_OK() {\n      // (, line 91\n      if (!(I_prefix <= 2))\n      {\n          return false;\n      }\n      // not, line 128\n      {\n          var /** number */ v_1 = base.limit - base.cursor;\n          lab0: {\n              // literal, line 128\n              if (!(base.eq_s_b(\"s\")))\n              {\n                  break lab0;\n              }\n              return false;\n          }\n          base.cursor = base.limit - v_1;\n      }\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_remove_suffix() {\n      // (, line 131\n      // [, line 132\n      base.ket = base.cursor;\n      // substring, line 132\n      if (base.find_among_b(a_2) == 0)\n      {\n          return false;\n      }\n      // ], line 132\n      base.bra = base.cursor;\n      // (, line 134\n      // delete, line 134\n      if (!base.slice_del())\n      {\n          return false;\n      }\n      I_measure -= 1;\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_VOWEL() {\n      // (, line 141\n      if (!(base.in_grouping(g_vowel, 97, 117)))\n      {\n          return false;\n      }\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_KER() {\n      // (, line 143\n      if (!(base.out_grouping(g_vowel, 97, 117)))\n      {\n          return false;\n      }\n      // literal, line 143\n      if (!(base.eq_s(\"er\")))\n      {\n          return false;\n      }\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_remove_first_order_prefix() {\n      var /** number */ among_var;\n      // (, line 145\n      // [, line 146\n      base.bra = base.cursor;\n      // substring, line 146\n      among_var = base.find_among(a_3);\n      if (among_var == 0)\n      {\n          return false;\n      }\n      // ], line 146\n      base.ket = base.cursor;\n      switch (among_var) {\n          case 1:\n              // (, line 147\n              // delete, line 147\n              if (!base.slice_del())\n              {\n                  return false;\n              }\n              I_prefix = 1;\n              I_measure -= 1;\n              break;\n          case 2:\n              // (, line 148\n              // delete, line 148\n              if (!base.slice_del())\n              {\n                  return false;\n              }\n              I_prefix = 3;\n              I_measure -= 1;\n              break;\n          case 3:\n              // (, line 149\n              I_prefix = 1;\n              // <-, line 149\n              if (!base.slice_from(\"s\"))\n              {\n                  return false;\n              }\n              I_measure -= 1;\n              break;\n          case 4:\n              // (, line 150\n              I_prefix = 3;\n              // <-, line 150\n              if (!base.slice_from(\"s\"))\n              {\n                  return false;\n              }\n              I_measure -= 1;\n              break;\n          case 5:\n              // (, line 151\n              I_prefix = 1;\n              I_measure -= 1;\n              // or, line 151\n              lab0: {\n                  var /** number */ v_1 = base.cursor;\n                  lab1: {\n                      // and, line 151\n                      var /** number */ v_2 = base.cursor;\n                      if (!(base.in_grouping(g_vowel, 97, 117)))\n                      {\n                          break lab1;\n                      }\n                      base.cursor = v_2;\n                      // <-, line 151\n                      if (!base.slice_from(\"p\"))\n                      {\n                          return false;\n                      }\n                      break lab0;\n                  }\n                  base.cursor = v_1;\n                  // delete, line 151\n                  if (!base.slice_del())\n                  {\n                      return false;\n                  }\n              }\n              break;\n          case 6:\n              // (, line 152\n              I_prefix = 3;\n              I_measure -= 1;\n              // or, line 152\n              lab2: {\n                  var /** number */ v_3 = base.cursor;\n                  lab3: {\n                      // and, line 152\n                      var /** number */ v_4 = base.cursor;\n                      if (!(base.in_grouping(g_vowel, 97, 117)))\n                      {\n                          break lab3;\n                      }\n                      base.cursor = v_4;\n                      // <-, line 152\n                      if (!base.slice_from(\"p\"))\n                      {\n                          return false;\n                      }\n                      break lab2;\n                  }\n                  base.cursor = v_3;\n                  // delete, line 152\n                  if (!base.slice_del())\n                  {\n                      return false;\n                  }\n              }\n              break;\n      }\n      return true;\n  };\n\n  /** @return {boolean} */\n  function r_remove_second_order_prefix() {\n      var /** number */ among_var;\n      // (, line 156\n      // [, line 162\n      base.bra = base.cursor;\n      // substring, line 162\n      among_var = base.find_among(a_4);\n      if (among_var == 0)\n      {\n          return false;\n      }\n      // ], line 162\n      base.ket = base.cursor;\n      switch (among_var) {\n          case 1:\n              // (, line 163\n              // delete, line 163\n              if (!base.slice_del())\n              {\n                  return false;\n              }\n              I_prefix = 2;\n              I_measure -= 1;\n              break;\n          case 2:\n              // (, line 164\n              // <-, line 164\n              if (!base.slice_from(\"ajar\"))\n              {\n                  return false;\n              }\n              I_measure -= 1;\n              break;\n          case 3:\n              // (, line 165\n              // delete, line 165\n              if (!base.slice_del())\n              {\n                  return false;\n              }\n              I_prefix = 4;\n              I_measure -= 1;\n              break;\n          case 4:\n              // (, line 166\n              // <-, line 166\n              if (!base.slice_from(\"ajar\"))\n              {\n                  return false;\n              }\n              I_prefix = 4;\n              I_measure -= 1;\n              break;\n      }\n      return true;\n  };\n\n  this.stem = /** @return {boolean} */ function() {\n      // (, line 171\n      I_measure = 0;\n      // do, line 173\n      var /** number */ v_1 = base.cursor;\n      lab0: {\n          // (, line 173\n          // repeat, line 173\n          while(true)\n          {\n              var /** number */ v_2 = base.cursor;\n              lab1: {\n                  // (, line 173\n                  // gopast, line 173\n                  golab2: while(true)\n                  {\n                      lab3: {\n                          if (!(base.in_grouping(g_vowel, 97, 117)))\n                          {\n                              break lab3;\n                          }\n                          break golab2;\n                      }\n                      if (base.cursor >= base.limit)\n                      {\n                          break lab1;\n                      }\n                      base.cursor++;\n                  }\n                  I_measure += 1;\n                  continue;\n              }\n              base.cursor = v_2;\n              break;\n          }\n      }\n      base.cursor = v_1;\n      if (!(I_measure > 2))\n      {\n          return false;\n      }\n      I_prefix = 0;\n      // backwards, line 176\n      base.limit_backward = base.cursor; base.cursor = base.limit;\n      // (, line 176\n      // do, line 177\n      var /** number */ v_4 = base.limit - base.cursor;\n      // call remove_particle, line 177\n      r_remove_particle();\n      base.cursor = base.limit - v_4;\n      if (!(I_measure > 2))\n      {\n          return false;\n      }\n      // do, line 179\n      var /** number */ v_5 = base.limit - base.cursor;\n      // call remove_possessive_pronoun, line 179\n      r_remove_possessive_pronoun();\n      base.cursor = base.limit - v_5;\n      base.cursor = base.limit_backward;\n      if (!(I_measure > 2))\n      {\n          return false;\n      }\n      // or, line 188\n      lab4: {\n          var /** number */ v_6 = base.cursor;\n          lab5: {\n              // test, line 182\n              var /** number */ v_7 = base.cursor;\n              // (, line 182\n              // call remove_first_order_prefix, line 183\n              if (!r_remove_first_order_prefix())\n              {\n                  break lab5;\n              }\n              // do, line 184\n              var /** number */ v_8 = base.cursor;\n              lab6: {\n                  // (, line 184\n                  // test, line 185\n                  var /** number */ v_9 = base.cursor;\n                  // (, line 185\n                  if (!(I_measure > 2))\n                  {\n                      break lab6;\n                  }\n                  // backwards, line 185\n                  base.limit_backward = base.cursor; base.cursor = base.limit;\n                  // call remove_suffix, line 185\n                  if (!r_remove_suffix())\n                  {\n                      break lab6;\n                  }\n                  base.cursor = base.limit_backward;\n                  base.cursor = v_9;\n                  if (!(I_measure > 2))\n                  {\n                      break lab6;\n                  }\n                  // call remove_second_order_prefix, line 186\n                  if (!r_remove_second_order_prefix())\n                  {\n                      break lab6;\n                  }\n              }\n              base.cursor = v_8;\n              base.cursor = v_7;\n              break lab4;\n          }\n          base.cursor = v_6;\n          // (, line 188\n          // do, line 189\n          var /** number */ v_10 = base.cursor;\n          // call remove_second_order_prefix, line 189\n          r_remove_second_order_prefix();\n          base.cursor = v_10;\n          // do, line 190\n          var /** number */ v_11 = base.cursor;\n          lab7: {\n              // (, line 190\n              if (!(I_measure > 2))\n              {\n                  break lab7;\n              }\n              // backwards, line 190\n              base.limit_backward = base.cursor; base.cursor = base.limit;\n              // call remove_suffix, line 190\n              if (!r_remove_suffix())\n              {\n                  break lab7;\n              }\n              base.cursor = base.limit_backward;\n          }\n          base.cursor = v_11;\n      }\n      return true;\n  };\n\n  /**@return{string}*/\n  this['stemWord'] = function(/**string*/word) {\n      base.setCurrent(word);\n      this.stem();\n      return base.getCurrent();\n  };\n};\n\nmodule.exports = IndonesianStemmer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}