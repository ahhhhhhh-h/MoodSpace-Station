{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  Tokenizer\n} = require('@nlpjs/core');\nconst dictionary = require('./dictionary');\nclass TokenizerZh extends Tokenizer {\n  constructor(container, shouldTokenize) {\n    super(container, shouldTokenize);\n    this.name = 'tokenizer-zh';\n  }\n  innerTokenize(text) {\n    return dictionary.segment(text);\n  }\n}\nmodule.exports = TokenizerZh;","map":{"version":3,"names":["Tokenizer","require","dictionary","TokenizerZh","constructor","container","shouldTokenize","name","innerTokenize","text","segment","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-zh/src/tokenizer-zh.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Tokenizer } = require('@nlpjs/core');\nconst dictionary = require('./dictionary');\n\nclass TokenizerZh extends Tokenizer {\n  constructor(container, shouldTokenize) {\n    super(container, shouldTokenize);\n    this.name = 'tokenizer-zh';\n  }\n\n  innerTokenize(text) {\n    return dictionary.segment(text);\n  }\n}\n\nmodule.exports = TokenizerZh;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC5C,MAAMC,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;AAE1C,MAAME,WAAW,SAASH,SAAS,CAAC;EAClCI,WAAWA,CAACC,SAAS,EAAEC,cAAc,EAAE;IACrC,KAAK,CAACD,SAAS,EAAEC,cAAc,CAAC;IAChC,IAAI,CAACC,IAAI,GAAG,cAAc;EAC5B;EAEAC,aAAaA,CAACC,IAAI,EAAE;IAClB,OAAOP,UAAU,CAACQ,OAAO,CAACD,IAAI,CAAC;EACjC;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGT,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}