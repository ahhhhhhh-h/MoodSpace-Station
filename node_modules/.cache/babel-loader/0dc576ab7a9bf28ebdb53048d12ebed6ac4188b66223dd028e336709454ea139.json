{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  defaultContainer\n} = require('./container');\n\n/**\n * Class for a simple timer\n */\nclass Timer {\n  /**\n   * Constructor of the class\n   * @param {object} container Parent container\n   */\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'timer';\n  }\n\n  /**\n   * Starts the timer\n   * @param {object} input\n   */\n  start(input) {\n    if (input) {\n      input.hrstart = new Date();\n    }\n    return input;\n  }\n\n  /**\n   * Stops the timer\n   * @param {object} srcInput\n   */\n  stop(srcInput) {\n    const input = srcInput;\n    if (input && input.hrstart) {\n      const hrend = new Date();\n      input.elapsed = hrend.getTime() - input.hrstart.getTime();\n      delete input.hrstart;\n    }\n    return input;\n  }\n  run(srcInput) {\n    this.start(srcInput);\n  }\n}\nmodule.exports = Timer;","map":{"version":3,"names":["defaultContainer","require","Timer","constructor","container","name","start","input","hrstart","Date","stop","srcInput","hrend","elapsed","getTime","run","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/core/src/timer.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('./container');\n\n/**\n * Class for a simple timer\n */\nclass Timer {\n  /**\n   * Constructor of the class\n   * @param {object} container Parent container\n   */\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'timer';\n  }\n\n  /**\n   * Starts the timer\n   * @param {object} input\n   */\n  start(input) {\n    if (input) {\n      input.hrstart = new Date();\n    }\n    return input;\n  }\n\n  /**\n   * Stops the timer\n   * @param {object} srcInput\n   */\n  stop(srcInput) {\n    const input = srcInput;\n    if (input && input.hrstart) {\n      const hrend = new Date();\n      input.elapsed = hrend.getTime() - input.hrstart.getTime();\n      delete input.hrstart;\n    }\n    return input;\n  }\n\n  run(srcInput) {\n    this.start(srcInput);\n  }\n}\n\nmodule.exports = Timer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAiB,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAEnD;AACA;AACA;AACA,MAAMC,KAAK,CAAC;EACV;AACF;AACA;AACA;EACEC,WAAWA,CAACC,SAAS,GAAGJ,gBAAgB,EAAE;IACxC,IAAI,CAACI,SAAS,GAAGA,SAAS,CAACA,SAAS,IAAIA,SAAS;IACjD,IAAI,CAACC,IAAI,GAAG,OAAO;EACrB;;EAEA;AACF;AACA;AACA;EACEC,KAAKA,CAACC,KAAK,EAAE;IACX,IAAIA,KAAK,EAAE;MACTA,KAAK,CAACC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5B;IACA,OAAOF,KAAK;EACd;;EAEA;AACF;AACA;AACA;EACEG,IAAIA,CAACC,QAAQ,EAAE;IACb,MAAMJ,KAAK,GAAGI,QAAQ;IACtB,IAAIJ,KAAK,IAAIA,KAAK,CAACC,OAAO,EAAE;MAC1B,MAAMI,KAAK,GAAG,IAAIH,IAAI,CAAC,CAAC;MACxBF,KAAK,CAACM,OAAO,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,GAAGP,KAAK,CAACC,OAAO,CAACM,OAAO,CAAC,CAAC;MACzD,OAAOP,KAAK,CAACC,OAAO;IACtB;IACA,OAAOD,KAAK;EACd;EAEAQ,GAAGA,CAACJ,QAAQ,EAAE;IACZ,IAAI,CAACL,KAAK,CAACK,QAAQ,CAAC;EACtB;AACF;AAEAK,MAAM,CAACC,OAAO,GAAGf,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}