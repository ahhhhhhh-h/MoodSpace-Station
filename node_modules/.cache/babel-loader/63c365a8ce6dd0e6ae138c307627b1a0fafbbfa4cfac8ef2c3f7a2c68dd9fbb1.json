{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst http = require('http');\nconst https = require('https');\nconst HttpsProxyAgent = require('https-proxy-agent');\nconst HttpProxyAgent = require('http-proxy-agent');\nconst querystring = require('querystring');\nconst url = require('url');\nfunction request(options) {\n  if (typeof options === 'string') {\n    options = {\n      url: options\n    };\n  }\n  let client;\n  if (options.url) {\n    client = options.url.startsWith('http:') ? http : https;\n    const requrl = url.parse(options.url);\n    options.host = requrl.hostname;\n    options.port = requrl.port;\n    if (!options.port) {\n      options.port = options.url.startsWith('http:') ? 80 : 443;\n    }\n    options.path = requrl.path;\n    delete options.url;\n  }\n  if (!client) {\n    client = options.port === 80 ? http : https;\n  }\n  let {\n    postData\n  } = options;\n  if (postData) {\n    if (typeof postData !== 'string') {\n      postData = querystring.stringify(postData);\n    }\n    delete options.postData;\n    if (!options.headers) {\n      options.headers = {};\n    }\n    if (!options.headers['Content-Type']) {\n      options.headers['Content-Type'] = 'application/x-wwww-form-urlencoded';\n    }\n    if (!options.headers['Content-Length']) {\n      options.headers['Content-Length'] = postData.length;\n    }\n  }\n  if (!options.method) {\n    options.method = 'GET';\n  }\n  const proxyServer = options.proxy || process.env.https_proxy || process.env.HTTPS_PROXY || process.env.http_proxy || process.env.HTTP_PROXY;\n  if (proxyServer) {\n    delete options.proxy;\n    if (client === https) {\n      options.agent = new HttpsProxyAgent(proxyServer);\n    } else {\n      options.agent = new HttpProxyAgent(proxyServer);\n    }\n    if (!options.headers) {\n      options.headers = {};\n    }\n    options.headers['Proxy-Connections'] = 'keep-alive';\n  }\n  return new Promise((resolve, reject) => {\n    const req = client.request(options, res => {\n      let result = '';\n      res.on('data', chunk => {\n        result += chunk;\n      });\n      res.on('end', () => {\n        try {\n          const obj = JSON.parse(result);\n          resolve(obj);\n        } catch (err) {\n          resolve(result);\n        }\n      });\n      res.on('error', err => reject(err));\n    });\n    req.on('error', err => reject(err));\n    if (postData) {\n      req.write(postData);\n    }\n    req.end();\n  });\n}\nmodule.exports = request;","map":{"version":3,"names":["http","require","https","HttpsProxyAgent","HttpProxyAgent","querystring","url","request","options","client","startsWith","requrl","parse","host","hostname","port","path","postData","stringify","headers","length","method","proxyServer","proxy","process","env","https_proxy","HTTPS_PROXY","http_proxy","HTTP_PROXY","agent","Promise","resolve","reject","req","res","result","on","chunk","obj","JSON","err","write","end","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/request/src/request.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst http = require('http');\nconst https = require('https');\nconst HttpsProxyAgent = require('https-proxy-agent');\nconst HttpProxyAgent = require('http-proxy-agent');\nconst querystring = require('querystring');\nconst url = require('url');\n\nfunction request(options) {\n  if (typeof options === 'string') {\n    options = {\n      url: options,\n    };\n  }\n  let client;\n  if (options.url) {\n    client = options.url.startsWith('http:') ? http : https;\n    const requrl = url.parse(options.url);\n    options.host = requrl.hostname;\n    options.port = requrl.port;\n    if (!options.port) {\n      options.port = options.url.startsWith('http:') ? 80 : 443;\n    }\n    options.path = requrl.path;\n    delete options.url;\n  }\n  if (!client) {\n    client = options.port === 80 ? http : https;\n  }\n  let { postData } = options;\n  if (postData) {\n    if (typeof postData !== 'string') {\n      postData = querystring.stringify(postData);\n    }\n    delete options.postData;\n    if (!options.headers) {\n      options.headers = {};\n    }\n    if (!options.headers['Content-Type']) {\n      options.headers['Content-Type'] = 'application/x-wwww-form-urlencoded';\n    }\n    if (!options.headers['Content-Length']) {\n      options.headers['Content-Length'] = postData.length;\n    }\n  }\n  if (!options.method) {\n    options.method = 'GET';\n  }\n  const proxyServer =\n    options.proxy ||\n    process.env.https_proxy ||\n    process.env.HTTPS_PROXY ||\n    process.env.http_proxy ||\n    process.env.HTTP_PROXY;\n  if (proxyServer) {\n    delete options.proxy;\n    if (client === https) {\n      options.agent = new HttpsProxyAgent(proxyServer);\n    } else {\n      options.agent = new HttpProxyAgent(proxyServer);\n    }\n    if (!options.headers) {\n      options.headers = {};\n    }\n    options.headers['Proxy-Connections'] = 'keep-alive';\n  }\n\n  return new Promise((resolve, reject) => {\n    const req = client.request(options, (res) => {\n      let result = '';\n      res.on('data', (chunk) => {\n        result += chunk;\n      });\n      res.on('end', () => {\n        try {\n          const obj = JSON.parse(result);\n          resolve(obj);\n        } catch (err) {\n          resolve(result);\n        }\n      });\n      res.on('error', (err) => reject(err));\n    });\n    req.on('error', (err) => reject(err));\n    if (postData) {\n      req.write(postData);\n    }\n    req.end();\n  });\n}\n\nmodule.exports = request;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}