{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst Evaluator = require('./evaluator');\nconst evaluator = new Evaluator();\nconst dictionary = {};\n\n/**\n * Process a string using a dictionary to don't repeat the regex match.\n * @param {string} str String to be processed.\n * @param {object[]} context Context with the variables to be replaced.\n * @returns {string} String processed with context variables replaced.\n */\nfunction processString(str, context) {\n  if (dictionary[str] === undefined) {\n    dictionary[str] = str.match(/{{\\s*([^}]+)\\s*}}/g) || [];\n  }\n  const matches = dictionary[str];\n  return matches.reduce((p, c) => {\n    const solution = evaluator.evaluate(c.substr(2, c.length - 4), context);\n    return solution !== null && solution !== undefined ? p.replace(c, solution) : p;\n  }, str);\n}\n\n/**\n * Traverse the object replacing strings using context.\n * @param {object} obj Object to be replaced\n * @param {object} context Context variables\n * @returns {object} Object traversed in deep replacing strings.\n */\nfunction process(obj, context) {\n  if (typeof obj === 'string') {\n    return processString(obj, context);\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(x => process(x, context));\n  }\n  if (obj !== null && typeof obj === 'object') {\n    const keys = Object.keys(obj);\n    const result = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      result[keys[i]] = process(obj[keys[i]], context);\n    }\n    return result;\n  }\n  return obj;\n}\nfunction compile(str) {\n  return (context = {}) => process(str, context);\n}\nmodule.exports = compile;","map":{"version":3,"names":["Evaluator","require","evaluator","dictionary","processString","str","context","undefined","match","matches","reduce","p","c","solution","evaluate","substr","length","replace","process","obj","Array","isArray","map","x","keys","Object","result","i","compile","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/evaluator/src/compile.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst Evaluator = require('./evaluator');\n\nconst evaluator = new Evaluator();\n\nconst dictionary = {};\n\n/**\n * Process a string using a dictionary to don't repeat the regex match.\n * @param {string} str String to be processed.\n * @param {object[]} context Context with the variables to be replaced.\n * @returns {string} String processed with context variables replaced.\n */\nfunction processString(str, context) {\n  if (dictionary[str] === undefined) {\n    dictionary[str] = str.match(/{{\\s*([^}]+)\\s*}}/g) || [];\n  }\n  const matches = dictionary[str];\n  return matches.reduce((p, c) => {\n    const solution = evaluator.evaluate(c.substr(2, c.length - 4), context);\n    return solution !== null && solution !== undefined\n      ? p.replace(c, solution)\n      : p;\n  }, str);\n}\n\n/**\n * Traverse the object replacing strings using context.\n * @param {object} obj Object to be replaced\n * @param {object} context Context variables\n * @returns {object} Object traversed in deep replacing strings.\n */\nfunction process(obj, context) {\n  if (typeof obj === 'string') {\n    return processString(obj, context);\n  }\n  if (Array.isArray(obj)) {\n    return obj.map((x) => process(x, context));\n  }\n  if (obj !== null && typeof obj === 'object') {\n    const keys = Object.keys(obj);\n    const result = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      result[keys[i]] = process(obj[keys[i]], context);\n    }\n    return result;\n  }\n  return obj;\n}\n\nfunction compile(str) {\n  return (context = {}) => process(str, context);\n}\n\nmodule.exports = compile;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AAExC,MAAMC,SAAS,GAAG,IAAIF,SAAS,CAAC,CAAC;AAEjC,MAAMG,UAAU,GAAG,CAAC,CAAC;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,GAAG,EAAEC,OAAO,EAAE;EACnC,IAAIH,UAAU,CAACE,GAAG,CAAC,KAAKE,SAAS,EAAE;IACjCJ,UAAU,CAACE,GAAG,CAAC,GAAGA,GAAG,CAACG,KAAK,CAAC,oBAAoB,CAAC,IAAI,EAAE;EACzD;EACA,MAAMC,OAAO,GAAGN,UAAU,CAACE,GAAG,CAAC;EAC/B,OAAOI,OAAO,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC9B,MAAMC,QAAQ,GAAGX,SAAS,CAACY,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,CAAC,EAAEH,CAAC,CAACI,MAAM,GAAG,CAAC,CAAC,EAAEV,OAAO,CAAC;IACvE,OAAOO,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKN,SAAS,GAC9CI,CAAC,CAACM,OAAO,CAACL,CAAC,EAAEC,QAAQ,CAAC,GACtBF,CAAC;EACP,CAAC,EAAEN,GAAG,CAAC;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASa,OAAOA,CAACC,GAAG,EAAEb,OAAO,EAAE;EAC7B,IAAI,OAAOa,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAOf,aAAa,CAACe,GAAG,EAAEb,OAAO,CAAC;EACpC;EACA,IAAIc,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACtB,OAAOA,GAAG,CAACG,GAAG,CAAEC,CAAC,IAAKL,OAAO,CAACK,CAAC,EAAEjB,OAAO,CAAC,CAAC;EAC5C;EACA,IAAIa,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3C,MAAMK,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACL,GAAG,CAAC;IAC7B,MAAMO,MAAM,GAAG,CAAC,CAAC;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACR,MAAM,EAAEW,CAAC,IAAI,CAAC,EAAE;MACvCD,MAAM,CAACF,IAAI,CAACG,CAAC,CAAC,CAAC,GAAGT,OAAO,CAACC,GAAG,CAACK,IAAI,CAACG,CAAC,CAAC,CAAC,EAAErB,OAAO,CAAC;IAClD;IACA,OAAOoB,MAAM;EACf;EACA,OAAOP,GAAG;AACZ;AAEA,SAASS,OAAOA,CAACvB,GAAG,EAAE;EACpB,OAAO,CAACC,OAAO,GAAG,CAAC,CAAC,KAAKY,OAAO,CAACb,GAAG,EAAEC,OAAO,CAAC;AAChD;AAEAuB,MAAM,CAACC,OAAO,GAAGF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}