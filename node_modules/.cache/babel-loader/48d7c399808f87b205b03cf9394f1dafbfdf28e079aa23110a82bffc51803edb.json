{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst {\n  Tokenizer\n} = require('@nlpjs/core');\nconst JapaneseRules = require('./japanese-rules.json');\nclass TokenizerJa extends Tokenizer {\n  constructor(container, shouldTokenize) {\n    super(container, shouldTokenize);\n    this.name = 'tokenizer-ja';\n    this.chartype = [[/[〇一二三四五六七八九十百千万億兆]/, 'M'], [/[一-鿌〆]/, 'H'], [/[ぁ-ゟ]/, 'I'], [/[゠-ヿ]/, 'K'], [/[a-zA-Z]/, 'A'], [/[0-9]/, 'N']];\n    this.bias = -332;\n  }\n  ctype(str) {\n    for (let i = 0, l = this.chartype.length; i < l; i += 1) {\n      if (str.match(this.chartype[i][0])) {\n        return this.chartype[i][1];\n      }\n    }\n    return 'O';\n  }\n  ts(v) {\n    return v || 0;\n  }\n  removePuncTokens(tokens) {\n    return tokens.map(token => token.replace(/[＿－・，、；：！？．。（）［］｛｝｢｣＠＊＼／＆＃％｀＾＋＜＝＞｜～≪≫─＄＂_\\-･,､;:!?.｡()[\\]{}「」@*/&#%`^+<=>|~«»$\"\\s]+/g, '')).filter(token => token !== '');\n  }\n  innerTokenize(srcText) {\n    if (!srcText || srcText === '') {\n      return [];\n    }\n    const text = srcText;\n    const result = [];\n    const seg = ['B3', 'B2', 'B1'];\n    const ctype = ['O', 'O', 'O'];\n    const o = text.split('');\n    for (let i = 0, l = o.length; i < l; i += 1) {\n      seg.push(o[i]);\n      ctype.push(this.ctype(o[i]));\n    }\n    seg.push('E1');\n    seg.push('E2');\n    seg.push('E3');\n    ctype.push('O');\n    ctype.push('O');\n    ctype.push('O');\n    let word = seg[3];\n    let p1 = 'U';\n    let p2 = 'U';\n    let p3 = 'U';\n    for (let i = 4, l = seg.length - 3; i < l; i += 1) {\n      let score = this.bias;\n      const w1 = seg[i - 3];\n      const w2 = seg[i - 2];\n      const w3 = seg[i - 1];\n      const w4 = seg[i];\n      const w5 = seg[i + 1];\n      const w6 = seg[i + 2];\n      const c1 = ctype[i - 3];\n      const c2 = ctype[i - 2];\n      const c3 = ctype[i - 1];\n      const c4 = ctype[i];\n      const c5 = ctype[i + 1];\n      const c6 = ctype[i + 2];\n      score += this.ts(JapaneseRules.UP1[p1]);\n      score += this.ts(JapaneseRules.UP2[p2]);\n      score += this.ts(JapaneseRules.UP3[p3]);\n      score += this.ts(JapaneseRules.BP1[p1 + p2]);\n      score += this.ts(JapaneseRules.BP2[p2 + p3]);\n      score += this.ts(JapaneseRules.UW1[w1]);\n      score += this.ts(JapaneseRules.UW2[w2]);\n      score += this.ts(JapaneseRules.UW3[w3]);\n      score += this.ts(JapaneseRules.UW4[w4]);\n      score += this.ts(JapaneseRules.UW5[w5]);\n      score += this.ts(JapaneseRules.UW6[w6]);\n      score += this.ts(JapaneseRules.BW1[w2 + w3]);\n      score += this.ts(JapaneseRules.BW2[w3 + w4]);\n      score += this.ts(JapaneseRules.BW3[w4 + w5]);\n      score += this.ts(JapaneseRules.TW1[w1 + w2 + w3]);\n      score += this.ts(JapaneseRules.TW2[w2 + w3 + w4]);\n      score += this.ts(JapaneseRules.TW3[w3 + w4 + w5]);\n      score += this.ts(JapaneseRules.TW4[w4 + w5 + w6]);\n      score += this.ts(JapaneseRules.UC1[c1]);\n      score += this.ts(JapaneseRules.UC2[c2]);\n      score += this.ts(JapaneseRules.UC3[c3]);\n      score += this.ts(JapaneseRules.UC4[c4]);\n      score += this.ts(JapaneseRules.UC5[c5]);\n      score += this.ts(JapaneseRules.UC6[c6]);\n      score += this.ts(JapaneseRules.BC1[c2 + c3]);\n      score += this.ts(JapaneseRules.BC2[c3 + c4]);\n      score += this.ts(JapaneseRules.BC3[c4 + c5]);\n      score += this.ts(JapaneseRules.TC1[c1 + c2 + c3]);\n      score += this.ts(JapaneseRules.TC2[c2 + c3 + c4]);\n      score += this.ts(JapaneseRules.TC3[c3 + c4 + c5]);\n      score += this.ts(JapaneseRules.TC4[c4 + c5 + c6]);\n      score += this.ts(JapaneseRules.UQ1[p1 + c1]);\n      score += this.ts(JapaneseRules.UQ2[p2 + c2]);\n      score += this.ts(JapaneseRules.UQ3[p3 + c3]);\n      score += this.ts(JapaneseRules.BQ1[p2 + c2 + c3]);\n      score += this.ts(JapaneseRules.BQ2[p2 + c3 + c4]);\n      score += this.ts(JapaneseRules.BQ3[p3 + c2 + c3]);\n      score += this.ts(JapaneseRules.BQ4[p3 + c3 + c4]);\n      score += this.ts(JapaneseRules.TQ1[p2 + c1 + c2 + c3]);\n      score += this.ts(JapaneseRules.TQ2[p2 + c2 + c3 + c4]);\n      score += this.ts(JapaneseRules.TQ3[p3 + c1 + c2 + c3]);\n      score += this.ts(JapaneseRules.TQ4[p3 + c2 + c3 + c4]);\n      let p = 'O';\n      if (score > 0) {\n        result.push(word);\n        word = '';\n        p = 'B';\n      }\n      p1 = p2;\n      p2 = p3;\n      p3 = p;\n      word += seg[i];\n    }\n    result.push(word);\n    return this.removePuncTokens(result);\n  }\n}\nmodule.exports = TokenizerJa;","map":{"version":3,"names":["Tokenizer","require","JapaneseRules","TokenizerJa","constructor","container","shouldTokenize","name","chartype","bias","ctype","str","i","l","length","match","ts","v","removePuncTokens","tokens","map","token","replace","filter","innerTokenize","srcText","text","result","seg","o","split","push","word","p1","p2","p3","score","w1","w2","w3","w4","w5","w6","c1","c2","c3","c4","c5","c6","UP1","UP2","UP3","BP1","BP2","UW1","UW2","UW3","UW4","UW5","UW6","BW1","BW2","BW3","TW1","TW2","TW3","TW4","UC1","UC2","UC3","UC4","UC5","UC6","BC1","BC2","BC3","TC1","TC2","TC3","TC4","UQ1","UQ2","UQ3","BQ1","BQ2","BQ3","BQ4","TQ1","TQ2","TQ3","TQ4","p","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-ja/src/tokenizer-ja.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { Tokenizer } = require('@nlpjs/core');\nconst JapaneseRules = require('./japanese-rules.json');\n\nclass TokenizerJa extends Tokenizer {\n  constructor(container, shouldTokenize) {\n    super(container, shouldTokenize);\n    this.name = 'tokenizer-ja';\n    this.chartype = [\n      [/[〇一二三四五六七八九十百千万億兆]/, 'M'],\n      [/[一-鿌〆]/, 'H'],\n      [/[ぁ-ゟ]/, 'I'],\n      [/[゠-ヿ]/, 'K'],\n      [/[a-zA-Z]/, 'A'],\n      [/[0-9]/, 'N'],\n    ];\n    this.bias = -332;\n  }\n\n  ctype(str) {\n    for (let i = 0, l = this.chartype.length; i < l; i += 1) {\n      if (str.match(this.chartype[i][0])) {\n        return this.chartype[i][1];\n      }\n    }\n    return 'O';\n  }\n\n  ts(v) {\n    return v || 0;\n  }\n\n  removePuncTokens(tokens) {\n    return tokens\n      .map((token) =>\n        token.replace(\n          /[＿－・，、；：！？．。（）［］｛｝｢｣＠＊＼／＆＃％｀＾＋＜＝＞｜～≪≫─＄＂_\\-･,､;:!?.｡()[\\]{}「」@*/&#%`^+<=>|~«»$\"\\s]+/g,\n          ''\n        )\n      )\n      .filter((token) => token !== '');\n  }\n\n  innerTokenize(srcText) {\n    if (!srcText || srcText === '') {\n      return [];\n    }\n    const text = srcText;\n    const result = [];\n    const seg = ['B3', 'B2', 'B1'];\n    const ctype = ['O', 'O', 'O'];\n    const o = text.split('');\n    for (let i = 0, l = o.length; i < l; i += 1) {\n      seg.push(o[i]);\n      ctype.push(this.ctype(o[i]));\n    }\n    seg.push('E1');\n    seg.push('E2');\n    seg.push('E3');\n    ctype.push('O');\n    ctype.push('O');\n    ctype.push('O');\n    let word = seg[3];\n    let p1 = 'U';\n    let p2 = 'U';\n    let p3 = 'U';\n    for (let i = 4, l = seg.length - 3; i < l; i += 1) {\n      let score = this.bias;\n      const w1 = seg[i - 3];\n      const w2 = seg[i - 2];\n      const w3 = seg[i - 1];\n      const w4 = seg[i];\n      const w5 = seg[i + 1];\n      const w6 = seg[i + 2];\n      const c1 = ctype[i - 3];\n      const c2 = ctype[i - 2];\n      const c3 = ctype[i - 1];\n      const c4 = ctype[i];\n      const c5 = ctype[i + 1];\n      const c6 = ctype[i + 2];\n      score += this.ts(JapaneseRules.UP1[p1]);\n      score += this.ts(JapaneseRules.UP2[p2]);\n      score += this.ts(JapaneseRules.UP3[p3]);\n      score += this.ts(JapaneseRules.BP1[p1 + p2]);\n      score += this.ts(JapaneseRules.BP2[p2 + p3]);\n      score += this.ts(JapaneseRules.UW1[w1]);\n      score += this.ts(JapaneseRules.UW2[w2]);\n      score += this.ts(JapaneseRules.UW3[w3]);\n      score += this.ts(JapaneseRules.UW4[w4]);\n      score += this.ts(JapaneseRules.UW5[w5]);\n      score += this.ts(JapaneseRules.UW6[w6]);\n      score += this.ts(JapaneseRules.BW1[w2 + w3]);\n      score += this.ts(JapaneseRules.BW2[w3 + w4]);\n      score += this.ts(JapaneseRules.BW3[w4 + w5]);\n      score += this.ts(JapaneseRules.TW1[w1 + w2 + w3]);\n      score += this.ts(JapaneseRules.TW2[w2 + w3 + w4]);\n      score += this.ts(JapaneseRules.TW3[w3 + w4 + w5]);\n      score += this.ts(JapaneseRules.TW4[w4 + w5 + w6]);\n      score += this.ts(JapaneseRules.UC1[c1]);\n      score += this.ts(JapaneseRules.UC2[c2]);\n      score += this.ts(JapaneseRules.UC3[c3]);\n      score += this.ts(JapaneseRules.UC4[c4]);\n      score += this.ts(JapaneseRules.UC5[c5]);\n      score += this.ts(JapaneseRules.UC6[c6]);\n      score += this.ts(JapaneseRules.BC1[c2 + c3]);\n      score += this.ts(JapaneseRules.BC2[c3 + c4]);\n      score += this.ts(JapaneseRules.BC3[c4 + c5]);\n      score += this.ts(JapaneseRules.TC1[c1 + c2 + c3]);\n      score += this.ts(JapaneseRules.TC2[c2 + c3 + c4]);\n      score += this.ts(JapaneseRules.TC3[c3 + c4 + c5]);\n      score += this.ts(JapaneseRules.TC4[c4 + c5 + c6]);\n      score += this.ts(JapaneseRules.UQ1[p1 + c1]);\n      score += this.ts(JapaneseRules.UQ2[p2 + c2]);\n      score += this.ts(JapaneseRules.UQ3[p3 + c3]);\n      score += this.ts(JapaneseRules.BQ1[p2 + c2 + c3]);\n      score += this.ts(JapaneseRules.BQ2[p2 + c3 + c4]);\n      score += this.ts(JapaneseRules.BQ3[p3 + c2 + c3]);\n      score += this.ts(JapaneseRules.BQ4[p3 + c3 + c4]);\n      score += this.ts(JapaneseRules.TQ1[p2 + c1 + c2 + c3]);\n      score += this.ts(JapaneseRules.TQ2[p2 + c2 + c3 + c4]);\n      score += this.ts(JapaneseRules.TQ3[p3 + c1 + c2 + c3]);\n      score += this.ts(JapaneseRules.TQ4[p3 + c2 + c3 + c4]);\n      let p = 'O';\n      if (score > 0) {\n        result.push(word);\n        word = '';\n        p = 'B';\n      }\n      p1 = p2;\n      p2 = p3;\n      p3 = p;\n      word += seg[i];\n    }\n    result.push(word);\n    return this.removePuncTokens(result);\n  }\n}\n\nmodule.exports = TokenizerJa;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}