{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  defaultContainer\n} = require('./container');\nconst Normalizer = require('./normalizer');\nclass Tokenizer {\n  constructor(container = defaultContainer, shouldNormalize = false) {\n    this.container = container.container || container;\n    this.name = 'tokenize';\n    this.shouldNormalize = shouldNormalize;\n  }\n  getNormalizer() {\n    if (!this.normalizer) {\n      this.normalizer = this.container.get(`normalizer-${this.name.slice(-2)}`) || new Normalizer();\n    }\n    return this.normalizer;\n  }\n  normalize(text, force) {\n    if (force === undefined && this.shouldNormalize || force === true) {\n      const normalizer = this.getNormalizer();\n      return normalizer.normalize(text);\n    }\n    return text;\n  }\n  innerTokenize(text) {\n    return text.split(/[\\s,.!?;:([\\]'\"¡¿)/]+/).filter(x => x);\n  }\n  tokenize(text, normalize) {\n    let result;\n    if (this.cache) {\n      const now = new Date();\n      const diff = Math.abs(now.getTime() - this.cache.created) / 3600000;\n      if (diff > 1) {\n        this.cache = undefined;\n      }\n    }\n    if (!this.cache) {\n      this.cache = {\n        created: new Date().getTime(),\n        normalized: {},\n        nonNormalized: {}\n      };\n    } else {\n      if (normalize) {\n        if (Object.prototype.hasOwnProperty.call(this.cache.normalized, text)) {\n          result = this.cache.normalized[text];\n        }\n      } else if (Object.prototype.hasOwnProperty.call(this.cache.nonNormalized, text)) {\n        result = this.cache.nonNormalized[text];\n      }\n      if (result) {\n        return result;\n      }\n    }\n    result = this.innerTokenize(this.normalize(text, normalize), normalize);\n    if (normalize) {\n      this.cache.normalized[text] = result;\n    } else {\n      this.cache.nonNormalized[text] = result;\n    }\n    return result;\n  }\n  async run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    let tokenizer = this.container.get(`tokenizer-${locale}`);\n    if (!tokenizer) {\n      const tokenizerBert = this.container.get(`tokenizer-bert`);\n      if (tokenizerBert && tokenizerBert.activeFor(locale)) {\n        tokenizer = tokenizerBert;\n      } else {\n        tokenizer = this;\n      }\n    }\n    const tokens = await tokenizer.tokenize(input.text, input);\n    input.tokens = tokens.filter(x => x);\n    return input;\n  }\n}\nmodule.exports = Tokenizer;","map":{"version":3,"names":["defaultContainer","require","Normalizer","Tokenizer","constructor","container","shouldNormalize","name","getNormalizer","normalizer","get","slice","normalize","text","force","undefined","innerTokenize","split","filter","x","tokenize","result","cache","now","Date","diff","Math","abs","getTime","created","normalized","nonNormalized","Object","prototype","hasOwnProperty","call","run","srcInput","input","locale","tokenizer","tokenizerBert","activeFor","tokens","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/core/src/tokenizer.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { defaultContainer } = require('./container');\nconst Normalizer = require('./normalizer');\n\nclass Tokenizer {\n  constructor(container = defaultContainer, shouldNormalize = false) {\n    this.container = container.container || container;\n\n    this.name = 'tokenize';\n    this.shouldNormalize = shouldNormalize;\n  }\n\n  getNormalizer() {\n    if (!this.normalizer) {\n      this.normalizer =\n        this.container.get(`normalizer-${this.name.slice(-2)}`) ||\n        new Normalizer();\n    }\n    return this.normalizer;\n  }\n\n  normalize(text, force) {\n    if ((force === undefined && this.shouldNormalize) || force === true) {\n      const normalizer = this.getNormalizer();\n      return normalizer.normalize(text);\n    }\n    return text;\n  }\n\n  innerTokenize(text) {\n    return text.split(/[\\s,.!?;:([\\]'\"¡¿)/]+/).filter((x) => x);\n  }\n\n  tokenize(text, normalize) {\n    let result;\n    if (this.cache) {\n      const now = new Date();\n      const diff = Math.abs(now.getTime() - this.cache.created) / 3600000;\n      if (diff > 1) {\n        this.cache = undefined;\n      }\n    }\n    if (!this.cache) {\n      this.cache = {\n        created: new Date().getTime(),\n        normalized: {},\n        nonNormalized: {},\n      };\n    } else {\n      if (normalize) {\n        if (Object.prototype.hasOwnProperty.call(this.cache.normalized, text)) {\n          result = this.cache.normalized[text];\n        }\n      } else if (\n        Object.prototype.hasOwnProperty.call(this.cache.nonNormalized, text)\n      ) {\n        result = this.cache.nonNormalized[text];\n      }\n      if (result) {\n        return result;\n      }\n    }\n    result = this.innerTokenize(this.normalize(text, normalize), normalize);\n    if (normalize) {\n      this.cache.normalized[text] = result;\n    } else {\n      this.cache.nonNormalized[text] = result;\n    }\n    return result;\n  }\n\n  async run(srcInput) {\n    const input = srcInput;\n    const locale = input.locale || 'en';\n    let tokenizer = this.container.get(`tokenizer-${locale}`);\n    if (!tokenizer) {\n      const tokenizerBert = this.container.get(`tokenizer-bert`);\n      if (tokenizerBert && tokenizerBert.activeFor(locale)) {\n        tokenizer = tokenizerBert;\n      } else {\n        tokenizer = this;\n      }\n    }\n    const tokens = await tokenizer.tokenize(input.text, input);\n    input.tokens = tokens.filter((x) => x);\n    return input;\n  }\n}\n\nmodule.exports = Tokenizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}