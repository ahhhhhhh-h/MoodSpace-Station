{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst fs = require('fs');\nconst request = require('./request');\nfunction isWeb(str) {\n  return typeof str === 'string' && (str.startsWith('https:') || str.startsWith('http:'));\n}\nfunction readFile(fileName) {\n  return new Promise(resolve => {\n    if (isWeb(fileName)) {\n      request(fileName).then(data => resolve(data)).catch(() => resolve(undefined));\n    } else {\n      try {\n        const data = fs.readFileSync(fileName, 'utf8');\n        resolve(data);\n      } catch (err) {\n        resolve(undefined);\n      }\n    }\n  });\n}\nfunction writeFile(fileName, data, format = 'utf8') {\n  return new Promise((resolve, reject) => {\n    if (isWeb(fileName)) {\n      reject(new Error('File cannot be written in web'));\n    } else {\n      try {\n        fs.writeFile(fileName, data, format, err => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(true);\n          }\n        });\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\nfunction existsSync(fileName) {\n  return fs.existsSync(fileName);\n}\nfunction lstatSync(fileName) {\n  return fs.lstatSync(fileName);\n}\nfunction readFileSync(fileName, encoding = 'utf8') {\n  return fs.readFileSync(fileName, encoding);\n}\nmodule.exports = {\n  readFile,\n  writeFile,\n  existsSync,\n  lstatSync,\n  readFileSync,\n  name: 'fs'\n};","map":{"version":3,"names":["fs","require","request","isWeb","str","startsWith","readFile","fileName","Promise","resolve","then","data","catch","undefined","readFileSync","err","writeFile","format","reject","Error","existsSync","lstatSync","encoding","module","exports","name"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/request/src/fs.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst fs = require('fs');\nconst request = require('./request');\n\nfunction isWeb(str) {\n  return (\n    typeof str === 'string' &&\n    (str.startsWith('https:') || str.startsWith('http:'))\n  );\n}\n\nfunction readFile(fileName) {\n  return new Promise((resolve) => {\n    if (isWeb(fileName)) {\n      request(fileName)\n        .then((data) => resolve(data))\n        .catch(() => resolve(undefined));\n    } else {\n      try {\n        const data = fs.readFileSync(fileName, 'utf8');\n        resolve(data);\n      } catch (err) {\n        resolve(undefined);\n      }\n    }\n  });\n}\n\nfunction writeFile(fileName, data, format = 'utf8') {\n  return new Promise((resolve, reject) => {\n    if (isWeb(fileName)) {\n      reject(new Error('File cannot be written in web'));\n    } else {\n      try {\n        fs.writeFile(fileName, data, format, (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(true);\n          }\n        });\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nfunction existsSync(fileName) {\n  return fs.existsSync(fileName);\n}\n\nfunction lstatSync(fileName) {\n  return fs.lstatSync(fileName);\n}\n\nfunction readFileSync(fileName, encoding = 'utf8') {\n  return fs.readFileSync(fileName, encoding);\n}\n\nmodule.exports = {\n  readFile,\n  writeFile,\n  existsSync,\n  lstatSync,\n  readFileSync,\n  name: 'fs',\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;AAEpC,SAASE,KAAKA,CAACC,GAAG,EAAE;EAClB,OACE,OAAOA,GAAG,KAAK,QAAQ,KACtBA,GAAG,CAACC,UAAU,CAAC,QAAQ,CAAC,IAAID,GAAG,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC;AAEzD;AAEA,SAASC,QAAQA,CAACC,QAAQ,EAAE;EAC1B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9B,IAAIN,KAAK,CAACI,QAAQ,CAAC,EAAE;MACnBL,OAAO,CAACK,QAAQ,CAAC,CACdG,IAAI,CAAEC,IAAI,IAAKF,OAAO,CAACE,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAC,MAAMH,OAAO,CAACI,SAAS,CAAC,CAAC;IACpC,CAAC,MAAM;MACL,IAAI;QACF,MAAMF,IAAI,GAAGX,EAAE,CAACc,YAAY,CAACP,QAAQ,EAAE,MAAM,CAAC;QAC9CE,OAAO,CAACE,IAAI,CAAC;MACf,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZN,OAAO,CAACI,SAAS,CAAC;MACpB;IACF;EACF,CAAC,CAAC;AACJ;AAEA,SAASG,SAASA,CAACT,QAAQ,EAAEI,IAAI,EAAEM,MAAM,GAAG,MAAM,EAAE;EAClD,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAES,MAAM,KAAK;IACtC,IAAIf,KAAK,CAACI,QAAQ,CAAC,EAAE;MACnBW,MAAM,CAAC,IAAIC,KAAK,CAAC,+BAA+B,CAAC,CAAC;IACpD,CAAC,MAAM;MACL,IAAI;QACFnB,EAAE,CAACgB,SAAS,CAACT,QAAQ,EAAEI,IAAI,EAAEM,MAAM,EAAGF,GAAG,IAAK;UAC5C,IAAIA,GAAG,EAAE;YACPG,MAAM,CAACH,GAAG,CAAC;UACb,CAAC,MAAM;YACLN,OAAO,CAAC,IAAI,CAAC;UACf;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZG,MAAM,CAACH,GAAG,CAAC;MACb;IACF;EACF,CAAC,CAAC;AACJ;AAEA,SAASK,UAAUA,CAACb,QAAQ,EAAE;EAC5B,OAAOP,EAAE,CAACoB,UAAU,CAACb,QAAQ,CAAC;AAChC;AAEA,SAASc,SAASA,CAACd,QAAQ,EAAE;EAC3B,OAAOP,EAAE,CAACqB,SAAS,CAACd,QAAQ,CAAC;AAC/B;AAEA,SAASO,YAAYA,CAACP,QAAQ,EAAEe,QAAQ,GAAG,MAAM,EAAE;EACjD,OAAOtB,EAAE,CAACc,YAAY,CAACP,QAAQ,EAAEe,QAAQ,CAAC;AAC5C;AAEAC,MAAM,CAACC,OAAO,GAAG;EACflB,QAAQ;EACRU,SAAS;EACTI,UAAU;EACVC,SAAS;EACTP,YAAY;EACZW,IAAI,EAAE;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}