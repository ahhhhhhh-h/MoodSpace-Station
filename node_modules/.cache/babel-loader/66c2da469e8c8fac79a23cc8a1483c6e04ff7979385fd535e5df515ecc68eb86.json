{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst {\n  Tokenizer\n} = require('@nlpjs/core');\nclass TokenizerFr extends Tokenizer {\n  constructor(container, shouldTokenize) {\n    super(container, shouldTokenize);\n    this.name = 'tokenizer-fr';\n  }\n  innerTokenize(text) {\n    const replaced = text.replace(/’/gi, \"'\");\n    const slices = replaced.split(/[\\s,.!?;:([\\]’'\"¡¿)/]+/).filter(x => x);\n    return slices;\n  }\n}\nmodule.exports = TokenizerFr;","map":{"version":3,"names":["Tokenizer","require","TokenizerFr","constructor","container","shouldTokenize","name","innerTokenize","text","replaced","replace","slices","split","filter","x","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-fr/src/tokenizer-fr.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { Tokenizer } = require('@nlpjs/core');\n\nclass TokenizerFr extends Tokenizer {\n  constructor(container, shouldTokenize) {\n    super(container, shouldTokenize);\n    this.name = 'tokenizer-fr';\n  }\n\n  innerTokenize(text) {\n    const replaced = text.replace(/’/gi, \"'\");\n    const slices = replaced.split(/[\\s,.!?;:([\\]’'\"¡¿)/]+/).filter((x) => x);\n    return slices;\n  }\n}\n\nmodule.exports = TokenizerFr;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAE5C,MAAMC,WAAW,SAASF,SAAS,CAAC;EAClCG,WAAWA,CAACC,SAAS,EAAEC,cAAc,EAAE;IACrC,KAAK,CAACD,SAAS,EAAEC,cAAc,CAAC;IAChC,IAAI,CAACC,IAAI,GAAG,cAAc;EAC5B;EAEAC,aAAaA,CAACC,IAAI,EAAE;IAClB,MAAMC,QAAQ,GAAGD,IAAI,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IACzC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,KAAK,CAAC,wBAAwB,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC;IACxE,OAAOH,MAAM;EACf;AACF;AAEAI,MAAM,CAACC,OAAO,GAAGd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}