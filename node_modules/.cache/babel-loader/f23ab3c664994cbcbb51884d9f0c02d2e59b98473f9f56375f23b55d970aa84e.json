{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\n\n/**\n * TokenInfoDictionary\n * @constructor\n */\nfunction TokenInfoDictionary() {\n  this.dictionary = new ByteBuffer(10 * 1024 * 1024);\n  this.target_map = {}; // trie_id (of surface form) -> token_info_id (of token)\n  this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);\n}\n\n// left_id right_id word_cost ...\n// ^ this position is token_info_id\nTokenInfoDictionary.prototype.buildDictionary = function (entries) {\n  var dictionary_entries = {}; // using as hashmap, string -> string (word_id -> surface_form) to build dictionary\n\n  for (var i = 0; i < entries.length; i++) {\n    var entry = entries[i];\n    if (entry.length < 4) {\n      continue;\n    }\n    var surface_form = entry[0];\n    var left_id = entry[1];\n    var right_id = entry[2];\n    var word_cost = entry[3];\n    var feature = entry.slice(4).join(\",\"); // TODO Optimize\n\n    // Assertion\n    if (!isFinite(left_id) || !isFinite(right_id) || !isFinite(word_cost)) {\n      console.log(entry);\n    }\n    var token_info_id = this.put(left_id, right_id, word_cost, surface_form, feature);\n    dictionary_entries[token_info_id] = surface_form;\n  }\n\n  // Remove last unused area\n  this.dictionary.shrink();\n  this.pos_buffer.shrink();\n  return dictionary_entries;\n};\nTokenInfoDictionary.prototype.put = function (left_id, right_id, word_cost, surface_form, feature) {\n  var token_info_id = this.dictionary.position;\n  var pos_id = this.pos_buffer.position;\n  this.dictionary.putShort(left_id);\n  this.dictionary.putShort(right_id);\n  this.dictionary.putShort(word_cost);\n  this.dictionary.putInt(pos_id);\n  this.pos_buffer.putString(surface_form + \",\" + feature);\n  return token_info_id;\n};\nTokenInfoDictionary.prototype.addMapping = function (source, target) {\n  var mapping = this.target_map[source];\n  if (mapping == null) {\n    mapping = [];\n  }\n  mapping.push(target);\n  this.target_map[source] = mapping;\n};\nTokenInfoDictionary.prototype.targetMapToBuffer = function () {\n  var buffer = new ByteBuffer();\n  var map_keys_size = Object.keys(this.target_map).length;\n  buffer.putInt(map_keys_size);\n  for (var key in this.target_map) {\n    var values = this.target_map[key]; // Array\n    var map_values_size = values.length;\n    buffer.putInt(parseInt(key));\n    buffer.putInt(map_values_size);\n    for (var i = 0; i < values.length; i++) {\n      buffer.putInt(values[i]);\n    }\n  }\n  return buffer.shrink(); // Shrink-ed Typed Array\n};\n\n// from tid.dat\nTokenInfoDictionary.prototype.loadDictionary = function (array_buffer) {\n  this.dictionary = new ByteBuffer(array_buffer);\n  return this;\n};\n\n// from tid_pos.dat\nTokenInfoDictionary.prototype.loadPosVector = function (array_buffer) {\n  this.pos_buffer = new ByteBuffer(array_buffer);\n  return this;\n};\n\n// from tid_map.dat\nTokenInfoDictionary.prototype.loadTargetMap = function (array_buffer) {\n  var buffer = new ByteBuffer(array_buffer);\n  buffer.position = 0;\n  this.target_map = {};\n  buffer.readInt(); // map_keys_size\n  while (true) {\n    if (buffer.buffer.length < buffer.position + 1) {\n      break;\n    }\n    var key = buffer.readInt();\n    var map_values_size = buffer.readInt();\n    for (var i = 0; i < map_values_size; i++) {\n      var value = buffer.readInt();\n      this.addMapping(key, value);\n    }\n  }\n  return this;\n};\n\n/**\n * Look up features in the dictionary\n * @param {string} token_info_id_str Word ID to look up\n * @returns {string} Features string concatenated by \",\"\n */\nTokenInfoDictionary.prototype.getFeatures = function (token_info_id_str) {\n  var token_info_id = parseInt(token_info_id_str);\n  if (isNaN(token_info_id)) {\n    // TODO throw error\n    return \"\";\n  }\n  var pos_id = this.dictionary.getInt(token_info_id + 6);\n  return this.pos_buffer.getString(pos_id);\n};\nmodule.exports = TokenInfoDictionary;","map":{"version":3,"names":["ByteBuffer","require","TokenInfoDictionary","dictionary","target_map","pos_buffer","prototype","buildDictionary","entries","dictionary_entries","i","length","entry","surface_form","left_id","right_id","word_cost","feature","slice","join","isFinite","console","log","token_info_id","put","shrink","position","pos_id","putShort","putInt","putString","addMapping","source","target","mapping","push","targetMapToBuffer","buffer","map_keys_size","Object","keys","key","values","map_values_size","parseInt","loadDictionary","array_buffer","loadPosVector","loadTargetMap","readInt","value","getFeatures","token_info_id_str","isNaN","getInt","getString","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/kuromoji/src/dict/TokenInfoDictionary.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\n\n/**\n * TokenInfoDictionary\n * @constructor\n */\nfunction TokenInfoDictionary() {\n    this.dictionary = new ByteBuffer(10 * 1024 * 1024);\n    this.target_map = {};  // trie_id (of surface form) -> token_info_id (of token)\n    this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);\n}\n\n// left_id right_id word_cost ...\n// ^ this position is token_info_id\nTokenInfoDictionary.prototype.buildDictionary = function (entries) {\n    var dictionary_entries = {};  // using as hashmap, string -> string (word_id -> surface_form) to build dictionary\n\n    for (var i = 0; i < entries.length; i++) {\n        var entry = entries[i];\n\n        if (entry.length < 4) {\n            continue;\n        }\n\n        var surface_form = entry[0];\n        var left_id = entry[1];\n        var right_id = entry[2];\n        var word_cost = entry[3];\n        var feature = entry.slice(4).join(\",\");  // TODO Optimize\n\n        // Assertion\n        if (!isFinite(left_id) || !isFinite(right_id) || !isFinite(word_cost)) {\n            console.log(entry);\n        }\n\n        var token_info_id = this.put(left_id, right_id, word_cost, surface_form, feature);\n        dictionary_entries[token_info_id] = surface_form;\n    }\n\n    // Remove last unused area\n    this.dictionary.shrink();\n    this.pos_buffer.shrink();\n\n    return dictionary_entries;\n};\n\nTokenInfoDictionary.prototype.put = function (left_id, right_id, word_cost, surface_form, feature) {\n    var token_info_id = this.dictionary.position;\n    var pos_id = this.pos_buffer.position;\n\n    this.dictionary.putShort(left_id);\n    this.dictionary.putShort(right_id);\n    this.dictionary.putShort(word_cost);\n    this.dictionary.putInt(pos_id);\n    this.pos_buffer.putString(surface_form + \",\" + feature);\n\n    return token_info_id;\n};\n\nTokenInfoDictionary.prototype.addMapping = function (source, target) {\n    var mapping = this.target_map[source];\n    if (mapping == null) {\n        mapping = [];\n    }\n    mapping.push(target);\n\n    this.target_map[source] = mapping;\n};\n\nTokenInfoDictionary.prototype.targetMapToBuffer = function () {\n    var buffer = new ByteBuffer();\n    var map_keys_size = Object.keys(this.target_map).length;\n    buffer.putInt(map_keys_size);\n    for (var key in this.target_map) {\n        var values = this.target_map[key];  // Array\n        var map_values_size = values.length;\n        buffer.putInt(parseInt(key));\n        buffer.putInt(map_values_size);\n        for (var i = 0; i < values.length; i++) {\n            buffer.putInt(values[i]);\n        }\n    }\n    return buffer.shrink();  // Shrink-ed Typed Array\n};\n\n// from tid.dat\nTokenInfoDictionary.prototype.loadDictionary = function (array_buffer) {\n    this.dictionary = new ByteBuffer(array_buffer);\n    return this;\n};\n\n// from tid_pos.dat\nTokenInfoDictionary.prototype.loadPosVector = function (array_buffer) {\n    this.pos_buffer = new ByteBuffer(array_buffer);\n    return this;\n};\n\n// from tid_map.dat\nTokenInfoDictionary.prototype.loadTargetMap = function (array_buffer) {\n    var buffer = new ByteBuffer(array_buffer);\n    buffer.position = 0;\n    this.target_map = {};\n    buffer.readInt();  // map_keys_size\n    while (true) {\n        if (buffer.buffer.length < buffer.position + 1) {\n            break;\n        }\n        var key = buffer.readInt();\n        var map_values_size = buffer.readInt();\n        for (var i = 0; i < map_values_size; i++) {\n            var value = buffer.readInt();\n            this.addMapping(key, value);\n        }\n    }\n    return this;\n};\n\n/**\n * Look up features in the dictionary\n * @param {string} token_info_id_str Word ID to look up\n * @returns {string} Features string concatenated by \",\"\n */\nTokenInfoDictionary.prototype.getFeatures = function (token_info_id_str) {\n    var token_info_id = parseInt(token_info_id_str);\n    if (isNaN(token_info_id)) {\n        // TODO throw error\n        return \"\";\n    }\n    var pos_id = this.dictionary.getInt(token_info_id + 6);\n    return this.pos_buffer.getString(pos_id);\n};\n\nmodule.exports = TokenInfoDictionary;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAE9C;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAAA,EAAG;EAC3B,IAAI,CAACC,UAAU,GAAG,IAAIH,UAAU,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;EAClD,IAAI,CAACI,UAAU,GAAG,CAAC,CAAC,CAAC,CAAE;EACvB,IAAI,CAACC,UAAU,GAAG,IAAIL,UAAU,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;AACtD;;AAEA;AACA;AACAE,mBAAmB,CAACI,SAAS,CAACC,eAAe,GAAG,UAAUC,OAAO,EAAE;EAC/D,IAAIC,kBAAkB,GAAG,CAAC,CAAC,CAAC,CAAE;;EAE9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAIE,KAAK,GAAGJ,OAAO,CAACE,CAAC,CAAC;IAEtB,IAAIE,KAAK,CAACD,MAAM,GAAG,CAAC,EAAE;MAClB;IACJ;IAEA,IAAIE,YAAY,GAAGD,KAAK,CAAC,CAAC,CAAC;IAC3B,IAAIE,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAC;IACtB,IAAIG,QAAQ,GAAGH,KAAK,CAAC,CAAC,CAAC;IACvB,IAAII,SAAS,GAAGJ,KAAK,CAAC,CAAC,CAAC;IACxB,IAAIK,OAAO,GAAGL,KAAK,CAACM,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE;;IAEzC;IACA,IAAI,CAACC,QAAQ,CAACN,OAAO,CAAC,IAAI,CAACM,QAAQ,CAACL,QAAQ,CAAC,IAAI,CAACK,QAAQ,CAACJ,SAAS,CAAC,EAAE;MACnEK,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;IACtB;IAEA,IAAIW,aAAa,GAAG,IAAI,CAACC,GAAG,CAACV,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAEH,YAAY,EAAEI,OAAO,CAAC;IACjFR,kBAAkB,CAACc,aAAa,CAAC,GAAGV,YAAY;EACpD;;EAEA;EACA,IAAI,CAACV,UAAU,CAACsB,MAAM,CAAC,CAAC;EACxB,IAAI,CAACpB,UAAU,CAACoB,MAAM,CAAC,CAAC;EAExB,OAAOhB,kBAAkB;AAC7B,CAAC;AAEDP,mBAAmB,CAACI,SAAS,CAACkB,GAAG,GAAG,UAAUV,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAEH,YAAY,EAAEI,OAAO,EAAE;EAC/F,IAAIM,aAAa,GAAG,IAAI,CAACpB,UAAU,CAACuB,QAAQ;EAC5C,IAAIC,MAAM,GAAG,IAAI,CAACtB,UAAU,CAACqB,QAAQ;EAErC,IAAI,CAACvB,UAAU,CAACyB,QAAQ,CAACd,OAAO,CAAC;EACjC,IAAI,CAACX,UAAU,CAACyB,QAAQ,CAACb,QAAQ,CAAC;EAClC,IAAI,CAACZ,UAAU,CAACyB,QAAQ,CAACZ,SAAS,CAAC;EACnC,IAAI,CAACb,UAAU,CAAC0B,MAAM,CAACF,MAAM,CAAC;EAC9B,IAAI,CAACtB,UAAU,CAACyB,SAAS,CAACjB,YAAY,GAAG,GAAG,GAAGI,OAAO,CAAC;EAEvD,OAAOM,aAAa;AACxB,CAAC;AAEDrB,mBAAmB,CAACI,SAAS,CAACyB,UAAU,GAAG,UAAUC,MAAM,EAAEC,MAAM,EAAE;EACjE,IAAIC,OAAO,GAAG,IAAI,CAAC9B,UAAU,CAAC4B,MAAM,CAAC;EACrC,IAAIE,OAAO,IAAI,IAAI,EAAE;IACjBA,OAAO,GAAG,EAAE;EAChB;EACAA,OAAO,CAACC,IAAI,CAACF,MAAM,CAAC;EAEpB,IAAI,CAAC7B,UAAU,CAAC4B,MAAM,CAAC,GAAGE,OAAO;AACrC,CAAC;AAEDhC,mBAAmB,CAACI,SAAS,CAAC8B,iBAAiB,GAAG,YAAY;EAC1D,IAAIC,MAAM,GAAG,IAAIrC,UAAU,CAAC,CAAC;EAC7B,IAAIsC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACpC,UAAU,CAAC,CAACO,MAAM;EACvD0B,MAAM,CAACR,MAAM,CAACS,aAAa,CAAC;EAC5B,KAAK,IAAIG,GAAG,IAAI,IAAI,CAACrC,UAAU,EAAE;IAC7B,IAAIsC,MAAM,GAAG,IAAI,CAACtC,UAAU,CAACqC,GAAG,CAAC,CAAC,CAAE;IACpC,IAAIE,eAAe,GAAGD,MAAM,CAAC/B,MAAM;IACnC0B,MAAM,CAACR,MAAM,CAACe,QAAQ,CAACH,GAAG,CAAC,CAAC;IAC5BJ,MAAM,CAACR,MAAM,CAACc,eAAe,CAAC;IAC9B,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,MAAM,CAAC/B,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC2B,MAAM,CAACR,MAAM,CAACa,MAAM,CAAChC,CAAC,CAAC,CAAC;IAC5B;EACJ;EACA,OAAO2B,MAAM,CAACZ,MAAM,CAAC,CAAC,CAAC,CAAE;AAC7B,CAAC;;AAED;AACAvB,mBAAmB,CAACI,SAAS,CAACuC,cAAc,GAAG,UAAUC,YAAY,EAAE;EACnE,IAAI,CAAC3C,UAAU,GAAG,IAAIH,UAAU,CAAC8C,YAAY,CAAC;EAC9C,OAAO,IAAI;AACf,CAAC;;AAED;AACA5C,mBAAmB,CAACI,SAAS,CAACyC,aAAa,GAAG,UAAUD,YAAY,EAAE;EAClE,IAAI,CAACzC,UAAU,GAAG,IAAIL,UAAU,CAAC8C,YAAY,CAAC;EAC9C,OAAO,IAAI;AACf,CAAC;;AAED;AACA5C,mBAAmB,CAACI,SAAS,CAAC0C,aAAa,GAAG,UAAUF,YAAY,EAAE;EAClE,IAAIT,MAAM,GAAG,IAAIrC,UAAU,CAAC8C,YAAY,CAAC;EACzCT,MAAM,CAACX,QAAQ,GAAG,CAAC;EACnB,IAAI,CAACtB,UAAU,GAAG,CAAC,CAAC;EACpBiC,MAAM,CAACY,OAAO,CAAC,CAAC,CAAC,CAAE;EACnB,OAAO,IAAI,EAAE;IACT,IAAIZ,MAAM,CAACA,MAAM,CAAC1B,MAAM,GAAG0B,MAAM,CAACX,QAAQ,GAAG,CAAC,EAAE;MAC5C;IACJ;IACA,IAAIe,GAAG,GAAGJ,MAAM,CAACY,OAAO,CAAC,CAAC;IAC1B,IAAIN,eAAe,GAAGN,MAAM,CAACY,OAAO,CAAC,CAAC;IACtC,KAAK,IAAIvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,eAAe,EAAEjC,CAAC,EAAE,EAAE;MACtC,IAAIwC,KAAK,GAAGb,MAAM,CAACY,OAAO,CAAC,CAAC;MAC5B,IAAI,CAAClB,UAAU,CAACU,GAAG,EAAES,KAAK,CAAC;IAC/B;EACJ;EACA,OAAO,IAAI;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAhD,mBAAmB,CAACI,SAAS,CAAC6C,WAAW,GAAG,UAAUC,iBAAiB,EAAE;EACrE,IAAI7B,aAAa,GAAGqB,QAAQ,CAACQ,iBAAiB,CAAC;EAC/C,IAAIC,KAAK,CAAC9B,aAAa,CAAC,EAAE;IACtB;IACA,OAAO,EAAE;EACb;EACA,IAAII,MAAM,GAAG,IAAI,CAACxB,UAAU,CAACmD,MAAM,CAAC/B,aAAa,GAAG,CAAC,CAAC;EACtD,OAAO,IAAI,CAAClB,UAAU,CAACkD,SAAS,CAAC5B,MAAM,CAAC;AAC5C,CAAC;AAED6B,MAAM,CAACC,OAAO,GAAGvD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}