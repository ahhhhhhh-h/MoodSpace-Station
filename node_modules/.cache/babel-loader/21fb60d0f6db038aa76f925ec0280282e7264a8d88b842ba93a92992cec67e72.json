{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  BaseStemmer\n} = require('@nlpjs/core');\nclass StemmerTl extends BaseStemmer {\n  constructor(container) {\n    super(container);\n    this.name = 'stemmer-tl';\n  }\n  countSyllables(word) {\n    if (!word) {\n      return 0;\n    }\n    const match = word.toString().replace('(?![aeiou])', '').match(/[aeiou]/g);\n    return match ? match.length : 0;\n  }\n  hasPrefix(word, prefix) {\n    if (!word) {\n      return false;\n    }\n    return prefix instanceof RegExp ? word.match(prefix) : word.indexOf(prefix) === 0;\n  }\n  hasSuffix(word, suffix) {\n    if (!word) {\n      return false;\n    }\n    return word.lastIndexOf(suffix) === word.length - suffix.length;\n  }\n  replaceAt(word, index, c) {\n    if (!word) {\n      return word;\n    }\n    return `${word.slice(0, index)}${c}${word.slice(index + 1, word.length)}`;\n  }\n  removePrefix(word) {\n    const syllables = this.countSyllables(word);\n    if (syllables < 3) {\n      return word;\n    }\n    for (let i = 0; i < StemmerTl.prefixes.length; i += 1) {\n      const prefix = StemmerTl.prefixes[i];\n      if (this.hasPrefix(word, prefix) && syllables - this.countSyllables(prefix) > 1) {\n        return word.replace(prefix, '').replace(/^-/, '');\n      }\n    }\n    return word;\n  }\n  removeSuffix(srcWord) {\n    let word = srcWord;\n    let removed;\n    const syllables = this.countSyllables(word);\n    for (let i = 0; i < StemmerTl.suffixes.length; i += 1) {\n      const suffix = StemmerTl.suffixes[i];\n      if (this.hasSuffix(word, suffix) && syllables - this.countSyllables(suffix) > 1) {\n        word = word.slice(0, word.length - suffix.length);\n        removed = suffix;\n        break;\n      }\n    }\n    if (removed && removed.length === 3 && word[word.length - 1] === 'u') {\n      word = this.replaceAt(word, word.length - 1, 'o');\n    }\n    if (removed && removed.length === 2 && word[word.length - 2] === 'u') {\n      word = this.replaceAt(word, word.length - 2, 'o');\n    }\n    if (removed && removed.length === 2 && word[word.length - 1] === 'u') {\n      word = this.replaceAt(word, word.length - 1, 'o');\n    }\n    return word;\n  }\n  removeInfix(word) {\n    if (word.length < 5) {\n      return word;\n    }\n    for (let i = 0; i < StemmerTl.infixes.length > 0; i += 1) {\n      const infix = StemmerTl.infixes[i];\n      const index = word.indexOf(infix);\n      if (index === 0) {\n        return word.slice(index + infix.length);\n      }\n      if (index === 1) {\n        return word[0] + word.slice(infix.length + 1);\n      }\n    }\n    return word;\n  }\n  removePartialReduplication(word) {\n    if (word[0] === word[1]) {\n      return word.slice(1);\n    }\n    if (word[0] === word[2] && word[1] === word[3]) {\n      return word.slice(2);\n    }\n    return word;\n  }\n  removeFullReduplication(word) {\n    const middle = Math.floor(word.length / 2);\n    const firstSlice = word.slice(0, middle);\n    return firstSlice === word.slice(middle) ? firstSlice : word;\n  }\n  innerStem() {\n    let word = this.getCurrent();\n    word = this.removePrefix(word);\n    word = this.removeSuffix(word);\n    word = this.removeInfix(word);\n    word = this.removePartialReduplication(word);\n    word = this.removeFullReduplication(word);\n    this.setCurrent(word);\n  }\n}\nStemmerTl.prefixes = [/^gangga/, /^gaga/, /^ga/, /^ikapakapagpaka/, /^ikapakapagpa/, /^ikapakapang/, /^ikapakapag(?![aeiou])/, /^ikapakapam/, /^ikapakapan/, /^ikapagpaka/, /^ikapakipan/, /^ikapakipag(?![aeiou])/, /^ikapakipam/, /^ikapakipa/, /^ipakipag(?![aeiou])/, /^ipagkang/, /^ikapagpa/, /^ikapaka/, /^ikapaki/, /^ikapang/, /^ipakipa/, /^ikapag(?![aeiou])/, /^ikapam/, /^ikapan/, /^ipagka/, /^ipagpa/, /^ipaka/, /^ipaki/, /^ikapa/, /^ipang/, /^ikang/, /^ipag(?![aeiou])/, /^ikam/, /^ikan/, /^isa/, /^ipa/, /^kasing/, /^kamaka/, /^kanda/, /^kasim/, /^kasin/, /^kamag/, /^kaka/, /^ka/, /^mangagsipagpaka/, /^mangagsipag(?![aeiou])/, /^mangagpaka/, /^magsipagpa/, /^makapagpa/, /^mangagsi/, /^mangagpa/, /^magsipag(?![aeiou])/, /^mangagka/, /^magkang/, /^magpaka/, /^magpati/, /^makapag(?![aeiou])/, /^mapapag(?![aeiou])/, /^mapang/, /^mapasa/, /^mapapa/, /^mangag/, /^manga/, /^magka/, /^magpa/, /^magsa/, /^mapag(?![aeiou])/, /^mapam/, /^mapan/, /^mapa/, /^mang/, /^maka/, /^maki/, /^mam/, /^man/, /^mag(?![aeiou])/, /^ma/, /^nangagsipagpaka/, /^nangagsipagpa/, /^nagsipagpaka/, /^nakapagpaka/, /^nangagsipag(?![aeiou])/, /^nangagpaka/, /^nangagkaka/, /^nagsipagpa/, /^nakapagpa/, /^nagsipag(?![aeiou])/, /^nangagpa/, /^nangagka/, /^nangagsi/, /^nakapag(?![aeiou])/, /^nakipag(?![aeiou])/, /^napapag(?![aeiou])/, /^nagpaka/, /^nagpati/, /^nangag/, /^napaka/, /^napasa/, /^nanga/, /^nagka/, /^nagpa/, /^nagsa/, /^nagsi/, /^napag(?![aeiou])/, /^naka/, /^naki/, /^nang/, /^napa/, /^nag/, /^na/, /^pagpapati/, /^pagpapaka/, /^pagpapa/, /^pagsasa/, /^pasasa/, /^pakiki/, /^pinaka/, /^pinag/, /^pinag/, /^papag(?![aeiou])/, /^pampa/, /^panag/, /^pagka/, /^paka/, /^paki/, /^pala/, /^pang/, /^pani/, /^papa/, /^para/, /^pasa/, /^pati/, /^pina/, /^pag(?![aeiou])/, /^pam/, /^pan/, /^pa/, /^sang/, /^sing/, /^sin/, /^tagapag(?![aeiou])/, /^taga/, /^tiga/, /^tag/, /^tig/, /^um/];\nStemmerTl.suffixes = ['han', 'hin', 'an', 'in', 'ng'];\nStemmerTl.infixes = ['in', 'um'];\nmodule.exports = StemmerTl;","map":{"version":3,"names":["BaseStemmer","require","StemmerTl","constructor","container","name","countSyllables","word","match","toString","replace","length","hasPrefix","prefix","RegExp","indexOf","hasSuffix","suffix","lastIndexOf","replaceAt","index","c","slice","removePrefix","syllables","i","prefixes","removeSuffix","srcWord","removed","suffixes","removeInfix","infixes","infix","removePartialReduplication","removeFullReduplication","middle","Math","floor","firstSlice","innerStem","getCurrent","setCurrent","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-tl/src/stemmer-tl.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { BaseStemmer } = require('@nlpjs/core');\n\nclass StemmerTl extends BaseStemmer {\n  constructor(container) {\n    super(container);\n    this.name = 'stemmer-tl';\n  }\n\n  countSyllables(word) {\n    if (!word) {\n      return 0;\n    }\n    const match = word\n      .toString()\n      .replace('(?![aeiou])', '')\n      .match(/[aeiou]/g);\n    return match ? match.length : 0;\n  }\n\n  hasPrefix(word, prefix) {\n    if (!word) {\n      return false;\n    }\n    return prefix instanceof RegExp\n      ? word.match(prefix)\n      : word.indexOf(prefix) === 0;\n  }\n\n  hasSuffix(word, suffix) {\n    if (!word) {\n      return false;\n    }\n    return word.lastIndexOf(suffix) === word.length - suffix.length;\n  }\n\n  replaceAt(word, index, c) {\n    if (!word) {\n      return word;\n    }\n    return `${word.slice(0, index)}${c}${word.slice(index + 1, word.length)}`;\n  }\n\n  removePrefix(word) {\n    const syllables = this.countSyllables(word);\n    if (syllables < 3) {\n      return word;\n    }\n    for (let i = 0; i < StemmerTl.prefixes.length; i += 1) {\n      const prefix = StemmerTl.prefixes[i];\n      if (\n        this.hasPrefix(word, prefix) &&\n        syllables - this.countSyllables(prefix) > 1\n      ) {\n        return word.replace(prefix, '').replace(/^-/, '');\n      }\n    }\n    return word;\n  }\n\n  removeSuffix(srcWord) {\n    let word = srcWord;\n    let removed;\n    const syllables = this.countSyllables(word);\n    for (let i = 0; i < StemmerTl.suffixes.length; i += 1) {\n      const suffix = StemmerTl.suffixes[i];\n      if (\n        this.hasSuffix(word, suffix) &&\n        syllables - this.countSyllables(suffix) > 1\n      ) {\n        word = word.slice(0, word.length - suffix.length);\n        removed = suffix;\n        break;\n      }\n    }\n    if (removed && removed.length === 3 && word[word.length - 1] === 'u') {\n      word = this.replaceAt(word, word.length - 1, 'o');\n    }\n    if (removed && removed.length === 2 && word[word.length - 2] === 'u') {\n      word = this.replaceAt(word, word.length - 2, 'o');\n    }\n    if (removed && removed.length === 2 && word[word.length - 1] === 'u') {\n      word = this.replaceAt(word, word.length - 1, 'o');\n    }\n    return word;\n  }\n\n  removeInfix(word) {\n    if (word.length < 5) {\n      return word;\n    }\n    for (let i = 0; i < StemmerTl.infixes.length > 0; i += 1) {\n      const infix = StemmerTl.infixes[i];\n      const index = word.indexOf(infix);\n      if (index === 0) {\n        return word.slice(index + infix.length);\n      }\n      if (index === 1) {\n        return word[0] + word.slice(infix.length + 1);\n      }\n    }\n    return word;\n  }\n\n  removePartialReduplication(word) {\n    if (word[0] === word[1]) {\n      return word.slice(1);\n    }\n    if (word[0] === word[2] && word[1] === word[3]) {\n      return word.slice(2);\n    }\n    return word;\n  }\n\n  removeFullReduplication(word) {\n    const middle = Math.floor(word.length / 2);\n    const firstSlice = word.slice(0, middle);\n    return firstSlice === word.slice(middle) ? firstSlice : word;\n  }\n\n  innerStem() {\n    let word = this.getCurrent();\n    word = this.removePrefix(word);\n    word = this.removeSuffix(word);\n    word = this.removeInfix(word);\n    word = this.removePartialReduplication(word);\n    word = this.removeFullReduplication(word);\n    this.setCurrent(word);\n  }\n}\n\nStemmerTl.prefixes = [\n  /^gangga/,\n  /^gaga/,\n  /^ga/,\n  /^ikapakapagpaka/,\n  /^ikapakapagpa/,\n  /^ikapakapang/,\n  /^ikapakapag(?![aeiou])/,\n  /^ikapakapam/,\n  /^ikapakapan/,\n  /^ikapagpaka/,\n  /^ikapakipan/,\n  /^ikapakipag(?![aeiou])/,\n  /^ikapakipam/,\n  /^ikapakipa/,\n  /^ipakipag(?![aeiou])/,\n  /^ipagkang/,\n  /^ikapagpa/,\n  /^ikapaka/,\n  /^ikapaki/,\n  /^ikapang/,\n  /^ipakipa/,\n  /^ikapag(?![aeiou])/,\n  /^ikapam/,\n  /^ikapan/,\n  /^ipagka/,\n  /^ipagpa/,\n  /^ipaka/,\n  /^ipaki/,\n  /^ikapa/,\n  /^ipang/,\n  /^ikang/,\n  /^ipag(?![aeiou])/,\n  /^ikam/,\n  /^ikan/,\n  /^isa/,\n  /^ipa/,\n  /^kasing/,\n  /^kamaka/,\n  /^kanda/,\n  /^kasim/,\n  /^kasin/,\n  /^kamag/,\n  /^kaka/,\n  /^ka/,\n  /^mangagsipagpaka/,\n  /^mangagsipag(?![aeiou])/,\n  /^mangagpaka/,\n  /^magsipagpa/,\n  /^makapagpa/,\n  /^mangagsi/,\n  /^mangagpa/,\n  /^magsipag(?![aeiou])/,\n  /^mangagka/,\n  /^magkang/,\n  /^magpaka/,\n  /^magpati/,\n  /^makapag(?![aeiou])/,\n  /^mapapag(?![aeiou])/,\n  /^mapang/,\n  /^mapasa/,\n  /^mapapa/,\n  /^mangag/,\n  /^manga/,\n  /^magka/,\n  /^magpa/,\n  /^magsa/,\n  /^mapag(?![aeiou])/,\n  /^mapam/,\n  /^mapan/,\n  /^mapa/,\n  /^mang/,\n  /^maka/,\n  /^maki/,\n  /^mam/,\n  /^man/,\n  /^mag(?![aeiou])/,\n  /^ma/,\n  /^nangagsipagpaka/,\n  /^nangagsipagpa/,\n  /^nagsipagpaka/,\n  /^nakapagpaka/,\n  /^nangagsipag(?![aeiou])/,\n  /^nangagpaka/,\n  /^nangagkaka/,\n  /^nagsipagpa/,\n  /^nakapagpa/,\n  /^nagsipag(?![aeiou])/,\n  /^nangagpa/,\n  /^nangagka/,\n  /^nangagsi/,\n  /^nakapag(?![aeiou])/,\n  /^nakipag(?![aeiou])/,\n  /^napapag(?![aeiou])/,\n  /^nagpaka/,\n  /^nagpati/,\n  /^nangag/,\n  /^napaka/,\n  /^napasa/,\n  /^nanga/,\n  /^nagka/,\n  /^nagpa/,\n  /^nagsa/,\n  /^nagsi/,\n  /^napag(?![aeiou])/,\n  /^naka/,\n  /^naki/,\n  /^nang/,\n  /^napa/,\n  /^nag/,\n  /^na/,\n  /^pagpapati/,\n  /^pagpapaka/,\n  /^pagpapa/,\n  /^pagsasa/,\n  /^pasasa/,\n  /^pakiki/,\n  /^pinaka/,\n  /^pinag/,\n  /^pinag/,\n  /^papag(?![aeiou])/,\n  /^pampa/,\n  /^panag/,\n  /^pagka/,\n  /^paka/,\n  /^paki/,\n  /^pala/,\n  /^pang/,\n  /^pani/,\n  /^papa/,\n  /^para/,\n  /^pasa/,\n  /^pati/,\n  /^pina/,\n  /^pag(?![aeiou])/,\n  /^pam/,\n  /^pan/,\n  /^pa/,\n  /^sang/,\n  /^sing/,\n  /^sin/,\n  /^tagapag(?![aeiou])/,\n  /^taga/,\n  /^tiga/,\n  /^tag/,\n  /^tig/,\n  /^um/,\n];\n\nStemmerTl.suffixes = ['han', 'hin', 'an', 'in', 'ng'];\n\nStemmerTl.infixes = ['in', 'um'];\n\nmodule.exports = StemmerTl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}