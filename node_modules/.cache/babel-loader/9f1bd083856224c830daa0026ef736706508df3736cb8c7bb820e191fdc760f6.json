{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiNode = require(\"./ViterbiNode\");\nvar ViterbiLattice = require(\"./ViterbiLattice\");\nvar SurrogateAwareString = require(\"../util/SurrogateAwareString\");\n\n/**\n * ViterbiBuilder builds word lattice (ViterbiLattice)\n * @param {DynamicDictionaries} dic dictionary\n * @constructor\n */\nfunction ViterbiBuilder(dic) {\n  this.trie = dic.trie;\n  this.token_info_dictionary = dic.token_info_dictionary;\n  this.unknown_dictionary = dic.unknown_dictionary;\n}\n\n/**\n * Build word lattice\n * @param {string} sentence_str Input text\n * @returns {ViterbiLattice} Word lattice\n */\nViterbiBuilder.prototype.build = function (sentence_str) {\n  var lattice = new ViterbiLattice();\n  var sentence = new SurrogateAwareString(sentence_str);\n  var key, trie_id, left_id, right_id, word_cost;\n  for (var pos = 0; pos < sentence.length; pos++) {\n    var tail = sentence.slice(pos);\n    var vocabulary = this.trie.commonPrefixSearch(tail);\n    for (var n = 0; n < vocabulary.length; n++) {\n      // Words in dictionary do not have surrogate pair (only UCS2 set)\n      trie_id = vocabulary[n].v;\n      key = vocabulary[n].k;\n      var token_info_ids = this.token_info_dictionary.target_map[trie_id];\n      for (var i = 0; i < token_info_ids.length; i++) {\n        var token_info_id = parseInt(token_info_ids[i]);\n        left_id = this.token_info_dictionary.dictionary.getShort(token_info_id);\n        right_id = this.token_info_dictionary.dictionary.getShort(token_info_id + 2);\n        word_cost = this.token_info_dictionary.dictionary.getShort(token_info_id + 4);\n\n        // node_name, cost, start_index, length, type, left_id, right_id, surface_form\n        lattice.append(new ViterbiNode(token_info_id, word_cost, pos + 1, key.length, \"KNOWN\", left_id, right_id, key));\n      }\n    }\n\n    // Unknown word processing\n    var surrogate_aware_tail = new SurrogateAwareString(tail);\n    var head_char = new SurrogateAwareString(surrogate_aware_tail.charAt(0));\n    var head_char_class = this.unknown_dictionary.lookup(head_char.toString());\n    if (vocabulary == null || vocabulary.length === 0 || head_char_class.is_always_invoke === 1) {\n      // Process unknown word\n      key = head_char;\n      if (head_char_class.is_grouping === 1 && 1 < surrogate_aware_tail.length) {\n        for (var k = 1; k < surrogate_aware_tail.length; k++) {\n          var next_char = surrogate_aware_tail.charAt(k);\n          var next_char_class = this.unknown_dictionary.lookup(next_char);\n          if (head_char_class.class_name !== next_char_class.class_name) {\n            break;\n          }\n          key += next_char;\n        }\n      }\n      var unk_ids = this.unknown_dictionary.target_map[head_char_class.class_id];\n      for (var j = 0; j < unk_ids.length; j++) {\n        var unk_id = parseInt(unk_ids[j]);\n        left_id = this.unknown_dictionary.dictionary.getShort(unk_id);\n        right_id = this.unknown_dictionary.dictionary.getShort(unk_id + 2);\n        word_cost = this.unknown_dictionary.dictionary.getShort(unk_id + 4);\n\n        // node_name, cost, start_index, length, type, left_id, right_id, surface_form\n        lattice.append(new ViterbiNode(unk_id, word_cost, pos + 1, key.length, \"UNKNOWN\", left_id, right_id, key.toString()));\n      }\n    }\n  }\n  lattice.appendEos();\n  return lattice;\n};\nmodule.exports = ViterbiBuilder;","map":{"version":3,"names":["ViterbiNode","require","ViterbiLattice","SurrogateAwareString","ViterbiBuilder","dic","trie","token_info_dictionary","unknown_dictionary","prototype","build","sentence_str","lattice","sentence","key","trie_id","left_id","right_id","word_cost","pos","length","tail","slice","vocabulary","commonPrefixSearch","n","v","k","token_info_ids","target_map","i","token_info_id","parseInt","dictionary","getShort","append","surrogate_aware_tail","head_char","charAt","head_char_class","lookup","toString","is_always_invoke","is_grouping","next_char","next_char_class","class_name","unk_ids","class_id","j","unk_id","appendEos","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/kuromoji/src/viterbi/ViterbiBuilder.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiNode = require(\"./ViterbiNode\");\nvar ViterbiLattice = require(\"./ViterbiLattice\");\nvar SurrogateAwareString = require(\"../util/SurrogateAwareString\");\n\n/**\n * ViterbiBuilder builds word lattice (ViterbiLattice)\n * @param {DynamicDictionaries} dic dictionary\n * @constructor\n */\nfunction ViterbiBuilder(dic) {\n    this.trie = dic.trie;\n    this.token_info_dictionary = dic.token_info_dictionary;\n    this.unknown_dictionary = dic.unknown_dictionary;\n}\n\n/**\n * Build word lattice\n * @param {string} sentence_str Input text\n * @returns {ViterbiLattice} Word lattice\n */\nViterbiBuilder.prototype.build = function (sentence_str) {\n    var lattice = new ViterbiLattice();\n    var sentence = new SurrogateAwareString(sentence_str);\n\n    var key, trie_id, left_id, right_id, word_cost;\n    for (var pos = 0; pos < sentence.length; pos++) {\n        var tail = sentence.slice(pos);\n        var vocabulary = this.trie.commonPrefixSearch(tail);\n        for (var n = 0; n < vocabulary.length; n++) {  // Words in dictionary do not have surrogate pair (only UCS2 set)\n            trie_id = vocabulary[n].v;\n            key = vocabulary[n].k;\n\n            var token_info_ids = this.token_info_dictionary.target_map[trie_id];\n            for (var i = 0; i < token_info_ids.length; i++) {\n                var token_info_id = parseInt(token_info_ids[i]);\n\n                left_id = this.token_info_dictionary.dictionary.getShort(token_info_id);\n                right_id = this.token_info_dictionary.dictionary.getShort(token_info_id + 2);\n                word_cost = this.token_info_dictionary.dictionary.getShort(token_info_id + 4);\n\n                // node_name, cost, start_index, length, type, left_id, right_id, surface_form\n                lattice.append(new ViterbiNode(token_info_id, word_cost, pos + 1, key.length, \"KNOWN\", left_id, right_id, key));\n            }\n        }\n\n        // Unknown word processing\n        var surrogate_aware_tail = new SurrogateAwareString(tail);\n        var head_char = new SurrogateAwareString(surrogate_aware_tail.charAt(0));\n        var head_char_class = this.unknown_dictionary.lookup(head_char.toString());\n        if (vocabulary == null || vocabulary.length === 0 || head_char_class.is_always_invoke === 1) {\n            // Process unknown word\n            key = head_char;\n            if (head_char_class.is_grouping === 1 && 1 < surrogate_aware_tail.length) {\n                for (var k = 1; k < surrogate_aware_tail.length; k++) {\n                    var next_char = surrogate_aware_tail.charAt(k);\n                    var next_char_class = this.unknown_dictionary.lookup(next_char);\n                    if (head_char_class.class_name !== next_char_class.class_name) {\n                        break;\n                    }\n                    key += next_char;\n                }\n            }\n\n            var unk_ids = this.unknown_dictionary.target_map[head_char_class.class_id];\n            for (var j = 0; j < unk_ids.length; j++) {\n                var unk_id = parseInt(unk_ids[j]);\n\n                left_id = this.unknown_dictionary.dictionary.getShort(unk_id);\n                right_id = this.unknown_dictionary.dictionary.getShort(unk_id + 2);\n                word_cost = this.unknown_dictionary.dictionary.getShort(unk_id + 4);\n\n                // node_name, cost, start_index, length, type, left_id, right_id, surface_form\n                lattice.append(new ViterbiNode(unk_id, word_cost, pos + 1, key.length, \"UNKNOWN\", left_id, right_id, key.toString()));\n            }\n        }\n    }\n    lattice.appendEos();\n\n    return lattice;\n};\n\nmodule.exports = ViterbiBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}