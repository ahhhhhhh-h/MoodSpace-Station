{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass CosineSimilarity {\n  constructor(container) {\n    this.container = container;\n  }\n  getTokens(text, locale = 'en') {\n    if (typeof text === 'string') {\n      const tokenizer = this.container && this.container.get(`tokenizer-${locale}`);\n      return tokenizer ? tokenizer.tokenize(text, true) : text.split(' ');\n    }\n    return text;\n  }\n  termFreqMap(str, locale) {\n    const words = this.getTokens(str, locale);\n    const termFreq = {};\n    words.forEach(w => {\n      termFreq[w] = (termFreq[w] || 0) + 1;\n    });\n    return termFreq;\n  }\n  addKeysToDict(map, dict) {\n    Object.keys(map).forEach(key => {\n      dict[key] = true;\n    });\n  }\n  termFreqMapToVector(map, dict) {\n    const termFreqVector = [];\n    Object.keys(dict).forEach(term => {\n      termFreqVector.push(map[term] || 0);\n    });\n    return termFreqVector;\n  }\n  vecDotProduct(vecA, vecB) {\n    let product = 0;\n    for (let i = 0; i < vecA.length; i += 1) {\n      product += vecA[i] * vecB[i];\n    }\n    return product;\n  }\n  vecMagnitude(vec) {\n    let sum = 0;\n    for (let i = 0; i < vec.length; i += 1) {\n      sum += vec[i] * vec[i];\n    }\n    return Math.sqrt(sum);\n  }\n\n  /**\n   * Calculates cosine-similarity from two vectors\n   * @param {number[]} left Left vector\n   * @param {number[]} right Right vector\n   * @returns {number} cosine between two vectors\n   * {@link https://en.wikipedia.org/wiki/Cosine_similarity Cosine Similarity}\n   */\n  cosineSimilarity(vecA, vecB) {\n    return this.vecDotProduct(vecA, vecB) / (this.vecMagnitude(vecA) * this.vecMagnitude(vecB));\n  }\n  getTermFreqVectors(strA, strB, locale) {\n    const termFreqA = this.termFreqMap(strA, locale);\n    const termFreqB = this.termFreqMap(strB, locale);\n    if (!Object.keys(termFreqA).length || !Object.keys(termFreqB).length) {\n      return 0;\n    }\n    const dict = {};\n    this.addKeysToDict(termFreqA, dict);\n    this.addKeysToDict(termFreqB, dict);\n    return [this.termFreqMapToVector(termFreqA, dict), this.termFreqMapToVector(termFreqB, dict)];\n  }\n\n  /**\n   * Calculates cosine-similarity from two sentences\n   * @param {string} left Left string\n   * @param {string} right Right string\n   * @returns {number} cosine between two sentences representend in VSM\n   */\n  similarity(strA, strB, locale) {\n    if (strA === strB) {\n      return 1;\n    }\n    const [termFreqVecA, termFreqVecB] = this.getTermFreqVectors(strA, strB, locale);\n    return this.cosineSimilarity(termFreqVecA, termFreqVecB);\n  }\n}\nmodule.exports = CosineSimilarity;","map":{"version":3,"names":["CosineSimilarity","constructor","container","getTokens","text","locale","tokenizer","get","tokenize","split","termFreqMap","str","words","termFreq","forEach","w","addKeysToDict","map","dict","Object","keys","key","termFreqMapToVector","termFreqVector","term","push","vecDotProduct","vecA","vecB","product","i","length","vecMagnitude","vec","sum","Math","sqrt","cosineSimilarity","getTermFreqVectors","strA","strB","termFreqA","termFreqB","similarity","termFreqVecA","termFreqVecB","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/similarity/src/cosine-similarity.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nclass CosineSimilarity {\n  constructor(container) {\n    this.container = container;\n  }\n\n  getTokens(text, locale = 'en') {\n    if (typeof text === 'string') {\n      const tokenizer =\n        this.container && this.container.get(`tokenizer-${locale}`);\n      return tokenizer ? tokenizer.tokenize(text, true) : text.split(' ');\n    }\n    return text;\n  }\n\n  termFreqMap(str, locale) {\n    const words = this.getTokens(str, locale);\n    const termFreq = {};\n    words.forEach((w) => {\n      termFreq[w] = (termFreq[w] || 0) + 1;\n    });\n    return termFreq;\n  }\n\n  addKeysToDict(map, dict) {\n    Object.keys(map).forEach((key) => {\n      dict[key] = true;\n    });\n  }\n\n  termFreqMapToVector(map, dict) {\n    const termFreqVector = [];\n    Object.keys(dict).forEach((term) => {\n      termFreqVector.push(map[term] || 0);\n    });\n    return termFreqVector;\n  }\n\n  vecDotProduct(vecA, vecB) {\n    let product = 0;\n    for (let i = 0; i < vecA.length; i += 1) {\n      product += vecA[i] * vecB[i];\n    }\n    return product;\n  }\n\n  vecMagnitude(vec) {\n    let sum = 0;\n    for (let i = 0; i < vec.length; i += 1) {\n      sum += vec[i] * vec[i];\n    }\n    return Math.sqrt(sum);\n  }\n\n  /**\n   * Calculates cosine-similarity from two vectors\n   * @param {number[]} left Left vector\n   * @param {number[]} right Right vector\n   * @returns {number} cosine between two vectors\n   * {@link https://en.wikipedia.org/wiki/Cosine_similarity Cosine Similarity}\n   */\n  cosineSimilarity(vecA, vecB) {\n    return (\n      this.vecDotProduct(vecA, vecB) /\n      (this.vecMagnitude(vecA) * this.vecMagnitude(vecB))\n    );\n  }\n\n  getTermFreqVectors(strA, strB, locale) {\n    const termFreqA = this.termFreqMap(strA, locale);\n    const termFreqB = this.termFreqMap(strB, locale);\n\n    if (!Object.keys(termFreqA).length || !Object.keys(termFreqB).length) {\n      return 0;\n    }\n    const dict = {};\n    this.addKeysToDict(termFreqA, dict);\n    this.addKeysToDict(termFreqB, dict);\n\n    return [\n      this.termFreqMapToVector(termFreqA, dict),\n      this.termFreqMapToVector(termFreqB, dict),\n    ];\n  }\n\n  /**\n   * Calculates cosine-similarity from two sentences\n   * @param {string} left Left string\n   * @param {string} right Right string\n   * @returns {number} cosine between two sentences representend in VSM\n   */\n  similarity(strA, strB, locale) {\n    if (strA === strB) {\n      return 1;\n    }\n\n    const [termFreqVecA, termFreqVecB] = this.getTermFreqVectors(\n      strA,\n      strB,\n      locale\n    );\n    return this.cosineSimilarity(termFreqVecA, termFreqVecB);\n  }\n}\n\nmodule.exports = CosineSimilarity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}