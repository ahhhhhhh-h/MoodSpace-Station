{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  chunk\n} = require('./korean-chunker');\nconst {\n  initDicts,\n  dictionary\n} = require('./korean-dictionary');\nconst {\n  isName,\n  isKoreanNumber,\n  isKoreanNameVariation\n} = require('./korean-substantive');\nfunction getTopSlice(word) {\n  initDicts();\n  const max = Math.min(word.length, 2);\n  for (let i = max; i > 1; i -= 1) {\n    const slice = word.slice(0, i);\n    if (isName(slice)) {\n      return slice;\n    }\n    if (isKoreanNumber(slice)) {\n      return slice;\n    }\n    if (isKoreanNameVariation(slice)) {\n      return slice;\n    }\n    if (dictionary[slice]) {\n      return slice;\n    }\n  }\n  return word[0];\n}\nfunction isHangulChar(ch) {\n  const regex = /[\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/g;\n  return regex.test(ch);\n}\nfunction buildPotentials(word) {\n  if (!isHangulChar(word.text[0])) {\n    return [word.text];\n  }\n  const potentials = [];\n  let pending = word.text;\n  while (pending.length > 0) {\n    const top = getTopSlice(pending);\n    potentials.push(top);\n    pending = pending.slice(top.length);\n  }\n  return potentials;\n}\nfunction tokenize(text) {\n  const chunks = chunk(text);\n  const result = [];\n  for (let i = 0; i < chunks.length; i += 1) {\n    const potentials = buildPotentials(chunks[i]);\n    for (let j = 0; j < potentials.length; j += 1) {\n      result.push(potentials[j]);\n    }\n  }\n  return result;\n}\nfunction stemWord(token) {\n  initDicts();\n  const value = dictionary[token];\n  if (value) {\n    return value.root || token;\n  }\n  return token;\n}\nmodule.exports = {\n  tokenize,\n  stemWord\n};","map":{"version":3,"names":["chunk","require","initDicts","dictionary","isName","isKoreanNumber","isKoreanNameVariation","getTopSlice","word","max","Math","min","length","i","slice","isHangulChar","ch","regex","test","buildPotentials","text","potentials","pending","top","push","tokenize","chunks","result","j","stemWord","token","value","root","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-ko/src/korean-tokenizer.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { chunk } = require('./korean-chunker');\nconst { initDicts, dictionary } = require('./korean-dictionary');\n\nconst {\n  isName,\n  isKoreanNumber,\n  isKoreanNameVariation,\n} = require('./korean-substantive');\n\nfunction getTopSlice(word) {\n  initDicts();\n  const max = Math.min(word.length, 2);\n  for (let i = max; i > 1; i -= 1) {\n    const slice = word.slice(0, i);\n    if (isName(slice)) {\n      return slice;\n    }\n    if (isKoreanNumber(slice)) {\n      return slice;\n    }\n    if (isKoreanNameVariation(slice)) {\n      return slice;\n    }\n    if (dictionary[slice]) {\n      return slice;\n    }\n  }\n  return word[0];\n}\n\nfunction isHangulChar(ch) {\n  const regex =\n    /[\\u1100-\\u11FF\\u302E\\u302F\\u3131-\\u318E\\u3200-\\u321E\\u3260-\\u327E\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/g;\n  return regex.test(ch);\n}\n\nfunction buildPotentials(word) {\n  if (!isHangulChar(word.text[0])) {\n    return [word.text];\n  }\n  const potentials = [];\n  let pending = word.text;\n  while (pending.length > 0) {\n    const top = getTopSlice(pending);\n    potentials.push(top);\n    pending = pending.slice(top.length);\n  }\n  return potentials;\n}\n\nfunction tokenize(text) {\n  const chunks = chunk(text);\n  const result = [];\n  for (let i = 0; i < chunks.length; i += 1) {\n    const potentials = buildPotentials(chunks[i]);\n    for (let j = 0; j < potentials.length; j += 1) {\n      result.push(potentials[j]);\n    }\n  }\n  return result;\n}\n\nfunction stemWord(token) {\n  initDicts();\n  const value = dictionary[token];\n  if (value) {\n    return value.root || token;\n  }\n  return token;\n}\n\nmodule.exports = {\n  tokenize,\n  stemWord,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}