{"ast":null,"code":"import React,{useRef,useCallback}from'react';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{Line}from'react-chartjs-2';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// 注册 Chart.js 组件\nChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const ChartContainer=styled.div`\n  background: rgba(0, 8, 20, 0.95);\n  padding: 20px;\n  border-radius: 15px;\n  width: 800px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;const ChartWrapper=styled.div`\n  width: 100%;\n  height: 400px;\n  background: rgba(0, 8, 20, 0.95);\n`;const ButtonContainer=styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  padding: 0 10px;\n`;const Button=styled.button`\n  padding: 8px 16px;\n  border-radius: 20px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  background: ${props=>props.$primary?'rgba(255, 255, 255, 0.2)':'transparent'};\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s;\n  font-size: 14px;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;export const EmotionChart=_ref=>{let{celestialBodies,onClose,onExport:propOnExport}=_ref;const chartRef=useRef(null);// 按时间排序并处理数据\nconst sortedBodies=[...celestialBodies].sort((a,b)=>a.timestamp-b.timestamp);// 转换时间戳为可读格式\nconst formatTime=timestamp=>{const date=new Date(timestamp);return`${date.getHours()}:${String(date.getMinutes()).padStart(2,'0')}`;};// 准备图表数据\nconst data={labels:sortedBodies.map(body=>formatTime(body.timestamp)),datasets:[{label:'情绪曲线',data:sortedBodies.map(body=>body.type==='positive'?1:-1),borderColor:'rgba(255, 255, 255, 0.8)',backgroundColor:'rgba(255, 255, 255, 0.1)',tension:0.4,pointBackgroundColor:context=>{const value=context.raw;return value===1?'#FFD700':'#FF6B6B';},pointRadius:6}]};// 图表配置\nconst options={responsive:true,maintainAspectRatio:false,scales:{y:{min:-1.5,max:1.5,grid:{color:'rgba(255, 255, 255, 0.1)'},ticks:{color:'rgba(255, 255, 255, 0.8)',callback:function(value){if(value===1)return'正面';if(value===-1)return'负面';return'';}}},x:{grid:{color:'rgba(255, 255, 255, 0.1)'},ticks:{color:'rgba(255, 255, 255, 0.8)'}}},plugins:{legend:{display:false},title:{display:true,text:'情绪变化曲线',color:'rgba(255, 255, 255, 0.9)',font:{size:16}}}};const handleExport=useCallback(()=>{if(chartRef.current){// 获取 canvas 元素\nconst canvas=chartRef.current.canvas;// 创建一个新的 canvas\nconst exportCanvas=document.createElement('canvas');const ctx=exportCanvas.getContext('2d');if(!ctx)return;// 设置导出 canvas 的尺寸\nexportCanvas.width=canvas.width;exportCanvas.height=canvas.height;// 绘制背景\nctx.fillStyle='#000814';ctx.fillRect(0,0,canvas.width,canvas.height);// 将原图表绘制到新 canvas 上\nctx.drawImage(canvas,0,0);// 导出为图片\nconst dataUrl=exportCanvas.toDataURL('image/png');const link=document.createElement('a');link.download=`情绪曲线-${new Date().toLocaleDateString()}.png`;link.href=dataUrl;link.click();}propOnExport();},[propOnExport]);return/*#__PURE__*/_jsxs(ChartContainer,{children:[/*#__PURE__*/_jsx(ChartWrapper,{children:/*#__PURE__*/_jsx(Line,{ref:chartRef,data:data,options:options})}),/*#__PURE__*/_jsxs(ButtonContainer,{className:\"button-container\",children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"\\u53D6\\u6D88\"}),/*#__PURE__*/_jsx(Button,{$primary:true,onClick:handleExport,children:\"\\u786E\\u8BA4\\u5BFC\\u51FA\"})]})]});};","map":{"version":3,"names":["React","useRef","useCallback","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","styled","jsx","_jsx","jsxs","_jsxs","register","ChartContainer","div","ChartWrapper","ButtonContainer","Button","button","props","$primary","EmotionChart","_ref","celestialBodies","onClose","onExport","propOnExport","chartRef","sortedBodies","sort","a","b","timestamp","formatTime","date","Date","getHours","String","getMinutes","padStart","data","labels","map","body","datasets","label","type","borderColor","backgroundColor","tension","pointBackgroundColor","context","value","raw","pointRadius","options","responsive","maintainAspectRatio","scales","y","min","max","grid","color","ticks","callback","x","plugins","legend","display","title","text","font","size","handleExport","current","canvas","exportCanvas","document","createElement","ctx","getContext","width","height","fillStyle","fillRect","drawImage","dataUrl","toDataURL","link","download","toLocaleDateString","href","click","children","ref","className","onClick"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/src/components/EmotionChart.tsx"],"sourcesContent":["import React, { useRef, useCallback } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartData,\n  ChartOptions\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { CelestialBody } from '../types';\n\n// 注册 Chart.js 组件\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ChartContainer = styled.div`\n  background: rgba(0, 8, 20, 0.95);\n  padding: 20px;\n  border-radius: 15px;\n  width: 800px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst ChartWrapper = styled.div`\n  width: 100%;\n  height: 400px;\n  background: rgba(0, 8, 20, 0.95);\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  padding: 0 10px;\n`;\n\nconst Button = styled.button<{ $primary?: boolean }>`\n  padding: 8px 16px;\n  border-radius: 20px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  background: ${props => props.$primary ? 'rgba(255, 255, 255, 0.2)' : 'transparent'};\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s;\n  font-size: 14px;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\ninterface EmotionChartProps {\n  celestialBodies: CelestialBody[];\n  onClose: () => void;\n  onExport: () => void;\n}\n\nexport const EmotionChart: React.FC<EmotionChartProps> = ({\n  celestialBodies,\n  onClose,\n  onExport: propOnExport\n}) => {\n  const chartRef = useRef<ChartJS<'line'>>(null);\n\n  // 按时间排序并处理数据\n  const sortedBodies = [...celestialBodies].sort((a, b) => a.timestamp - b.timestamp);\n  \n  // 转换时间戳为可读格式\n  const formatTime = (timestamp: number) => {\n    const date = new Date(timestamp);\n    return `${date.getHours()}:${String(date.getMinutes()).padStart(2, '0')}`;\n  };\n\n  // 准备图表数据\n  const data: ChartData<'line'> = {\n    labels: sortedBodies.map(body => formatTime(body.timestamp)),\n    datasets: [\n      {\n        label: '情绪曲线',\n        data: sortedBodies.map(body => body.type === 'positive' ? 1 : -1),\n        borderColor: 'rgba(255, 255, 255, 0.8)',\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        tension: 0.4,\n        pointBackgroundColor: (context: any) => {\n          const value = context.raw;\n          return value === 1 ? '#FFD700' : '#FF6B6B';\n        },\n        pointRadius: 6\n      }\n    ]\n  };\n\n  // 图表配置\n  const options: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        min: -1.5,\n        max: 1.5,\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: 'rgba(255, 255, 255, 0.8)',\n          callback: function(value) {\n            if (value === 1) return '正面';\n            if (value === -1) return '负面';\n            return '';\n          }\n        }\n      },\n      x: {\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: 'rgba(255, 255, 255, 0.8)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: '情绪变化曲线',\n        color: 'rgba(255, 255, 255, 0.9)',\n        font: {\n          size: 16\n        }\n      }\n    }\n  };\n\n  const handleExport = useCallback(() => {\n    if (chartRef.current) {\n      // 获取 canvas 元素\n      const canvas = chartRef.current.canvas;\n      \n      // 创建一个新的 canvas\n      const exportCanvas = document.createElement('canvas');\n      const ctx = exportCanvas.getContext('2d');\n      if (!ctx) return;\n\n      // 设置导出 canvas 的尺寸\n      exportCanvas.width = canvas.width;\n      exportCanvas.height = canvas.height;\n\n      // 绘制背景\n      ctx.fillStyle = '#000814';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // 将原图表绘制到新 canvas 上\n      ctx.drawImage(canvas, 0, 0);\n\n      // 导出为图片\n      const dataUrl = exportCanvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.download = `情绪曲线-${new Date().toLocaleDateString()}.png`;\n      link.href = dataUrl;\n      link.click();\n    }\n    propOnExport();\n  }, [propOnExport]);\n\n  return (\n    <ChartContainer>\n      <ChartWrapper>\n        <Line ref={chartRef} data={data} options={options} />\n      </ChartWrapper>\n      <ButtonContainer className=\"button-container\">\n        <Button onClick={onClose}>取消</Button>\n        <Button $primary onClick={handleExport}>确认导出</Button>\n      </ButtonContainer>\n    </ChartContainer>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}