{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar doublearray = require(\"doublearray\");\nvar TokenInfoDictionary = require(\"./TokenInfoDictionary\");\nvar ConnectionCosts = require(\"./ConnectionCosts\");\nvar UnknownDictionary = require(\"./UnknownDictionary\");\n\n/**\n * Dictionaries container for Tokenizer\n * @param {DoubleArray} trie\n * @param {TokenInfoDictionary} token_info_dictionary\n * @param {ConnectionCosts} connection_costs\n * @param {UnknownDictionary} unknown_dictionary\n * @constructor\n */\nfunction DynamicDictionaries(trie, token_info_dictionary, connection_costs, unknown_dictionary) {\n  if (trie != null) {\n    this.trie = trie;\n  } else {\n    this.trie = doublearray.builder(0).build([{\n      k: \"\",\n      v: 1\n    }]);\n  }\n  if (token_info_dictionary != null) {\n    this.token_info_dictionary = token_info_dictionary;\n  } else {\n    this.token_info_dictionary = new TokenInfoDictionary();\n  }\n  if (connection_costs != null) {\n    this.connection_costs = connection_costs;\n  } else {\n    // backward_size * backward_size\n    this.connection_costs = new ConnectionCosts(0, 0);\n  }\n  if (unknown_dictionary != null) {\n    this.unknown_dictionary = unknown_dictionary;\n  } else {\n    this.unknown_dictionary = new UnknownDictionary();\n  }\n}\n\n// from base.dat & check.dat\nDynamicDictionaries.prototype.loadTrie = function (base_buffer, check_buffer) {\n  this.trie = doublearray.load(base_buffer, check_buffer);\n  return this;\n};\nDynamicDictionaries.prototype.loadTokenInfoDictionaries = function (token_info_buffer, pos_buffer, target_map_buffer) {\n  this.token_info_dictionary.loadDictionary(token_info_buffer);\n  this.token_info_dictionary.loadPosVector(pos_buffer);\n  this.token_info_dictionary.loadTargetMap(target_map_buffer);\n  return this;\n};\nDynamicDictionaries.prototype.loadConnectionCosts = function (cc_buffer) {\n  this.connection_costs.loadConnectionCosts(cc_buffer);\n  return this;\n};\nDynamicDictionaries.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n  this.unknown_dictionary.loadUnknownDictionaries(unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n  return this;\n};\nmodule.exports = DynamicDictionaries;","map":{"version":3,"names":["doublearray","require","TokenInfoDictionary","ConnectionCosts","UnknownDictionary","DynamicDictionaries","trie","token_info_dictionary","connection_costs","unknown_dictionary","builder","build","k","v","prototype","loadTrie","base_buffer","check_buffer","load","loadTokenInfoDictionaries","token_info_buffer","pos_buffer","target_map_buffer","loadDictionary","loadPosVector","loadTargetMap","loadConnectionCosts","cc_buffer","loadUnknownDictionaries","unk_buffer","unk_pos_buffer","unk_map_buffer","cat_map_buffer","compat_cat_map_buffer","invoke_def_buffer","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/kuromoji/src/dict/DynamicDictionaries.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar doublearray = require(\"doublearray\");\nvar TokenInfoDictionary = require(\"./TokenInfoDictionary\");\nvar ConnectionCosts = require(\"./ConnectionCosts\");\nvar UnknownDictionary = require(\"./UnknownDictionary\");\n\n/**\n * Dictionaries container for Tokenizer\n * @param {DoubleArray} trie\n * @param {TokenInfoDictionary} token_info_dictionary\n * @param {ConnectionCosts} connection_costs\n * @param {UnknownDictionary} unknown_dictionary\n * @constructor\n */\nfunction DynamicDictionaries(trie, token_info_dictionary, connection_costs, unknown_dictionary) {\n    if (trie != null) {\n        this.trie = trie;\n    } else {\n        this.trie = doublearray.builder(0).build([\n            {k: \"\", v: 1}\n        ]);\n    }\n    if (token_info_dictionary != null) {\n        this.token_info_dictionary = token_info_dictionary;\n    } else {\n        this.token_info_dictionary = new TokenInfoDictionary();\n    }\n    if (connection_costs != null) {\n        this.connection_costs = connection_costs;\n    } else {\n        // backward_size * backward_size\n        this.connection_costs = new ConnectionCosts(0, 0);\n    }\n    if (unknown_dictionary != null) {\n        this.unknown_dictionary = unknown_dictionary;\n    } else {\n        this.unknown_dictionary = new UnknownDictionary();\n    }\n}\n\n// from base.dat & check.dat\nDynamicDictionaries.prototype.loadTrie = function (base_buffer, check_buffer) {\n    this.trie = doublearray.load(base_buffer, check_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadTokenInfoDictionaries = function (token_info_buffer, pos_buffer, target_map_buffer) {\n    this.token_info_dictionary.loadDictionary(token_info_buffer);\n    this.token_info_dictionary.loadPosVector(pos_buffer);\n    this.token_info_dictionary.loadTargetMap(target_map_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadConnectionCosts = function (cc_buffer) {\n    this.connection_costs.loadConnectionCosts(cc_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n    this.unknown_dictionary.loadUnknownDictionaries(unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n    return this;\n};\n\nmodule.exports = DynamicDictionaries;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AACxC,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC1D,IAAIE,eAAe,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAClD,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,qBAAqB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,mBAAmBA,CAACC,IAAI,EAAEC,qBAAqB,EAAEC,gBAAgB,EAAEC,kBAAkB,EAAE;EAC5F,IAAIH,IAAI,IAAI,IAAI,EAAE;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;EACpB,CAAC,MAAM;IACH,IAAI,CAACA,IAAI,GAAGN,WAAW,CAACU,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CACrC;MAACC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAC,CAAC,CAChB,CAAC;EACN;EACA,IAAIN,qBAAqB,IAAI,IAAI,EAAE;IAC/B,IAAI,CAACA,qBAAqB,GAAGA,qBAAqB;EACtD,CAAC,MAAM;IACH,IAAI,CAACA,qBAAqB,GAAG,IAAIL,mBAAmB,CAAC,CAAC;EAC1D;EACA,IAAIM,gBAAgB,IAAI,IAAI,EAAE;IAC1B,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;EAC5C,CAAC,MAAM;IACH;IACA,IAAI,CAACA,gBAAgB,GAAG,IAAIL,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC;EACrD;EACA,IAAIM,kBAAkB,IAAI,IAAI,EAAE;IAC5B,IAAI,CAACA,kBAAkB,GAAGA,kBAAkB;EAChD,CAAC,MAAM;IACH,IAAI,CAACA,kBAAkB,GAAG,IAAIL,iBAAiB,CAAC,CAAC;EACrD;AACJ;;AAEA;AACAC,mBAAmB,CAACS,SAAS,CAACC,QAAQ,GAAG,UAAUC,WAAW,EAAEC,YAAY,EAAE;EAC1E,IAAI,CAACX,IAAI,GAAGN,WAAW,CAACkB,IAAI,CAACF,WAAW,EAAEC,YAAY,CAAC;EACvD,OAAO,IAAI;AACf,CAAC;AAEDZ,mBAAmB,CAACS,SAAS,CAACK,yBAAyB,GAAG,UAAUC,iBAAiB,EAAEC,UAAU,EAAEC,iBAAiB,EAAE;EAClH,IAAI,CAACf,qBAAqB,CAACgB,cAAc,CAACH,iBAAiB,CAAC;EAC5D,IAAI,CAACb,qBAAqB,CAACiB,aAAa,CAACH,UAAU,CAAC;EACpD,IAAI,CAACd,qBAAqB,CAACkB,aAAa,CAACH,iBAAiB,CAAC;EAC3D,OAAO,IAAI;AACf,CAAC;AAEDjB,mBAAmB,CAACS,SAAS,CAACY,mBAAmB,GAAG,UAAUC,SAAS,EAAE;EACrE,IAAI,CAACnB,gBAAgB,CAACkB,mBAAmB,CAACC,SAAS,CAAC;EACpD,OAAO,IAAI;AACf,CAAC;AAEDtB,mBAAmB,CAACS,SAAS,CAACc,uBAAuB,GAAG,UAAUC,UAAU,EAAEC,cAAc,EAAEC,cAAc,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,iBAAiB,EAAE;EACpK,IAAI,CAACzB,kBAAkB,CAACmB,uBAAuB,CAACC,UAAU,EAAEC,cAAc,EAAEC,cAAc,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,iBAAiB,CAAC;EACrJ,OAAO,IAAI;AACf,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG/B,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}