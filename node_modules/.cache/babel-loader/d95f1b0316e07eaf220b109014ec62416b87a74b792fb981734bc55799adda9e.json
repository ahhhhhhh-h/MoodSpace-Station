{"ast":null,"code":"var _jsxFileName = \"/Users/zyq/Desktop/\\u5927\\u4E8C\\u4E0B/\\u6691\\u671F\\u5B9E\\u4E60/moonshot project/src/components/Moon.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { moonImage, starIcon, meteorIcon, flower1Icon, flower2Icon, flower3Icon, othersIcon } from '../assets';\nimport { ReplyBox } from './ReplyBox';\nimport { ResponseMessage } from './ResponseMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rotate = keyframes`\n  from { transform: rotate(0deg); }\n  to   { transform: rotate(360deg); }\n`;\nconst float = keyframes`\n  0%   { transform: translateY(0) translateX(0); }\n  50%  { transform: translateY(-8px) translateX(5px); }\n  100% { transform: translateY(0) translateX(0); }\n`;\nconst MoonContainer = styled.div`\n  position: absolute;\n  top: 50%; left: 50%;\n  transform: translate(-50%, -50%);\n  width: 360px; height: 360px;\n  pointer-events: none;\n`;\n_c = MoonContainer;\nconst MoonSphere = styled.div`\n  width: 100%; height: 100%;\n  border-radius: 50%;\n  background: url(${moonImage}) no-repeat center center;\n  background-size: cover;\n  animation: ${rotate} 60s linear infinite;\n  box-shadow: inset -25px -25px 40px rgba(0,0,0,0.3);\n`;\n_c2 = MoonSphere;\nconst FlowerOverlay = styled.div`\n  position: absolute;\n  top: 0; left: 0;\n  width: 100%; height: 100%;\n  pointer-events: auto;\n`;\n_c3 = FlowerOverlay;\nconst FlowerDot = styled.div`\n  position: absolute;\n  left: ${p => p.$x}px;\n  top: ${p => p.$y}px;\n  width: 32px;\n  height: 32px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: ${p => p.flowerType === 'flower1' ? `url(${flower1Icon})` : p.flowerType === 'flower2' ? `url(${flower2Icon})` : `url(${flower3Icon})`};\n`;\n_c4 = FlowerDot;\nconst CelestialBodyContainer = styled.div`\n  position: absolute;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  width: 48px;\n  height: 48px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n  animation: ${props => props.isExternal && props.isReplied ? 'moveAway 5s ease-in-out forwards' : 'none'};\n\n  ${props => {\n  if (props.isExternal) {\n    return `background-image: url(${othersIcon});`;\n  }\n  switch (props.type) {\n    case 'positive':\n      return `background-image: url(${starIcon});`;\n    case 'negative':\n      return `background-image: url(${meteorIcon});`;\n    case 'received':\n      return `background-image: url(${starIcon});`;\n    default:\n      return '';\n  }\n}}\n\n  &:hover {\n    transform: scale(1.2);\n    z-index: 10;\n  }\n\n  &:hover div {\n    opacity: 1;\n  }\n`;\n_c5 = CelestialBodyContainer;\nconst Tooltip = styled.div`\n  position: absolute;\n  left: 50%;\n  top: -40px;\n  transform: translateX(-50%);\n  background: rgba(255, 255, 255, 0.15);\n  backdrop-filter: blur(6px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  padding: 8px 12px;\n  border-radius: 8px;\n  font-size: 14px;\n  white-space: pre-wrap;\n  pointer-events: none;\n  opacity: 0;\n  transition: opacity 0.3s ease, transform 0.3s ease;\n  z-index: 100;\n  min-width: 120px;\n  max-width: 200px;\n  text-align: center;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -5px;\n    transform: translateX(-50%) rotate(45deg);\n    width: 10px;\n    height: 10px;\n    background: rgba(255, 255, 255, 0.15);\n    border-left: 1px solid rgba(255, 255, 255, 0.3);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(6px);\n  }\n`;\n_c6 = Tooltip;\nconst PositionWrapper = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  pointer-events: none;\n\n  div {\n    pointer-events: auto;  /* 👈 所有内部 div 恢复鼠标事件 */\n  }\n`;\n_c7 = PositionWrapper;\nexport const Moon = ({\n  celestialBodies,\n  setCelestialBodies,\n  flowers = [],\n  isRadioOn = false\n}) => {\n  _s();\n  const [positions, setPositions] = useState({});\n  const [selectedCelestialBody, setSelectedCelestialBody] = useState(null);\n  const [repliedBodies, setRepliedBodies] = useState(new Set());\n  const [showResponseMessage, setShowResponseMessage] = useState(false);\n  const moonCenter = useMemo(() => {\n    const topOffset = 120;\n    const bottomOffset = 180;\n    return {\n      x: window.innerWidth / 2,\n      y: (window.innerHeight - topOffset - bottomOffset) / 2 + topOffset\n    };\n  }, []);\n  useEffect(() => {\n    celestialBodies.forEach(body => {\n      if (!positions[body.id]) {\n        setRepliedBodies(prev => new Set([...prev, body.id]));\n        setTimeout(() => {\n          setRepliedBodies(prev => {\n            const next = new Set(prev);\n            next.delete(body.id);\n            return next;\n          });\n        }, 5000);\n      }\n    });\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n    const moonR = 150;\n    const celestialSize = 48;\n    const moonX = moonCenter.x;\n    const moonY = moonCenter.y;\n    const topMargin = 120;\n    const bottomMargin = 180;\n    const sideMargin = 100;\n    const minX = sideMargin;\n    const maxX = w - sideMargin - celestialSize;\n    const minY = topMargin;\n    const maxY = h - bottomMargin - celestialSize;\n    const safeDistance = moonR + 80;\n    const newPos = {};\n    celestialBodies.forEach(body => {\n      if (positions[body.id]) {\n        newPos[body.id] = positions[body.id];\n      } else {\n        let x,\n          y,\n          cnt = 0;\n        let angle;\n        do {\n          angle = Math.random() * Math.PI * 2;\n          const distance = safeDistance + Math.random() * 100;\n          x = moonX + Math.cos(angle) * distance;\n          y = moonY + Math.sin(angle) * distance;\n          x = Math.max(minX, Math.min(maxX, x));\n          y = Math.max(minY, Math.min(maxY, y));\n          cnt++;\n        } while (cnt < 100 && Object.values(newPos).some(pos => Math.hypot(x - pos.x, y - pos.y) < celestialSize * 1.5));\n        newPos[body.id] = {\n          x,\n          y\n        };\n      }\n    });\n    setPositions(newPos);\n  }, [celestialBodies, moonCenter]);\n  const handleCelestialBodyClick = body => {\n    if (body.isExternal && isRadioOn) {\n      setSelectedCelestialBody(body);\n    }\n  };\n  const handleReplySubmit = replyText => {\n    if (selectedCelestialBody && replyText.trim()) {\n      const updatedReplies = new Set([...Array.from(selectedCelestialBody.replies), replyText]);\n      const updatedCelestialBodies = celestialBodies.map(body => {\n        if (body.id === selectedCelestialBody.id) {\n          return {\n            ...body,\n            replies: updatedReplies\n          };\n        }\n        return body;\n      });\n      setCelestialBodies(updatedCelestialBodies);\n      setSelectedCelestialBody(null);\n      setRepliedBodies(prev => new Set([...prev, selectedCelestialBody.id]));\n      setShowResponseMessage(true);\n      setTimeout(() => {\n        setShowResponseMessage(false);\n      }, 5000);\n    }\n  };\n  const handleReplyClose = () => {\n    setSelectedCelestialBody(null);\n  };\n  const visibleBodies = celestialBodies.filter(body => !body.isExternal || body.isExternal && isRadioOn);\n  return /*#__PURE__*/_jsxDEV(PositionWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(MoonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MoonSphere, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlowerOverlay, {\n        children: flowers.map(flower => /*#__PURE__*/_jsxDEV(FlowerDot, {\n          $x: flower.position.x,\n          $y: flower.position.y,\n          flowerType: flower.style\n        }, flower.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), visibleBodies.map(body => {\n      const pos = positions[body.id];\n      if (!pos) return null;\n      const isReplied = repliedBodies.has(body.id);\n      return /*#__PURE__*/_jsxDEV(CelestialBodyContainer, {\n        type: body.type,\n        x: pos.x,\n        y: pos.y,\n        isExternal: body.isExternal,\n        isReplied: isReplied && body.isExternal,\n        onClick: () => handleCelestialBodyClick(body),\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: body.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), body.isExternal && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '4px'\n            },\n            children: [\"\\u6765\\u81EA\\uFF1A\", body.sender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)\n      }, body.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this);\n    }), selectedCelestialBody && /*#__PURE__*/_jsxDEV(ReplyBox, {\n      content: selectedCelestialBody.content,\n      onSubmit: handleReplySubmit,\n      onClose: handleReplyClose,\n      replies: Array.from(selectedCelestialBody.replies)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), showResponseMessage && /*#__PURE__*/_jsxDEV(ResponseMessage, {\n      onAnimationEnd: () => setShowResponseMessage(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(Moon, \"Gz8sR8Ma3fmJPCYnODt4lbVW+UU=\");\n_c8 = Moon;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"MoonContainer\");\n$RefreshReg$(_c2, \"MoonSphere\");\n$RefreshReg$(_c3, \"FlowerOverlay\");\n$RefreshReg$(_c4, \"FlowerDot\");\n$RefreshReg$(_c5, \"CelestialBodyContainer\");\n$RefreshReg$(_c6, \"Tooltip\");\n$RefreshReg$(_c7, \"PositionWrapper\");\n$RefreshReg$(_c8, \"Moon\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","styled","keyframes","moonImage","starIcon","meteorIcon","flower1Icon","flower2Icon","flower3Icon","othersIcon","ReplyBox","ResponseMessage","jsxDEV","_jsxDEV","rotate","float","MoonContainer","div","_c","MoonSphere","_c2","FlowerOverlay","_c3","FlowerDot","p","$x","$y","flowerType","_c4","CelestialBodyContainer","props","x","y","isExternal","isReplied","type","_c5","Tooltip","_c6","PositionWrapper","_c7","Moon","celestialBodies","setCelestialBodies","flowers","isRadioOn","_s","positions","setPositions","selectedCelestialBody","setSelectedCelestialBody","repliedBodies","setRepliedBodies","Set","showResponseMessage","setShowResponseMessage","moonCenter","topOffset","bottomOffset","window","innerWidth","innerHeight","forEach","body","id","prev","setTimeout","next","delete","w","h","moonR","celestialSize","moonX","moonY","topMargin","bottomMargin","sideMargin","minX","maxX","minY","maxY","safeDistance","newPos","cnt","angle","Math","random","PI","distance","cos","sin","max","min","Object","values","some","pos","hypot","handleCelestialBodyClick","handleReplySubmit","replyText","trim","updatedReplies","Array","from","replies","updatedCelestialBodies","map","handleReplyClose","visibleBodies","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","flower","position","style","has","onClick","content","marginTop","sender","onSubmit","onClose","onAnimationEnd","_c8","$RefreshReg$"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/src/components/Moon.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { CelestialBody, Flower, EmotionType } from '../types';\nimport {\n  moonImage,\n  starIcon,\n  meteorIcon,\n  flower1Icon,\n  flower2Icon,\n  flower3Icon,\n  othersIcon\n} from '../assets';\nimport { ReplyBox } from './ReplyBox';\nimport { ResponseMessage } from './ResponseMessage';\n\nconst rotate = keyframes`\n  from { transform: rotate(0deg); }\n  to   { transform: rotate(360deg); }\n`;\n\nconst float = keyframes`\n  0%   { transform: translateY(0) translateX(0); }\n  50%  { transform: translateY(-8px) translateX(5px); }\n  100% { transform: translateY(0) translateX(0); }\n`;\n\nconst MoonContainer = styled.div`\n  position: absolute;\n  top: 50%; left: 50%;\n  transform: translate(-50%, -50%);\n  width: 360px; height: 360px;\n  pointer-events: none;\n`;\n\nconst MoonSphere = styled.div`\n  width: 100%; height: 100%;\n  border-radius: 50%;\n  background: url(${moonImage}) no-repeat center center;\n  background-size: cover;\n  animation: ${rotate} 60s linear infinite;\n  box-shadow: inset -25px -25px 40px rgba(0,0,0,0.3);\n`;\n\nconst FlowerOverlay = styled.div`\n  position: absolute;\n  top: 0; left: 0;\n  width: 100%; height: 100%;\n  pointer-events: auto;\n`;\n\ninterface FlowerDotProps {\n  $x: number;\n  $y: number;\n  flowerType: 'flower1' | 'flower2' | 'flower3';\n}\nconst FlowerDot = styled.div<FlowerDotProps>`\n  position: absolute;\n  left: ${p => p.$x}px;\n  top: ${p => p.$y}px;\n  width: 32px;\n  height: 32px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: ${p =>\n    p.flowerType === 'flower1'\n      ? `url(${flower1Icon})`\n      : p.flowerType === 'flower2'\n      ? `url(${flower2Icon})`\n      : `url(${flower3Icon})`};\n`;\n\nconst CelestialBodyContainer = styled.div<{\n  type: EmotionType;\n  x: number;\n  y: number;\n  isExternal?: boolean;\n  isReplied?: boolean;\n}>`\n  position: absolute;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  width: 48px;\n  height: 48px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n  animation: ${props => props.isExternal && props.isReplied ? 'moveAway 5s ease-in-out forwards' : 'none'};\n\n  ${props => {\n    if (props.isExternal) {\n      return `background-image: url(${othersIcon});`;\n    }\n    switch (props.type) {\n      case 'positive':\n        return `background-image: url(${starIcon});`;\n      case 'negative':\n        return `background-image: url(${meteorIcon});`;\n      case 'received':\n        return `background-image: url(${starIcon});`;\n      default:\n        return '';\n    }\n  }}\n\n  &:hover {\n    transform: scale(1.2);\n    z-index: 10;\n  }\n\n  &:hover div {\n    opacity: 1;\n  }\n`;\n\nconst Tooltip = styled.div`\n  position: absolute;\n  left: 50%;\n  top: -40px;\n  transform: translateX(-50%);\n  background: rgba(255, 255, 255, 0.15);\n  backdrop-filter: blur(6px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  padding: 8px 12px;\n  border-radius: 8px;\n  font-size: 14px;\n  white-space: pre-wrap;\n  pointer-events: none;\n  opacity: 0;\n  transition: opacity 0.3s ease, transform 0.3s ease;\n  z-index: 100;\n  min-width: 120px;\n  max-width: 200px;\n  text-align: center;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -5px;\n    transform: translateX(-50%) rotate(45deg);\n    width: 10px;\n    height: 10px;\n    background: rgba(255, 255, 255, 0.15);\n    border-left: 1px solid rgba(255, 255, 255, 0.3);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(6px);\n  }\n`;\n\nconst PositionWrapper = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  pointer-events: none;\n\n  div {\n    pointer-events: auto;  /* 👈 所有内部 div 恢复鼠标事件 */\n  }\n`;\n\ninterface MoonProps {\n  celestialBodies: CelestialBody[];\n  setCelestialBodies: React.Dispatch<React.SetStateAction<CelestialBody[]>>;\n  flowers?: Flower[];\n  isRadioOn?: boolean;\n}\n\nexport const Moon: React.FC<MoonProps> = ({\n  celestialBodies,\n  setCelestialBodies,\n  flowers = [],\n  isRadioOn = false\n}) => {\n  const [positions, setPositions] = useState<Record<string, { x: number; y: number }>>({});\n  const [selectedCelestialBody, setSelectedCelestialBody] = useState<CelestialBody | null>(null);\n  const [repliedBodies, setRepliedBodies] = useState<Set<string>>(new Set());\n  const [showResponseMessage, setShowResponseMessage] = useState(false);\n\n  const moonCenter = useMemo(() => {\n    const topOffset = 120;\n    const bottomOffset = 180;\n    return {\n      x: window.innerWidth / 2,\n      y: (window.innerHeight - topOffset - bottomOffset) / 2 + topOffset\n    };\n  }, []);\n\n  useEffect(() => {\n    celestialBodies.forEach(body => {\n      if (!positions[body.id]) {\n        setRepliedBodies(prev => new Set([...prev, body.id]));\n        setTimeout(() => {\n          setRepliedBodies(prev => {\n            const next = new Set(prev);\n            next.delete(body.id);\n            return next;\n          });\n        }, 5000);\n      }\n    });\n\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n    const moonR = 150;\n    const celestialSize = 48;\n\n    const moonX = moonCenter.x;\n    const moonY = moonCenter.y;\n\n    const topMargin = 120;\n    const bottomMargin = 180;\n    const sideMargin = 100;\n\n    const minX = sideMargin;\n    const maxX = w - sideMargin - celestialSize;\n    const minY = topMargin;\n    const maxY = h - bottomMargin - celestialSize;\n\n    const safeDistance = moonR + 80;\n\n    const newPos: Record<string, { x: number; y: number }> = {};\n    celestialBodies.forEach(body => {\n      if (positions[body.id]) {\n        newPos[body.id] = positions[body.id];\n      } else {\n        let x: number, y: number, cnt = 0;\n        let angle: number;\n        do {\n          angle = Math.random() * Math.PI * 2;\n          const distance = safeDistance + Math.random() * 100;\n          x = moonX + Math.cos(angle) * distance;\n          y = moonY + Math.sin(angle) * distance;\n          x = Math.max(minX, Math.min(maxX, x));\n          y = Math.max(minY, Math.min(maxY, y));\n          cnt++;\n        } while (\n          cnt < 100 && (\n            Object.values(newPos).some(pos =>\n              Math.hypot(x - pos.x, y - pos.y) < celestialSize * 1.5\n            )\n          )\n        );\n        newPos[body.id] = { x, y };\n      }\n    });\n\n    setPositions(newPos);\n  }, [celestialBodies, moonCenter]);\n\n  const handleCelestialBodyClick = (body: CelestialBody) => {\n    if (body.isExternal && isRadioOn) {\n      setSelectedCelestialBody(body);\n    }\n  };\n\n  const handleReplySubmit = (replyText: string) => {\n    if (selectedCelestialBody && replyText.trim()) {\n      const updatedReplies = new Set([...Array.from(selectedCelestialBody.replies), replyText]);\n      const updatedCelestialBodies = celestialBodies.map(body => {\n        if (body.id === selectedCelestialBody.id) {\n          return { ...body, replies: updatedReplies };\n        }\n        return body;\n      });\n      setCelestialBodies(updatedCelestialBodies);\n      setSelectedCelestialBody(null);\n      setRepliedBodies(prev => new Set([...prev, selectedCelestialBody.id]));\n      setShowResponseMessage(true);\n      setTimeout(() => {\n        setShowResponseMessage(false);\n      }, 5000);\n    }\n  };\n\n  const handleReplyClose = () => {\n    setSelectedCelestialBody(null);\n  };\n\n  const visibleBodies = celestialBodies.filter(\n    body => !body.isExternal || (body.isExternal && isRadioOn)\n  );\n\n  return (\n    <PositionWrapper>\n      <MoonContainer>\n        <MoonSphere />\n        <FlowerOverlay>\n          {flowers.map(flower => (\n            <FlowerDot\n              key={flower.id}\n              $x={flower.position.x}\n              $y={flower.position.y}\n              flowerType={flower.style}\n            />\n          ))}\n        </FlowerOverlay>\n      </MoonContainer>\n\n      {visibleBodies.map(body => {\n        const pos = positions[body.id];\n        if (!pos) return null;\n        const isReplied = repliedBodies.has(body.id);\n\n        return (\n          <CelestialBodyContainer\n            key={body.id}\n            type={body.type}\n            x={pos.x}\n            y={pos.y}\n            isExternal={body.isExternal}\n            isReplied={isReplied && body.isExternal}\n            onClick={() => handleCelestialBodyClick(body)}\n          >\n            {/* Tooltip内嵌 */}\n            <Tooltip>\n              <div>{body.content}</div>\n              {body.isExternal && <div style={{ marginTop: '4px' }}>来自：{body.sender}</div>}\n            </Tooltip>\n          </CelestialBodyContainer>\n        );\n      })}\n\n      {selectedCelestialBody && (\n        <ReplyBox\n          content={selectedCelestialBody.content}\n          onSubmit={handleReplySubmit}\n          onClose={handleReplyClose}\n          replies={Array.from(selectedCelestialBody.replies)}\n        />\n      )}\n\n      {showResponseMessage && (\n        <ResponseMessage onAnimationEnd={() => setShowResponseMessage(false)} />\n      )}\n    </PositionWrapper>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAErD,SACEC,SAAS,EACTC,QAAQ,EACRC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,WAAW,EACXC,UAAU,QACL,WAAW;AAClB,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAGZ,SAAS;AACxB;AACA;AACA,CAAC;AAED,MAAMa,KAAK,GAAGb,SAAS;AACvB;AACA;AACA;AACA,CAAC;AAED,MAAMc,aAAa,GAAGf,MAAM,CAACgB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,aAAa;AAQnB,MAAMG,UAAU,GAAGlB,MAAM,CAACgB,GAAG;AAC7B;AACA;AACA,oBAAoBd,SAAS;AAC7B;AACA,eAAeW,MAAM;AACrB;AACA,CAAC;AAACM,GAAA,GAPID,UAAU;AAShB,MAAME,aAAa,GAAGpB,MAAM,CAACgB,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GALID,aAAa;AAYnB,MAAME,SAAS,GAAGtB,MAAM,CAACgB,GAAmB;AAC5C;AACA,UAAUO,CAAC,IAAIA,CAAC,CAACC,EAAE;AACnB,SAASD,CAAC,IAAIA,CAAC,CAACE,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,sBAAsBF,CAAC,IACnBA,CAAC,CAACG,UAAU,KAAK,SAAS,GACtB,OAAOrB,WAAW,GAAG,GACrBkB,CAAC,CAACG,UAAU,KAAK,SAAS,GAC1B,OAAOpB,WAAW,GAAG,GACrB,OAAOC,WAAW,GAAG;AAC7B,CAAC;AAACoB,GAAA,GAfIL,SAAS;AAiBf,MAAMM,sBAAsB,GAAG5B,MAAM,CAACgB,GAMpC;AACF;AACA,UAAUa,KAAK,IAAIA,KAAK,CAACC,CAAC;AAC1B,SAASD,KAAK,IAAIA,KAAK,CAACE,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAeF,KAAK,IAAIA,KAAK,CAACG,UAAU,IAAIH,KAAK,CAACI,SAAS,GAAG,kCAAkC,GAAG,MAAM;AACzG;AACA,IAAIJ,KAAK,IAAI;EACT,IAAIA,KAAK,CAACG,UAAU,EAAE;IACpB,OAAO,yBAAyBxB,UAAU,IAAI;EAChD;EACA,QAAQqB,KAAK,CAACK,IAAI;IAChB,KAAK,UAAU;MACb,OAAO,yBAAyB/B,QAAQ,IAAI;IAC9C,KAAK,UAAU;MACb,OAAO,yBAAyBC,UAAU,IAAI;IAChD,KAAK,UAAU;MACb,OAAO,yBAAyBD,QAAQ,IAAI;IAC9C;MACE,OAAO,EAAE;EACb;AACF,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgC,GAAA,GA1CIP,sBAAsB;AA4C5B,MAAMQ,OAAO,GAAGpC,MAAM,CAACgB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GAlCID,OAAO;AAoCb,MAAME,eAAe,GAAGtC,MAAM,CAACgB,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuB,GAAA,GAXID,eAAe;AAoBrB,OAAO,MAAME,IAAyB,GAAGA,CAAC;EACxCC,eAAe;EACfC,kBAAkB;EAClBC,OAAO,GAAG,EAAE;EACZC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlD,QAAQ,CAA2C,CAAC,CAAC,CAAC;EACxF,MAAM,CAACmD,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGpD,QAAQ,CAAuB,IAAI,CAAC;EAC9F,MAAM,CAACqD,aAAa,EAAEC,gBAAgB,CAAC,GAAGtD,QAAQ,CAAc,IAAIuD,GAAG,CAAC,CAAC,CAAC;EAC1E,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAM0D,UAAU,GAAGxD,OAAO,CAAC,MAAM;IAC/B,MAAMyD,SAAS,GAAG,GAAG;IACrB,MAAMC,YAAY,GAAG,GAAG;IACxB,OAAO;MACL3B,CAAC,EAAE4B,MAAM,CAACC,UAAU,GAAG,CAAC;MACxB5B,CAAC,EAAE,CAAC2B,MAAM,CAACE,WAAW,GAAGJ,SAAS,GAAGC,YAAY,IAAI,CAAC,GAAGD;IAC3D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN1D,SAAS,CAAC,MAAM;IACd2C,eAAe,CAACoB,OAAO,CAACC,IAAI,IAAI;MAC9B,IAAI,CAAChB,SAAS,CAACgB,IAAI,CAACC,EAAE,CAAC,EAAE;QACvBZ,gBAAgB,CAACa,IAAI,IAAI,IAAIZ,GAAG,CAAC,CAAC,GAAGY,IAAI,EAAEF,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC;QACrDE,UAAU,CAAC,MAAM;UACfd,gBAAgB,CAACa,IAAI,IAAI;YACvB,MAAME,IAAI,GAAG,IAAId,GAAG,CAACY,IAAI,CAAC;YAC1BE,IAAI,CAACC,MAAM,CAACL,IAAI,CAACC,EAAE,CAAC;YACpB,OAAOG,IAAI;UACb,CAAC,CAAC;QACJ,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,CAAC;IAEF,MAAME,CAAC,GAAGV,MAAM,CAACC,UAAU;IAC3B,MAAMU,CAAC,GAAGX,MAAM,CAACE,WAAW;IAC5B,MAAMU,KAAK,GAAG,GAAG;IACjB,MAAMC,aAAa,GAAG,EAAE;IAExB,MAAMC,KAAK,GAAGjB,UAAU,CAACzB,CAAC;IAC1B,MAAM2C,KAAK,GAAGlB,UAAU,CAACxB,CAAC;IAE1B,MAAM2C,SAAS,GAAG,GAAG;IACrB,MAAMC,YAAY,GAAG,GAAG;IACxB,MAAMC,UAAU,GAAG,GAAG;IAEtB,MAAMC,IAAI,GAAGD,UAAU;IACvB,MAAME,IAAI,GAAGV,CAAC,GAAGQ,UAAU,GAAGL,aAAa;IAC3C,MAAMQ,IAAI,GAAGL,SAAS;IACtB,MAAMM,IAAI,GAAGX,CAAC,GAAGM,YAAY,GAAGJ,aAAa;IAE7C,MAAMU,YAAY,GAAGX,KAAK,GAAG,EAAE;IAE/B,MAAMY,MAAgD,GAAG,CAAC,CAAC;IAC3DzC,eAAe,CAACoB,OAAO,CAACC,IAAI,IAAI;MAC9B,IAAIhB,SAAS,CAACgB,IAAI,CAACC,EAAE,CAAC,EAAE;QACtBmB,MAAM,CAACpB,IAAI,CAACC,EAAE,CAAC,GAAGjB,SAAS,CAACgB,IAAI,CAACC,EAAE,CAAC;MACtC,CAAC,MAAM;QACL,IAAIjC,CAAS;UAAEC,CAAS;UAAEoD,GAAG,GAAG,CAAC;QACjC,IAAIC,KAAa;QACjB,GAAG;UACDA,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACE,EAAE,GAAG,CAAC;UACnC,MAAMC,QAAQ,GAAGP,YAAY,GAAGI,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;UACnDxD,CAAC,GAAG0C,KAAK,GAAGa,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC,GAAGI,QAAQ;UACtCzD,CAAC,GAAG0C,KAAK,GAAGY,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC,GAAGI,QAAQ;UACtC1D,CAAC,GAAGuD,IAAI,CAACM,GAAG,CAACd,IAAI,EAAEQ,IAAI,CAACO,GAAG,CAACd,IAAI,EAAEhD,CAAC,CAAC,CAAC;UACrCC,CAAC,GAAGsD,IAAI,CAACM,GAAG,CAACZ,IAAI,EAAEM,IAAI,CAACO,GAAG,CAACZ,IAAI,EAAEjD,CAAC,CAAC,CAAC;UACrCoD,GAAG,EAAE;QACP,CAAC,QACCA,GAAG,GAAG,GAAG,IACPU,MAAM,CAACC,MAAM,CAACZ,MAAM,CAAC,CAACa,IAAI,CAACC,GAAG,IAC5BX,IAAI,CAACY,KAAK,CAACnE,CAAC,GAAGkE,GAAG,CAAClE,CAAC,EAAEC,CAAC,GAAGiE,GAAG,CAACjE,CAAC,CAAC,GAAGwC,aAAa,GAAG,GACrD,CACD;QAEHW,MAAM,CAACpB,IAAI,CAACC,EAAE,CAAC,GAAG;UAAEjC,CAAC;UAAEC;QAAE,CAAC;MAC5B;IACF,CAAC,CAAC;IAEFgB,YAAY,CAACmC,MAAM,CAAC;EACtB,CAAC,EAAE,CAACzC,eAAe,EAAEc,UAAU,CAAC,CAAC;EAEjC,MAAM2C,wBAAwB,GAAIpC,IAAmB,IAAK;IACxD,IAAIA,IAAI,CAAC9B,UAAU,IAAIY,SAAS,EAAE;MAChCK,wBAAwB,CAACa,IAAI,CAAC;IAChC;EACF,CAAC;EAED,MAAMqC,iBAAiB,GAAIC,SAAiB,IAAK;IAC/C,IAAIpD,qBAAqB,IAAIoD,SAAS,CAACC,IAAI,CAAC,CAAC,EAAE;MAC7C,MAAMC,cAAc,GAAG,IAAIlD,GAAG,CAAC,CAAC,GAAGmD,KAAK,CAACC,IAAI,CAACxD,qBAAqB,CAACyD,OAAO,CAAC,EAAEL,SAAS,CAAC,CAAC;MACzF,MAAMM,sBAAsB,GAAGjE,eAAe,CAACkE,GAAG,CAAC7C,IAAI,IAAI;QACzD,IAAIA,IAAI,CAACC,EAAE,KAAKf,qBAAqB,CAACe,EAAE,EAAE;UACxC,OAAO;YAAE,GAAGD,IAAI;YAAE2C,OAAO,EAAEH;UAAe,CAAC;QAC7C;QACA,OAAOxC,IAAI;MACb,CAAC,CAAC;MACFpB,kBAAkB,CAACgE,sBAAsB,CAAC;MAC1CzD,wBAAwB,CAAC,IAAI,CAAC;MAC9BE,gBAAgB,CAACa,IAAI,IAAI,IAAIZ,GAAG,CAAC,CAAC,GAAGY,IAAI,EAAEhB,qBAAqB,CAACe,EAAE,CAAC,CAAC,CAAC;MACtET,sBAAsB,CAAC,IAAI,CAAC;MAC5BW,UAAU,CAAC,MAAM;QACfX,sBAAsB,CAAC,KAAK,CAAC;MAC/B,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAMsD,gBAAgB,GAAGA,CAAA,KAAM;IAC7B3D,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC;EAED,MAAM4D,aAAa,GAAGpE,eAAe,CAACqE,MAAM,CAC1ChD,IAAI,IAAI,CAACA,IAAI,CAAC9B,UAAU,IAAK8B,IAAI,CAAC9B,UAAU,IAAIY,SAClD,CAAC;EAED,oBACEhC,OAAA,CAAC0B,eAAe;IAAAyE,QAAA,gBACdnG,OAAA,CAACG,aAAa;MAAAgG,QAAA,gBACZnG,OAAA,CAACM,UAAU;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdvG,OAAA,CAACQ,aAAa;QAAA2F,QAAA,EACXpE,OAAO,CAACgE,GAAG,CAACS,MAAM,iBACjBxG,OAAA,CAACU,SAAS;UAERE,EAAE,EAAE4F,MAAM,CAACC,QAAQ,CAACvF,CAAE;UACtBL,EAAE,EAAE2F,MAAM,CAACC,QAAQ,CAACtF,CAAE;UACtBL,UAAU,EAAE0F,MAAM,CAACE;QAAM,GAHpBF,MAAM,CAACrD,EAAE;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIf,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEfN,aAAa,CAACF,GAAG,CAAC7C,IAAI,IAAI;MACzB,MAAMkC,GAAG,GAAGlD,SAAS,CAACgB,IAAI,CAACC,EAAE,CAAC;MAC9B,IAAI,CAACiC,GAAG,EAAE,OAAO,IAAI;MACrB,MAAM/D,SAAS,GAAGiB,aAAa,CAACqE,GAAG,CAACzD,IAAI,CAACC,EAAE,CAAC;MAE5C,oBACEnD,OAAA,CAACgB,sBAAsB;QAErBM,IAAI,EAAE4B,IAAI,CAAC5B,IAAK;QAChBJ,CAAC,EAAEkE,GAAG,CAAClE,CAAE;QACTC,CAAC,EAAEiE,GAAG,CAACjE,CAAE;QACTC,UAAU,EAAE8B,IAAI,CAAC9B,UAAW;QAC5BC,SAAS,EAAEA,SAAS,IAAI6B,IAAI,CAAC9B,UAAW;QACxCwF,OAAO,EAAEA,CAAA,KAAMtB,wBAAwB,CAACpC,IAAI,CAAE;QAAAiD,QAAA,eAG9CnG,OAAA,CAACwB,OAAO;UAAA2E,QAAA,gBACNnG,OAAA;YAAAmG,QAAA,EAAMjD,IAAI,CAAC2D;UAAO;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACxBrD,IAAI,CAAC9B,UAAU,iBAAIpB,OAAA;YAAK0G,KAAK,EAAE;cAAEI,SAAS,EAAE;YAAM,CAAE;YAAAX,QAAA,GAAC,oBAAG,EAACjD,IAAI,CAAC6D,MAAM;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE;MAAC,GAZLrD,IAAI,CAACC,EAAE;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaU,CAAC;IAE7B,CAAC,CAAC,EAEDnE,qBAAqB,iBACpBpC,OAAA,CAACH,QAAQ;MACPgH,OAAO,EAAEzE,qBAAqB,CAACyE,OAAQ;MACvCG,QAAQ,EAAEzB,iBAAkB;MAC5B0B,OAAO,EAAEjB,gBAAiB;MAC1BH,OAAO,EAAEF,KAAK,CAACC,IAAI,CAACxD,qBAAqB,CAACyD,OAAO;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CACF,EAEA9D,mBAAmB,iBAClBzC,OAAA,CAACF,eAAe;MAACoH,cAAc,EAAEA,CAAA,KAAMxE,sBAAsB,CAAC,KAAK;IAAE;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEtB,CAAC;AAACtE,EAAA,CAzKWL,IAAyB;AAAAuF,GAAA,GAAzBvF,IAAyB;AAAA,IAAAvB,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAM,GAAA,EAAAQ,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAwF,GAAA;AAAAC,YAAA,CAAA/G,EAAA;AAAA+G,YAAA,CAAA7G,GAAA;AAAA6G,YAAA,CAAA3G,GAAA;AAAA2G,YAAA,CAAArG,GAAA;AAAAqG,YAAA,CAAA7F,GAAA;AAAA6F,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAAzF,GAAA;AAAAyF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}