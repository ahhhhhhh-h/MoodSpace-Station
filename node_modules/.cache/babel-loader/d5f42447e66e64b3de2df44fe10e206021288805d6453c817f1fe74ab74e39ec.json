{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Tokenizer = require(\"./Tokenizer\");\nvar DictionaryLoader = require(\"./loader/NodeDictionaryLoader\");\n\n/**\n * TokenizerBuilder create Tokenizer instance.\n * @param {Object} option JSON object which have key-value pairs settings\n * @param {string} option.dicPath Dictionary directory path (or URL using in browser)\n * @constructor\n */\nfunction TokenizerBuilder(option) {\n  if (option.dicPath == null) {\n    this.dic_path = \"dict/\";\n  } else {\n    this.dic_path = option.dicPath;\n  }\n}\n\n/**\n * Build Tokenizer instance by asynchronous manner\n * @param {TokenizerBuilder~onLoad} callback Callback function\n */\nTokenizerBuilder.prototype.build = function (callback) {\n  var loader = new DictionaryLoader(this.dic_path);\n  loader.load(function (err, dic) {\n    callback(err, new Tokenizer(dic));\n  });\n};\n\n/**\n * Callback used by build\n * @callback TokenizerBuilder~onLoad\n * @param {Object} err Error object\n * @param {Tokenizer} tokenizer Prepared Tokenizer\n */\n\nmodule.exports = TokenizerBuilder;","map":{"version":3,"names":["Tokenizer","require","DictionaryLoader","TokenizerBuilder","option","dicPath","dic_path","prototype","build","callback","loader","load","err","dic","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/kuromoji/src/TokenizerBuilder.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Tokenizer = require(\"./Tokenizer\");\nvar DictionaryLoader = require(\"./loader/NodeDictionaryLoader\");\n\n/**\n * TokenizerBuilder create Tokenizer instance.\n * @param {Object} option JSON object which have key-value pairs settings\n * @param {string} option.dicPath Dictionary directory path (or URL using in browser)\n * @constructor\n */\nfunction TokenizerBuilder(option) {\n    if (option.dicPath == null) {\n        this.dic_path = \"dict/\";\n    } else {\n        this.dic_path = option.dicPath;\n    }\n}\n\n/**\n * Build Tokenizer instance by asynchronous manner\n * @param {TokenizerBuilder~onLoad} callback Callback function\n */\nTokenizerBuilder.prototype.build = function (callback) {\n    var loader = new DictionaryLoader(this.dic_path);\n    loader.load(function (err, dic) {\n        callback(err, new Tokenizer(dic));\n    });\n};\n\n/**\n * Callback used by build\n * @callback TokenizerBuilder~onLoad\n * @param {Object} err Error object\n * @param {Tokenizer} tokenizer Prepared Tokenizer\n */\n\nmodule.exports = TokenizerBuilder;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,+BAA+B,CAAC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,gBAAgBA,CAACC,MAAM,EAAE;EAC9B,IAAIA,MAAM,CAACC,OAAO,IAAI,IAAI,EAAE;IACxB,IAAI,CAACC,QAAQ,GAAG,OAAO;EAC3B,CAAC,MAAM;IACH,IAAI,CAACA,QAAQ,GAAGF,MAAM,CAACC,OAAO;EAClC;AACJ;;AAEA;AACA;AACA;AACA;AACAF,gBAAgB,CAACI,SAAS,CAACC,KAAK,GAAG,UAAUC,QAAQ,EAAE;EACnD,IAAIC,MAAM,GAAG,IAAIR,gBAAgB,CAAC,IAAI,CAACI,QAAQ,CAAC;EAChDI,MAAM,CAACC,IAAI,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;IAC5BJ,QAAQ,CAACG,GAAG,EAAE,IAAIZ,SAAS,CAACa,GAAG,CAAC,CAAC;EACrC,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGZ,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}