{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents an excel table, where first row is the title, second row the\n * name of each column, and next rows the data.\n */\nclass XTable {\n  /**\n   * Constructor of the class.\n   * @param {Object[][]} matrix Matrix with the data from the excel table.\n   */\n  constructor(matrix) {\n    this.build(matrix);\n  }\n\n  /**\n   * Build the instance from a block of the excel representing the table.\n   * @param {Object[][]} block Block of data directly from the excel.\n   *\n   */\n  build(matrix) {\n    this.keys = [];\n    this.data = [];\n    if (!matrix || matrix.length < 2 || !matrix[0] || matrix[0].length < 1) {\n      this.name = '';\n      return;\n    }\n    this.name = matrix[0][0].w;\n    let row = matrix[1];\n    for (let i = 0, l = row.length; i < l; i += 1) {\n      if (row[i] && row[i].w) {\n        this.keys.push(row[i].w);\n      } else {\n        this.keys.push(`_column_${i}`);\n      }\n    }\n    for (let i = 2, li = matrix.length; i < li; i += 1) {\n      row = matrix[i];\n      const obj = {};\n      for (let j = 0, lj = row.length; j < lj; j += 1) {\n        obj[this.keys[j]] = row[j] && row[j].w ? row[j].w : undefined;\n      }\n      this.data.push(obj);\n    }\n  }\n\n  /**\n   * Indicates if a row match a given query.\n   * @param {Object} row Row to match\n   * @param {Object} query Query for the match\n   * @returns {boolean} True if the row matchs the query, false otherwise.\n   */\n  match(row, query) {\n    for (let i = 0, l = this.keys.length; i < l; i += 1) {\n      const key = this.keys[i];\n      const value = query[key];\n      if (value && value !== row[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Given a query, find the rows that match the given query\n   * @param {Objet} query Query for the match.\n   * @returns {Object[]} Rows that match the query, cloned.\n   */\n  find(query) {\n    const result = [];\n    for (let i = 0, l = this.data.length; i < l; i += 1) {\n      const row = this.data[i];\n      if (this.match(row, query)) {\n        result.push({\n          ...row\n        });\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Givena query, find the first row that match the query.\n   * @param {Object} query Query for the match.\n   * @returns {Object} First row that match the query, cloned.\n   */\n  findOne(query) {\n    for (let i = 0, l = this.data.length; i < l; i += 1) {\n      const row = this.data[i];\n      if (this.match(row, query)) {\n        return {\n          ...row\n        };\n      }\n    }\n    return undefined;\n  }\n}\nmodule.exports = XTable;","map":{"version":3,"names":["XTable","constructor","matrix","build","keys","data","length","name","w","row","i","l","push","li","obj","j","lj","undefined","match","query","key","value","find","result","findOne","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/xtables/src/xtable.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Represents an excel table, where first row is the title, second row the\n * name of each column, and next rows the data.\n */\nclass XTable {\n  /**\n   * Constructor of the class.\n   * @param {Object[][]} matrix Matrix with the data from the excel table.\n   */\n  constructor(matrix) {\n    this.build(matrix);\n  }\n\n  /**\n   * Build the instance from a block of the excel representing the table.\n   * @param {Object[][]} block Block of data directly from the excel.\n   *\n   */\n  build(matrix) {\n    this.keys = [];\n    this.data = [];\n    if (!matrix || matrix.length < 2 || !matrix[0] || matrix[0].length < 1) {\n      this.name = '';\n      return;\n    }\n    this.name = matrix[0][0].w;\n    let row = matrix[1];\n    for (let i = 0, l = row.length; i < l; i += 1) {\n      if (row[i] && row[i].w) {\n        this.keys.push(row[i].w);\n      } else {\n        this.keys.push(`_column_${i}`);\n      }\n    }\n    for (let i = 2, li = matrix.length; i < li; i += 1) {\n      row = matrix[i];\n      const obj = {};\n      for (let j = 0, lj = row.length; j < lj; j += 1) {\n        obj[this.keys[j]] = row[j] && row[j].w ? row[j].w : undefined;\n      }\n      this.data.push(obj);\n    }\n  }\n\n  /**\n   * Indicates if a row match a given query.\n   * @param {Object} row Row to match\n   * @param {Object} query Query for the match\n   * @returns {boolean} True if the row matchs the query, false otherwise.\n   */\n  match(row, query) {\n    for (let i = 0, l = this.keys.length; i < l; i += 1) {\n      const key = this.keys[i];\n      const value = query[key];\n      if (value && value !== row[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Given a query, find the rows that match the given query\n   * @param {Objet} query Query for the match.\n   * @returns {Object[]} Rows that match the query, cloned.\n   */\n  find(query) {\n    const result = [];\n    for (let i = 0, l = this.data.length; i < l; i += 1) {\n      const row = this.data[i];\n      if (this.match(row, query)) {\n        result.push({ ...row });\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Givena query, find the first row that match the query.\n   * @param {Object} query Query for the match.\n   * @returns {Object} First row that match the query, cloned.\n   */\n  findOne(query) {\n    for (let i = 0, l = this.data.length; i < l; i += 1) {\n      const row = this.data[i];\n      if (this.match(row, query)) {\n        return { ...row };\n      }\n    }\n    return undefined;\n  }\n}\n\nmodule.exports = XTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}