{"ast":null,"code":"const {\n  Language\n} = require('@nlpjs/language');\nconst langAr = require('@nlpjs/lang-ar');\nconst langBr = require('@nlpjs/lang-bn');\nconst langCa = require('@nlpjs/lang-ca');\nconst langCs = require('@nlpjs/lang-cs');\nconst langDa = require('@nlpjs/lang-da');\nconst langDe = require('@nlpjs/lang-de');\nconst langEl = require('@nlpjs/lang-el');\nconst langEn = require('@nlpjs/lang-en');\nconst langEs = require('@nlpjs/lang-es');\nconst langEu = require('@nlpjs/lang-eu');\nconst langFa = require('@nlpjs/lang-fa');\nconst langFi = require('@nlpjs/lang-fi');\nconst langFr = require('@nlpjs/lang-fr');\nconst langGa = require('@nlpjs/lang-ga');\nconst langGl = require('@nlpjs/lang-gl');\nconst langHi = require('@nlpjs/lang-hi');\nconst langHu = require('@nlpjs/lang-hu');\nconst langHy = require('@nlpjs/lang-hy');\nconst langId = require('@nlpjs/lang-id');\nconst langIt = require('@nlpjs/lang-it');\nconst langJa = require('@nlpjs/lang-ja');\nconst langKo = require('@nlpjs/lang-ko');\nconst langLt = require('@nlpjs/lang-lt');\nconst langMs = require('@nlpjs/lang-ms');\nconst langNe = require('@nlpjs/lang-ne');\nconst langNl = require('@nlpjs/lang-nl');\nconst langNo = require('@nlpjs/lang-no');\nconst langPl = require('@nlpjs/lang-pl');\nconst langPt = require('@nlpjs/lang-pt');\nconst langRo = require('@nlpjs/lang-ro');\nconst langRu = require('@nlpjs/lang-ru');\nconst langSl = require('@nlpjs/lang-sl');\nconst langSr = require('@nlpjs/lang-sr');\nconst langSv = require('@nlpjs/lang-sv');\nconst langTa = require('@nlpjs/lang-ta');\nconst langTh = require('@nlpjs/lang-th');\nconst langTl = require('@nlpjs/lang-tl');\nconst langTr = require('@nlpjs/lang-tr');\nconst langUk = require('@nlpjs/lang-uk');\nconst langZh = require('@nlpjs/lang-zh');\nconst langs = {\n  ar: langAr,\n  br: langBr,\n  ca: langCa,\n  cs: langCs,\n  da: langDa,\n  de: langDe,\n  el: langEl,\n  en: langEn,\n  es: langEs,\n  eu: langEu,\n  fa: langFa,\n  fi: langFi,\n  fr: langFr,\n  ga: langGa,\n  gl: langGl,\n  hi: langHi,\n  hu: langHu,\n  hy: langHy,\n  id: langId,\n  it: langIt,\n  ja: langJa,\n  ko: langKo,\n  lt: langLt,\n  ms: langMs,\n  ne: langNe,\n  nl: langNl,\n  no: langNo,\n  pl: langPl,\n  pt: langPt,\n  ro: langRo,\n  ru: langRu,\n  sl: langSl,\n  sr: langSr,\n  sv: langSv,\n  ta: langTa,\n  th: langTh,\n  tl: langTl,\n  tr: langTr,\n  uk: langUk,\n  zh: langZh\n};\nconst language = new Language();\nconst langDict = {};\nconst keys = Object.keys(language.languagesAlpha2);\nfor (let i = 0; i < keys.length; i += 1) {\n  const key = keys[i];\n  const langData = language.languagesAlpha2[key];\n  langDict[key] = key;\n  langDict[langData.alpha3] = key;\n  langDict[langData.name.toLowerCase()] = key;\n}\nfunction getLangClass(inputLanguage, className) {\n  let locale = langDict[inputLanguage.toLowerCase()];\n  if (!locale) {\n    locale = langDict[inputLanguage.toLowerCase().slice(0, 2)] || 'en';\n  }\n  const lang = langs[locale];\n  if (!lang) {\n    throw new Error(`Language classes not found for language \"${inputLanguage}\"`);\n  }\n  const localeCapitalized = `${locale.charAt(0).toUpperCase()}${locale.slice(1)}`;\n  return lang[`${className}${localeCapitalized}`];\n}\nfunction getNormalizer(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Normalizer');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\nfunction getTokenizer(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Tokenizer');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\nfunction getStemmer(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Stemmer');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\nfunction getStopwords(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Stopwords');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\nfunction getSentiment(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Sentiment');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\nfunction normalize(text, locale = 'en') {\n  const normalizer = getNormalizer(locale);\n  return normalizer.normalize(text);\n}\nfunction tokenize(text, locale = 'en', shouldNormalize = false) {\n  const tokenizer = getTokenizer(locale);\n  return tokenizer.tokenize(text, shouldNormalize);\n}\nfunction stem(text, locale = 'en') {\n  const stemmer = getStemmer(locale);\n  if (Array.isArray(text)) {\n    return stemmer.stem(text);\n  }\n  const normalizer = getNormalizer(locale);\n  const tokenizer = getTokenizer(locale);\n  return stemmer.stem(tokenizer.tokenize(normalizer.normalize(text)));\n}\nfunction removeStopwords(tokens, locale = 'en') {\n  const stopwords = getStopwords(locale);\n  return stopwords.removeStopwords(tokens);\n}\nfunction dict(sentences, locale = 'en', useStemmer = false) {\n  const freqs = {};\n  for (let i = 0; i < sentences.length; i += 1) {\n    const current = useStemmer ? stem(sentences[i], locale) : tokenize(sentences[i], locale).map(x => x.toLowerCase());\n    for (let j = 0; j < current.length; j += 1) {\n      freqs[current[j]] = (freqs[current[j]] || 0) + 1;\n    }\n  }\n  const positions = {};\n  const words = Object.keys(freqs);\n  for (let i = 0; i < words.length; i += 1) {\n    positions[words[i]] = i;\n  }\n  return {\n    locale,\n    useStemmer,\n    freqs,\n    positions,\n    keys: words,\n    length: words.length\n  };\n}\nfunction bow(sentence, voc) {\n  const current = voc.useStemmer ? stem(sentence, voc.locale) : tokenize(sentence, voc.locale).map(x => x.toLowerCase());\n  const result = new Array(voc.length).fill(0);\n  for (let i = 0; i < current.length; i += 1) {\n    const index = voc.positions[current[i]];\n    if (index !== undefined) {\n      result[index] = 1;\n    }\n  }\n  return result;\n}\nmodule.exports = {\n  langs,\n  language,\n  langDict,\n  getNormalizer,\n  getTokenizer,\n  getStemmer,\n  getStopwords,\n  getSentiment,\n  normalize,\n  tokenize,\n  stem,\n  removeStopwords,\n  dict,\n  bow\n};","map":{"version":3,"names":["Language","require","langAr","langBr","langCa","langCs","langDa","langDe","langEl","langEn","langEs","langEu","langFa","langFi","langFr","langGa","langGl","langHi","langHu","langHy","langId","langIt","langJa","langKo","langLt","langMs","langNe","langNl","langNo","langPl","langPt","langRo","langRu","langSl","langSr","langSv","langTa","langTh","langTl","langTr","langUk","langZh","langs","ar","br","ca","cs","da","de","el","en","es","eu","fa","fi","fr","ga","gl","hi","hu","hy","id","it","ja","ko","lt","ms","ne","nl","no","pl","pt","ro","ru","sl","sr","sv","ta","th","tl","tr","uk","zh","language","langDict","keys","Object","languagesAlpha2","i","length","key","langData","alpha3","name","toLowerCase","getLangClass","inputLanguage","className","locale","slice","lang","Error","localeCapitalized","charAt","toUpperCase","getNormalizer","Clazz","undefined","getTokenizer","getStemmer","getStopwords","getSentiment","normalize","text","normalizer","tokenize","shouldNormalize","tokenizer","stem","stemmer","Array","isArray","removeStopwords","tokens","stopwords","dict","sentences","useStemmer","freqs","current","map","x","j","positions","words","bow","sentence","voc","result","fill","index","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-all/src/lang-functions.js"],"sourcesContent":["const { Language } = require('@nlpjs/language');\nconst langAr = require('@nlpjs/lang-ar');\nconst langBr = require('@nlpjs/lang-bn');\nconst langCa = require('@nlpjs/lang-ca');\nconst langCs = require('@nlpjs/lang-cs');\nconst langDa = require('@nlpjs/lang-da');\nconst langDe = require('@nlpjs/lang-de');\nconst langEl = require('@nlpjs/lang-el');\nconst langEn = require('@nlpjs/lang-en');\nconst langEs = require('@nlpjs/lang-es');\nconst langEu = require('@nlpjs/lang-eu');\nconst langFa = require('@nlpjs/lang-fa');\nconst langFi = require('@nlpjs/lang-fi');\nconst langFr = require('@nlpjs/lang-fr');\nconst langGa = require('@nlpjs/lang-ga');\nconst langGl = require('@nlpjs/lang-gl');\nconst langHi = require('@nlpjs/lang-hi');\nconst langHu = require('@nlpjs/lang-hu');\nconst langHy = require('@nlpjs/lang-hy');\nconst langId = require('@nlpjs/lang-id');\nconst langIt = require('@nlpjs/lang-it');\nconst langJa = require('@nlpjs/lang-ja');\nconst langKo = require('@nlpjs/lang-ko');\nconst langLt = require('@nlpjs/lang-lt');\nconst langMs = require('@nlpjs/lang-ms');\nconst langNe = require('@nlpjs/lang-ne');\nconst langNl = require('@nlpjs/lang-nl');\nconst langNo = require('@nlpjs/lang-no');\nconst langPl = require('@nlpjs/lang-pl');\nconst langPt = require('@nlpjs/lang-pt');\nconst langRo = require('@nlpjs/lang-ro');\nconst langRu = require('@nlpjs/lang-ru');\nconst langSl = require('@nlpjs/lang-sl');\nconst langSr = require('@nlpjs/lang-sr');\nconst langSv = require('@nlpjs/lang-sv');\nconst langTa = require('@nlpjs/lang-ta');\nconst langTh = require('@nlpjs/lang-th');\nconst langTl = require('@nlpjs/lang-tl');\nconst langTr = require('@nlpjs/lang-tr');\nconst langUk = require('@nlpjs/lang-uk');\nconst langZh = require('@nlpjs/lang-zh');\n\nconst langs = {\n  ar: langAr,\n  br: langBr,\n  ca: langCa,\n  cs: langCs,\n  da: langDa,\n  de: langDe,\n  el: langEl,\n  en: langEn,\n  es: langEs,\n  eu: langEu,\n  fa: langFa,\n  fi: langFi,\n  fr: langFr,\n  ga: langGa,\n  gl: langGl,\n  hi: langHi,\n  hu: langHu,\n  hy: langHy,\n  id: langId,\n  it: langIt,\n  ja: langJa,\n  ko: langKo,\n  lt: langLt,\n  ms: langMs,\n  ne: langNe,\n  nl: langNl,\n  no: langNo,\n  pl: langPl,\n  pt: langPt,\n  ro: langRo,\n  ru: langRu,\n  sl: langSl,\n  sr: langSr,\n  sv: langSv,\n  ta: langTa,\n  th: langTh,\n  tl: langTl,\n  tr: langTr,\n  uk: langUk,\n  zh: langZh,\n};\n\nconst language = new Language();\nconst langDict = {};\nconst keys = Object.keys(language.languagesAlpha2);\n\nfor (let i = 0; i < keys.length; i += 1) {\n  const key = keys[i];\n  const langData = language.languagesAlpha2[key];\n  langDict[key] = key;\n  langDict[langData.alpha3] = key;\n  langDict[langData.name.toLowerCase()] = key;\n}\n\nfunction getLangClass(inputLanguage, className) {\n  let locale = langDict[inputLanguage.toLowerCase()];\n  if (!locale) {\n    locale = langDict[inputLanguage.toLowerCase().slice(0, 2)] || 'en';\n  }\n  const lang = langs[locale];\n  if (!lang) {\n    throw new Error(\n      `Language classes not found for language \"${inputLanguage}\"`\n    );\n  }\n  const localeCapitalized = `${locale.charAt(0).toUpperCase()}${locale.slice(\n    1\n  )}`;\n  return lang[`${className}${localeCapitalized}`];\n}\n\nfunction getNormalizer(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Normalizer');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\n\nfunction getTokenizer(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Tokenizer');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\n\nfunction getStemmer(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Stemmer');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\n\nfunction getStopwords(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Stopwords');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\n\nfunction getSentiment(inputLanguage = 'en') {\n  const Clazz = getLangClass(inputLanguage, 'Sentiment');\n  if (Clazz) {\n    return new Clazz();\n  }\n  return undefined;\n}\n\nfunction normalize(text, locale = 'en') {\n  const normalizer = getNormalizer(locale);\n  return normalizer.normalize(text);\n}\n\nfunction tokenize(text, locale = 'en', shouldNormalize = false) {\n  const tokenizer = getTokenizer(locale);\n  return tokenizer.tokenize(text, shouldNormalize);\n}\n\nfunction stem(text, locale = 'en') {\n  const stemmer = getStemmer(locale);\n  if (Array.isArray(text)) {\n    return stemmer.stem(text);\n  }\n  const normalizer = getNormalizer(locale);\n  const tokenizer = getTokenizer(locale);\n  return stemmer.stem(tokenizer.tokenize(normalizer.normalize(text)));\n}\n\nfunction removeStopwords(tokens, locale = 'en') {\n  const stopwords = getStopwords(locale);\n  return stopwords.removeStopwords(tokens);\n}\n\nfunction dict(sentences, locale = 'en', useStemmer = false) {\n  const freqs = {};\n  for (let i = 0; i < sentences.length; i += 1) {\n    const current = useStemmer\n      ? stem(sentences[i], locale)\n      : tokenize(sentences[i], locale).map((x) => x.toLowerCase());\n    for (let j = 0; j < current.length; j += 1) {\n      freqs[current[j]] = (freqs[current[j]] || 0) + 1;\n    }\n  }\n  const positions = {};\n  const words = Object.keys(freqs);\n  for (let i = 0; i < words.length; i += 1) {\n    positions[words[i]] = i;\n  }\n  return {\n    locale,\n    useStemmer,\n    freqs,\n    positions,\n    keys: words,\n    length: words.length,\n  };\n}\n\nfunction bow(sentence, voc) {\n  const current = voc.useStemmer\n    ? stem(sentence, voc.locale)\n    : tokenize(sentence, voc.locale).map((x) => x.toLowerCase());\n  const result = new Array(voc.length).fill(0);\n  for (let i = 0; i < current.length; i += 1) {\n    const index = voc.positions[current[i]];\n    if (index !== undefined) {\n      result[index] = 1;\n    }\n  }\n  return result;\n}\n\nmodule.exports = {\n  langs,\n  language,\n  langDict,\n  getNormalizer,\n  getTokenizer,\n  getStemmer,\n  getStopwords,\n  getSentiment,\n  normalize,\n  tokenize,\n  stem,\n  removeStopwords,\n  dict,\n  bow,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}