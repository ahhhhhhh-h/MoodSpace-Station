{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  stringToArray\n} = require('@nlpjs/core');\nconst nonSpacingRegex = new RegExp(String.fromCharCode(65039), 'g');\nconst emojiByName = require('./emoji.json');\nconst strip = x => x.replace(nonSpacingRegex, '');\nconst keys = Object.keys(emojiByName);\nconst emojiByCode = {};\nfor (let i = 0; i < keys.length; i += 1) {\n  const current = keys[i];\n  emojiByCode[strip(emojiByName[current])] = current;\n}\nconst which = code => {\n  const word = emojiByCode[strip(code)];\n  return word ? `:${word}:` : code;\n};\nconst removeEmojis = str => str ? stringToArray(str).map(word => which(word)).join('') : str;\nmodule.exports = {\n  removeEmojis\n};","map":{"version":3,"names":["stringToArray","require","nonSpacingRegex","RegExp","String","fromCharCode","emojiByName","strip","x","replace","keys","Object","emojiByCode","i","length","current","which","code","word","removeEmojis","str","map","join","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/emoji/src/emoji.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { stringToArray } = require('@nlpjs/core');\n\nconst nonSpacingRegex = new RegExp(String.fromCharCode(65039), 'g');\nconst emojiByName = require('./emoji.json');\n\nconst strip = (x) => x.replace(nonSpacingRegex, '');\n\nconst keys = Object.keys(emojiByName);\nconst emojiByCode = {};\nfor (let i = 0; i < keys.length; i += 1) {\n  const current = keys[i];\n  emojiByCode[strip(emojiByName[current])] = current;\n}\n\nconst which = (code) => {\n  const word = emojiByCode[strip(code)];\n  return word ? `:${word}:` : code;\n};\n\nconst removeEmojis = (str) =>\n  str\n    ? stringToArray(str)\n        .map((word) => which(word))\n        .join('')\n    : str;\n\nmodule.exports = { removeEmojis };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEhD,MAAMC,eAAe,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,YAAY,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;AACnE,MAAMC,WAAW,GAAGL,OAAO,CAAC,cAAc,CAAC;AAE3C,MAAMM,KAAK,GAAIC,CAAC,IAAKA,CAAC,CAACC,OAAO,CAACP,eAAe,EAAE,EAAE,CAAC;AAEnD,MAAMQ,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACJ,WAAW,CAAC;AACrC,MAAMM,WAAW,GAAG,CAAC,CAAC;AACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;EACvC,MAAME,OAAO,GAAGL,IAAI,CAACG,CAAC,CAAC;EACvBD,WAAW,CAACL,KAAK,CAACD,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO;AACpD;AAEA,MAAMC,KAAK,GAAIC,IAAI,IAAK;EACtB,MAAMC,IAAI,GAAGN,WAAW,CAACL,KAAK,CAACU,IAAI,CAAC,CAAC;EACrC,OAAOC,IAAI,GAAG,IAAIA,IAAI,GAAG,GAAGD,IAAI;AAClC,CAAC;AAED,MAAME,YAAY,GAAIC,GAAG,IACvBA,GAAG,GACCpB,aAAa,CAACoB,GAAG,CAAC,CACfC,GAAG,CAAEH,IAAI,IAAKF,KAAK,CAACE,IAAI,CAAC,CAAC,CAC1BI,IAAI,CAAC,EAAE,CAAC,GACXF,GAAG;AAETG,MAAM,CAACC,OAAO,GAAG;EAAEL;AAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}