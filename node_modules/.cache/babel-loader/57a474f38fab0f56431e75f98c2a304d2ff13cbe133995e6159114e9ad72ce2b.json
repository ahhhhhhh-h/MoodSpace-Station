{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst {\n  defaultContainer\n} = require('./container');\nclass Stopwords {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'removeStopwords';\n    this.dictionary = {};\n  }\n  build(list) {\n    for (let i = 0; i < list.length; i += 1) {\n      this.dictionary[list[i]] = true;\n    }\n  }\n  isNotStopword(token) {\n    return !this.dictionary[token];\n  }\n  isStopword(token) {\n    return !!this.dictionary[token];\n  }\n  removeStopwords(tokens) {\n    return tokens.filter(x => this.isNotStopword(x));\n  }\n  run(srcInput) {\n    if (srcInput.settings && srcInput.settings.keepStopwords === false) {\n      const input = srcInput;\n      const locale = input.locale || 'en';\n      const remover = this.container.get(`stopwords-${locale}`) || this;\n      input.tokens = remover.removeStopwords(input.tokens, input).filter(x => x);\n      return input;\n    }\n    return srcInput;\n  }\n}\nmodule.exports = Stopwords;","map":{"version":3,"names":["defaultContainer","require","Stopwords","constructor","container","name","dictionary","build","list","i","length","isNotStopword","token","isStopword","removeStopwords","tokens","filter","x","run","srcInput","settings","keepStopwords","input","locale","remover","get","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/core/src/stopwords.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { defaultContainer } = require('./container');\n\nclass Stopwords {\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'removeStopwords';\n    this.dictionary = {};\n  }\n\n  build(list) {\n    for (let i = 0; i < list.length; i += 1) {\n      this.dictionary[list[i]] = true;\n    }\n  }\n\n  isNotStopword(token) {\n    return !this.dictionary[token];\n  }\n\n  isStopword(token) {\n    return !!this.dictionary[token];\n  }\n\n  removeStopwords(tokens) {\n    return tokens.filter((x) => this.isNotStopword(x));\n  }\n\n  run(srcInput) {\n    if (srcInput.settings && srcInput.settings.keepStopwords === false) {\n      const input = srcInput;\n      const locale = input.locale || 'en';\n      const remover = this.container.get(`stopwords-${locale}`) || this;\n      input.tokens = remover\n        .removeStopwords(input.tokens, input)\n        .filter((x) => x);\n      return input;\n    }\n    return srcInput;\n  }\n}\n\nmodule.exports = Stopwords;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;EAAEA;AAAiB,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEnD,MAAMC,SAAS,CAAC;EACdC,WAAWA,CAACC,SAAS,GAAGJ,gBAAgB,EAAE;IACxC,IAAI,CAACI,SAAS,GAAGA,SAAS,CAACA,SAAS,IAAIA,SAAS;IACjD,IAAI,CAACC,IAAI,GAAG,iBAAiB;IAC7B,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;EACtB;EAEAC,KAAKA,CAACC,IAAI,EAAE;IACV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACvC,IAAI,CAACH,UAAU,CAACE,IAAI,CAACC,CAAC,CAAC,CAAC,GAAG,IAAI;IACjC;EACF;EAEAE,aAAaA,CAACC,KAAK,EAAE;IACnB,OAAO,CAAC,IAAI,CAACN,UAAU,CAACM,KAAK,CAAC;EAChC;EAEAC,UAAUA,CAACD,KAAK,EAAE;IAChB,OAAO,CAAC,CAAC,IAAI,CAACN,UAAU,CAACM,KAAK,CAAC;EACjC;EAEAE,eAAeA,CAACC,MAAM,EAAE;IACtB,OAAOA,MAAM,CAACC,MAAM,CAAEC,CAAC,IAAK,IAAI,CAACN,aAAa,CAACM,CAAC,CAAC,CAAC;EACpD;EAEAC,GAAGA,CAACC,QAAQ,EAAE;IACZ,IAAIA,QAAQ,CAACC,QAAQ,IAAID,QAAQ,CAACC,QAAQ,CAACC,aAAa,KAAK,KAAK,EAAE;MAClE,MAAMC,KAAK,GAAGH,QAAQ;MACtB,MAAMI,MAAM,GAAGD,KAAK,CAACC,MAAM,IAAI,IAAI;MACnC,MAAMC,OAAO,GAAG,IAAI,CAACpB,SAAS,CAACqB,GAAG,CAAC,aAAaF,MAAM,EAAE,CAAC,IAAI,IAAI;MACjED,KAAK,CAACP,MAAM,GAAGS,OAAO,CACnBV,eAAe,CAACQ,KAAK,CAACP,MAAM,EAAEO,KAAK,CAAC,CACpCN,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC;MACnB,OAAOK,KAAK;IACd;IACA,OAAOH,QAAQ;EACjB;AACF;AAEAO,MAAM,CAACC,OAAO,GAAGzB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}