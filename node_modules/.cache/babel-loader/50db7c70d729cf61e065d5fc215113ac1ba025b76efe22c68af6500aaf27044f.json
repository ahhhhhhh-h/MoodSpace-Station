{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst ArrToObj = require('./arr-to-obj');\nconst {\n  Container\n} = require('./container');\nconst Normalizer = require('./normalizer');\nconst ObjToArr = require('./obj-to-arr');\nconst {\n  loadEnvFromJson\n} = require('./helper');\nconst Stemmer = require('./stemmer');\nconst Stopwords = require('./stopwords');\nconst Tokenizer = require('./tokenizer');\nconst Timer = require('./timer');\nconst logger = require('./logger');\nconst MemoryStorage = require('./memory-storage');\nconst fs = require('./mock-fs');\nfunction loadPipelinesStr(instance, pipelines) {\n  instance.loadPipelinesFromString(pipelines);\n}\nfunction traverse(obj, preffix) {\n  if (typeof obj === 'string') {\n    if (obj.startsWith('$')) {\n      return process.env[`${preffix}${obj.slice(1)}`] || process.env[obj.slice(1)];\n    }\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(x => traverse(x, preffix));\n  }\n  if (typeof obj === 'object') {\n    const keys = Object.keys(obj);\n    const result = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      result[keys[i]] = traverse(obj[keys[i]], preffix);\n    }\n    return result;\n  }\n  return obj;\n}\nfunction containerBootstrap(inputSettings, mustLoadEnv, container, preffix, pipelines, parent) {\n  const srcSettings = inputSettings || {};\n  const instance = container || new Container(preffix);\n  instance.parent = parent;\n  if (!preffix) {\n    instance.register('fs', fs);\n    instance.use(ArrToObj);\n    instance.use(Normalizer);\n    instance.use(ObjToArr);\n    instance.use(Stemmer);\n    instance.use(Stopwords);\n    instance.use(Tokenizer);\n    instance.use(Timer);\n    instance.use(logger);\n    instance.use(MemoryStorage);\n  }\n  const settings = srcSettings;\n  if (srcSettings.env) {\n    loadEnvFromJson(preffix, srcSettings.env);\n  }\n  let configuration;\n  configuration = settings;\n  configuration = traverse(configuration, preffix ? `${preffix}_` : '');\n  if (configuration.settings) {\n    const keys = Object.keys(configuration.settings);\n    for (let i = 0; i < keys.length; i += 1) {\n      instance.registerConfiguration(keys[i], configuration.settings[keys[i]], true);\n    }\n  }\n  if (configuration.use) {\n    for (let i = 0; i < configuration.use.length; i += 1) {\n      const item = configuration.use[i];\n      if (Array.isArray(item)) {\n        instance.register(item[0], item[1]);\n      } else {\n        instance.use(item);\n      }\n    }\n  }\n  if (configuration.terraform) {\n    for (let i = 0; i < configuration.terraform.length; i += 1) {\n      const current = configuration.terraform[i];\n      const terra = instance.get(current.className);\n      instance.register(current.name, terra, true);\n    }\n  }\n  if (configuration.childs) {\n    instance.childs = configuration.childs;\n  }\n  if (pipelines) {\n    for (let i = 0; i < pipelines.length; i += 1) {\n      const pipeline = pipelines[i];\n      instance.registerPipeline(pipeline.tag, pipeline.pipeline, pipeline.overwrite);\n    }\n  }\n  if (configuration.pipelines) {\n    loadPipelinesStr(instance, configuration.pipelines);\n  }\n  return instance;\n}\nmodule.exports = containerBootstrap;","map":{"version":3,"names":["ArrToObj","require","Container","Normalizer","ObjToArr","loadEnvFromJson","Stemmer","Stopwords","Tokenizer","Timer","logger","MemoryStorage","fs","loadPipelinesStr","instance","pipelines","loadPipelinesFromString","traverse","obj","preffix","startsWith","process","env","slice","Array","isArray","map","x","keys","Object","result","i","length","containerBootstrap","inputSettings","mustLoadEnv","container","parent","srcSettings","register","use","settings","configuration","registerConfiguration","item","terraform","current","terra","get","className","name","childs","pipeline","registerPipeline","tag","overwrite","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/core/src/container-bootstrap.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst ArrToObj = require('./arr-to-obj');\nconst { Container } = require('./container');\nconst Normalizer = require('./normalizer');\nconst ObjToArr = require('./obj-to-arr');\nconst { loadEnvFromJson } = require('./helper');\nconst Stemmer = require('./stemmer');\nconst Stopwords = require('./stopwords');\nconst Tokenizer = require('./tokenizer');\nconst Timer = require('./timer');\nconst logger = require('./logger');\nconst MemoryStorage = require('./memory-storage');\nconst fs = require('./mock-fs');\n\nfunction loadPipelinesStr(instance, pipelines) {\n  instance.loadPipelinesFromString(pipelines);\n}\n\nfunction traverse(obj, preffix) {\n  if (typeof obj === 'string') {\n    if (obj.startsWith('$')) {\n      return (\n        process.env[`${preffix}${obj.slice(1)}`] || process.env[obj.slice(1)]\n      );\n    }\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map((x) => traverse(x, preffix));\n  }\n  if (typeof obj === 'object') {\n    const keys = Object.keys(obj);\n    const result = {};\n    for (let i = 0; i < keys.length; i += 1) {\n      result[keys[i]] = traverse(obj[keys[i]], preffix);\n    }\n    return result;\n  }\n  return obj;\n}\n\nfunction containerBootstrap(\n  inputSettings,\n  mustLoadEnv,\n  container,\n  preffix,\n  pipelines,\n  parent\n) {\n  const srcSettings = inputSettings || {};\n  const instance = container || new Container(preffix);\n  instance.parent = parent;\n  if (!preffix) {\n    instance.register('fs', fs);\n    instance.use(ArrToObj);\n    instance.use(Normalizer);\n    instance.use(ObjToArr);\n    instance.use(Stemmer);\n    instance.use(Stopwords);\n    instance.use(Tokenizer);\n    instance.use(Timer);\n    instance.use(logger);\n    instance.use(MemoryStorage);\n  }\n  const settings = srcSettings;\n  if (srcSettings.env) {\n    loadEnvFromJson(preffix, srcSettings.env);\n  }\n  let configuration;\n  configuration = settings;\n  configuration = traverse(configuration, preffix ? `${preffix}_` : '');\n  if (configuration.settings) {\n    const keys = Object.keys(configuration.settings);\n    for (let i = 0; i < keys.length; i += 1) {\n      instance.registerConfiguration(\n        keys[i],\n        configuration.settings[keys[i]],\n        true\n      );\n    }\n  }\n  if (configuration.use) {\n    for (let i = 0; i < configuration.use.length; i += 1) {\n      const item = configuration.use[i];\n      if (Array.isArray(item)) {\n        instance.register(item[0], item[1]);\n      } else {\n        instance.use(item);\n      }\n    }\n  }\n  if (configuration.terraform) {\n    for (let i = 0; i < configuration.terraform.length; i += 1) {\n      const current = configuration.terraform[i];\n      const terra = instance.get(current.className);\n      instance.register(current.name, terra, true);\n    }\n  }\n  if (configuration.childs) {\n    instance.childs = configuration.childs;\n  }\n  if (pipelines) {\n    for (let i = 0; i < pipelines.length; i += 1) {\n      const pipeline = pipelines[i];\n      instance.registerPipeline(\n        pipeline.tag,\n        pipeline.pipeline,\n        pipeline.overwrite\n      );\n    }\n  }\n  if (configuration.pipelines) {\n    loadPipelinesStr(instance, configuration.pipelines);\n  }\n  return instance;\n}\n\nmodule.exports = containerBootstrap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}