{"ast":null,"code":"/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Convert String (UTF-16) to UTF-8 ArrayBuffer\n *\n * @param {String} str UTF-16 string to convert\n * @return {Uint8Array} Byte sequence encoded by UTF-8\n */\nvar stringToUtf8Bytes = function (str) {\n  // Max size of 1 character is 4 bytes\n  var bytes = new Uint8Array(str.length * 4);\n  var i = 0,\n    j = 0;\n  while (i < str.length) {\n    var unicode_code;\n    var utf16_code = str.charCodeAt(i++);\n    if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n      // surrogate pair\n      var upper = utf16_code; // high surrogate\n      var lower = str.charCodeAt(i++); // low surrogate\n\n      if (lower >= 0xDC00 && lower <= 0xDFFF) {\n        unicode_code = (upper - 0xD800) * (1 << 10) + (1 << 16) + (lower - 0xDC00);\n      } else {\n        // malformed surrogate pair\n        return null;\n      }\n    } else {\n      // not surrogate code\n      unicode_code = utf16_code;\n    }\n    if (unicode_code < 0x80) {\n      // 1-byte\n      bytes[j++] = unicode_code;\n    } else if (unicode_code < 1 << 11) {\n      // 2-byte\n      bytes[j++] = unicode_code >>> 6 | 0xC0;\n      bytes[j++] = unicode_code & 0x3F | 0x80;\n    } else if (unicode_code < 1 << 16) {\n      // 3-byte\n      bytes[j++] = unicode_code >>> 12 | 0xE0;\n      bytes[j++] = unicode_code >> 6 & 0x3f | 0x80;\n      bytes[j++] = unicode_code & 0x3F | 0x80;\n    } else if (unicode_code < 1 << 21) {\n      // 4-byte\n      bytes[j++] = unicode_code >>> 18 | 0xF0;\n      bytes[j++] = unicode_code >> 12 & 0x3F | 0x80;\n      bytes[j++] = unicode_code >> 6 & 0x3F | 0x80;\n      bytes[j++] = unicode_code & 0x3F | 0x80;\n    } else {\n      // malformed UCS4 code\n    }\n  }\n  return bytes.subarray(0, j);\n};\n\n/**\n * Convert UTF-8 ArrayBuffer to String (UTF-16)\n *\n * @param {Array} bytes UTF-8 byte sequence to convert\n * @return {String} String encoded by UTF-16\n */\nvar utf8BytesToString = function (bytes) {\n  var str = \"\";\n  var code, b1, b2, b3, b4, upper, lower;\n  var i = 0;\n  while (i < bytes.length) {\n    b1 = bytes[i++];\n    if (b1 < 0x80) {\n      // 1 byte\n      code = b1;\n    } else if (b1 >> 5 === 0x06) {\n      // 2 bytes\n      b2 = bytes[i++];\n      code = (b1 & 0x1f) << 6 | b2 & 0x3f;\n    } else if (b1 >> 4 === 0x0e) {\n      // 3 bytes\n      b2 = bytes[i++];\n      b3 = bytes[i++];\n      code = (b1 & 0x0f) << 12 | (b2 & 0x3f) << 6 | b3 & 0x3f;\n    } else {\n      // 4 bytes\n      b2 = bytes[i++];\n      b3 = bytes[i++];\n      b4 = bytes[i++];\n      code = (b1 & 0x07) << 18 | (b2 & 0x3f) << 12 | (b3 & 0x3f) << 6 | b4 & 0x3f;\n    }\n    if (code < 0x10000) {\n      str += String.fromCharCode(code);\n    } else {\n      // surrogate pair\n      code -= 0x10000;\n      upper = 0xD800 | code >> 10;\n      lower = 0xDC00 | code & 0x3FF;\n      str += String.fromCharCode(upper, lower);\n    }\n  }\n  return str;\n};\n\n/**\n * Utilities to manipulate byte sequence\n * @param {(number|Uint8Array)} arg Initial size of this buffer (number), or buffer to set (Uint8Array)\n * @constructor\n */\nfunction ByteBuffer(arg) {\n  var initial_size;\n  if (arg == null) {\n    initial_size = 1024 * 1024;\n  } else if (typeof arg === \"number\") {\n    initial_size = arg;\n  } else if (arg instanceof Uint8Array) {\n    this.buffer = arg;\n    this.position = 0; // Overwrite\n    return;\n  } else {\n    // typeof arg -> String\n    throw typeof arg + \" is invalid parameter type for ByteBuffer constructor\";\n  }\n  // arg is null or number\n  this.buffer = new Uint8Array(initial_size);\n  this.position = 0;\n}\nByteBuffer.prototype.size = function () {\n  return this.buffer.length;\n};\nByteBuffer.prototype.reallocate = function () {\n  var new_array = new Uint8Array(this.buffer.length * 2);\n  new_array.set(this.buffer);\n  this.buffer = new_array;\n};\nByteBuffer.prototype.shrink = function () {\n  this.buffer = this.buffer.subarray(0, this.position);\n  return this.buffer;\n};\nByteBuffer.prototype.put = function (b) {\n  if (this.buffer.length < this.position + 1) {\n    this.reallocate();\n  }\n  this.buffer[this.position++] = b;\n};\nByteBuffer.prototype.get = function (index) {\n  if (index == null) {\n    index = this.position;\n    this.position += 1;\n  }\n  if (this.buffer.length < index + 1) {\n    return 0;\n  }\n  return this.buffer[index];\n};\n\n// Write short to buffer by little endian\nByteBuffer.prototype.putShort = function (num) {\n  if (0xFFFF < num) {\n    throw num + \" is over short value\";\n  }\n  var lower = 0x00FF & num;\n  var upper = (0xFF00 & num) >> 8;\n  this.put(lower);\n  this.put(upper);\n};\n\n// Read short from buffer by little endian\nByteBuffer.prototype.getShort = function (index) {\n  if (index == null) {\n    index = this.position;\n    this.position += 2;\n  }\n  if (this.buffer.length < index + 2) {\n    return 0;\n  }\n  var lower = this.buffer[index];\n  var upper = this.buffer[index + 1];\n  var value = (upper << 8) + lower;\n  if (value & 0x8000) {\n    value = -(value - 1 ^ 0xFFFF);\n  }\n  return value;\n};\n\n// Write integer to buffer by little endian\nByteBuffer.prototype.putInt = function (num) {\n  if (0xFFFFFFFF < num) {\n    throw num + \" is over integer value\";\n  }\n  var b0 = 0x000000FF & num;\n  var b1 = (0x0000FF00 & num) >> 8;\n  var b2 = (0x00FF0000 & num) >> 16;\n  var b3 = (0xFF000000 & num) >> 24;\n  this.put(b0);\n  this.put(b1);\n  this.put(b2);\n  this.put(b3);\n};\n\n// Read integer from buffer by little endian\nByteBuffer.prototype.getInt = function (index) {\n  if (index == null) {\n    index = this.position;\n    this.position += 4;\n  }\n  if (this.buffer.length < index + 4) {\n    return 0;\n  }\n  var b0 = this.buffer[index];\n  var b1 = this.buffer[index + 1];\n  var b2 = this.buffer[index + 2];\n  var b3 = this.buffer[index + 3];\n  return (b3 << 24) + (b2 << 16) + (b1 << 8) + b0;\n};\nByteBuffer.prototype.readInt = function () {\n  var pos = this.position;\n  this.position += 4;\n  return this.getInt(pos);\n};\nByteBuffer.prototype.putString = function (str) {\n  var bytes = stringToUtf8Bytes(str);\n  for (var i = 0; i < bytes.length; i++) {\n    this.put(bytes[i]);\n  }\n  // put null character as terminal character\n  this.put(0);\n};\nByteBuffer.prototype.getString = function (index) {\n  var buf = [],\n    ch;\n  if (index == null) {\n    index = this.position;\n  }\n  while (true) {\n    if (this.buffer.length < index + 1) {\n      break;\n    }\n    ch = this.get(index++);\n    if (ch === 0) {\n      break;\n    } else {\n      buf.push(ch);\n    }\n  }\n  this.position = index;\n  return utf8BytesToString(buf);\n};\nmodule.exports = ByteBuffer;","map":{"version":3,"names":["stringToUtf8Bytes","str","bytes","Uint8Array","length","i","j","unicode_code","utf16_code","charCodeAt","upper","lower","subarray","utf8BytesToString","code","b1","b2","b3","b4","String","fromCharCode","ByteBuffer","arg","initial_size","buffer","position","prototype","size","reallocate","new_array","set","shrink","put","b","get","index","putShort","num","getShort","value","putInt","b0","getInt","readInt","pos","putString","getString","buf","ch","push","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/kuromoji/src/util/ByteBuffer.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Convert String (UTF-16) to UTF-8 ArrayBuffer\n *\n * @param {String} str UTF-16 string to convert\n * @return {Uint8Array} Byte sequence encoded by UTF-8\n */\nvar stringToUtf8Bytes = function (str) {\n\n    // Max size of 1 character is 4 bytes\n    var bytes = new Uint8Array(str.length * 4);\n\n    var i = 0, j = 0;\n\n    while (i < str.length) {\n        var unicode_code;\n\n        var utf16_code = str.charCodeAt(i++);\n        if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n            // surrogate pair\n            var upper = utf16_code;           // high surrogate\n            var lower = str.charCodeAt(i++);  // low surrogate\n\n            if (lower >= 0xDC00 && lower <= 0xDFFF) {\n                unicode_code =\n                    (upper - 0xD800) * (1 << 10) + (1 << 16) +\n                    (lower - 0xDC00);\n            } else {\n                // malformed surrogate pair\n                return null;\n            }\n        } else {\n            // not surrogate code\n            unicode_code = utf16_code;\n        }\n\n        if (unicode_code < 0x80) {\n            // 1-byte\n            bytes[j++] = unicode_code;\n\n        } else if (unicode_code < (1 << 11)) {\n            // 2-byte\n            bytes[j++] = (unicode_code >>> 6) | 0xC0;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else if (unicode_code < (1 << 16)) {\n            // 3-byte\n            bytes[j++] = (unicode_code >>> 12) | 0xE0;\n            bytes[j++] = ((unicode_code >> 6) & 0x3f) | 0x80;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else if (unicode_code < (1 << 21)) {\n            // 4-byte\n            bytes[j++] = (unicode_code >>> 18) | 0xF0;\n            bytes[j++] = ((unicode_code >> 12) & 0x3F) | 0x80;\n            bytes[j++] = ((unicode_code >> 6) & 0x3F) | 0x80;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else {\n            // malformed UCS4 code\n        }\n    }\n\n    return bytes.subarray(0, j);\n};\n\n/**\n * Convert UTF-8 ArrayBuffer to String (UTF-16)\n *\n * @param {Array} bytes UTF-8 byte sequence to convert\n * @return {String} String encoded by UTF-16\n */\nvar utf8BytesToString = function (bytes) {\n\n    var str = \"\";\n    var code, b1, b2, b3, b4, upper, lower;\n    var i = 0;\n\n    while (i < bytes.length) {\n\n        b1 = bytes[i++];\n\n        if (b1 < 0x80) {\n            // 1 byte\n            code = b1;\n        } else if ((b1 >> 5) === 0x06) {\n            // 2 bytes\n            b2 = bytes[i++];\n            code = ((b1 & 0x1f) << 6) | (b2 & 0x3f);\n        } else if ((b1 >> 4) === 0x0e) {\n            // 3 bytes\n            b2 = bytes[i++];\n            b3 = bytes[i++];\n            code = ((b1 & 0x0f) << 12) | ((b2 & 0x3f) << 6) | (b3 & 0x3f);\n        } else {\n            // 4 bytes\n            b2 = bytes[i++];\n            b3 = bytes[i++];\n            b4 = bytes[i++];\n            code = ((b1 & 0x07) << 18) | ((b2 & 0x3f) << 12) | ((b3 & 0x3f) << 6) | (b4 & 0x3f);\n        }\n\n        if (code < 0x10000) {\n            str += String.fromCharCode(code);\n        } else {\n            // surrogate pair\n            code -= 0x10000;\n            upper = (0xD800 | (code >> 10));\n            lower = (0xDC00 | (code & 0x3FF));\n            str += String.fromCharCode(upper, lower);\n        }\n    }\n\n    return str;\n};\n\n/**\n * Utilities to manipulate byte sequence\n * @param {(number|Uint8Array)} arg Initial size of this buffer (number), or buffer to set (Uint8Array)\n * @constructor\n */\nfunction ByteBuffer(arg) {\n    var initial_size;\n    if (arg == null) {\n        initial_size = 1024 * 1024;\n    } else if (typeof arg === \"number\") {\n        initial_size = arg;\n    } else if (arg instanceof Uint8Array) {\n        this.buffer = arg;\n        this.position = 0;  // Overwrite\n        return;\n    } else {\n        // typeof arg -> String\n        throw typeof arg + \" is invalid parameter type for ByteBuffer constructor\";\n    }\n    // arg is null or number\n    this.buffer = new Uint8Array(initial_size);\n    this.position = 0;\n}\n\nByteBuffer.prototype.size = function () {\n    return this.buffer.length;\n};\n\nByteBuffer.prototype.reallocate = function () {\n    var new_array = new Uint8Array(this.buffer.length * 2);\n    new_array.set(this.buffer);\n    this.buffer = new_array;\n};\n\nByteBuffer.prototype.shrink = function () {\n    this.buffer = this.buffer.subarray(0, this.position);\n    return this.buffer;\n};\n\nByteBuffer.prototype.put = function (b) {\n    if (this.buffer.length < this.position + 1) {\n        this.reallocate();\n    }\n    this.buffer[this.position++] = b;\n};\n\nByteBuffer.prototype.get = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 1;\n    }\n    if (this.buffer.length < index + 1) {\n        return 0;\n    }\n    return this.buffer[index];\n};\n\n// Write short to buffer by little endian\nByteBuffer.prototype.putShort = function (num) {\n    if (0xFFFF < num) {\n        throw num + \" is over short value\";\n    }\n    var lower = (0x00FF & num);\n    var upper = (0xFF00 & num) >> 8;\n    this.put(lower);\n    this.put(upper);\n};\n\n// Read short from buffer by little endian\nByteBuffer.prototype.getShort = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 2;\n    }\n    if (this.buffer.length < index + 2) {\n        return 0;\n    }\n    var lower = this.buffer[index];\n    var upper = this.buffer[index + 1];\n    var value = (upper << 8) + lower;\n    if (value & 0x8000) {\n\tvalue = -((value - 1) ^ 0xFFFF);\n    }\n    return value;\n};\n\n// Write integer to buffer by little endian\nByteBuffer.prototype.putInt = function (num) {\n    if (0xFFFFFFFF < num) {\n        throw num + \" is over integer value\";\n    }\n    var b0 = (0x000000FF & num);\n    var b1 = (0x0000FF00 & num) >> 8;\n    var b2 = (0x00FF0000 & num) >> 16;\n    var b3 = (0xFF000000 & num) >> 24;\n    this.put(b0);\n    this.put(b1);\n    this.put(b2);\n    this.put(b3);\n};\n\n// Read integer from buffer by little endian\nByteBuffer.prototype.getInt = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 4;\n    }\n    if (this.buffer.length < index + 4) {\n        return 0;\n    }\n    var b0 = this.buffer[index];\n    var b1 = this.buffer[index + 1];\n    var b2 = this.buffer[index + 2];\n    var b3 = this.buffer[index + 3];\n\n    return (b3 << 24) + (b2 << 16) + (b1 << 8) + b0;\n};\n\nByteBuffer.prototype.readInt = function () {\n    var pos = this.position;\n    this.position += 4;\n    return this.getInt(pos);\n};\n\nByteBuffer.prototype.putString = function (str) {\n    var bytes = stringToUtf8Bytes(str);\n    for (var i = 0; i < bytes.length; i++) {\n        this.put(bytes[i]);\n    }\n    // put null character as terminal character\n    this.put(0);\n};\n\nByteBuffer.prototype.getString = function (index) {\n    var buf = [],\n        ch;\n    if (index == null) {\n        index = this.position;\n    }\n    while (true) {\n        if (this.buffer.length < index + 1) {\n            break;\n        }\n        ch = this.get(index++);\n        if (ch === 0) {\n            break;\n        } else {\n            buf.push(ch);\n        }\n    }\n    this.position = index;\n    return utf8BytesToString(buf);\n};\n\nmodule.exports = ByteBuffer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}