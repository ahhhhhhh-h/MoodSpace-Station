{"ast":null,"code":"var _jsxFileName = \"/Users/zyq/Desktop/\\u5927\\u4E8C\\u4E0B/\\u6691\\u671F\\u5B9E\\u4E60/moonshot project/src/components/EmotionChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 注册 Chart.js 组件\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ChartContainer = styled.div`\n  background: rgba(0, 8, 20, 0.95);\n  padding: 20px;\n  border-radius: 15px;\n  width: 800px;\n  height: 400px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n`;\n_c = ChartContainer;\nexport const EmotionChart = ({\n  celestialBodies,\n  onClose\n}) => {\n  _s();\n  const chartRef = useRef(null);\n\n  // 按时间排序并处理数据\n  const sortedBodies = [...celestialBodies].sort((a, b) => a.timestamp - b.timestamp);\n\n  // 转换时间戳为可读格式\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return `${date.getHours()}:${String(date.getMinutes()).padStart(2, '0')}`;\n  };\n\n  // 准备图表数据\n  const data = {\n    labels: sortedBodies.map(body => formatTime(body.timestamp)),\n    datasets: [{\n      label: '情绪曲线',\n      data: sortedBodies.map(body => body.type === 'positive' ? 1 : -1),\n      borderColor: 'rgba(255, 255, 255, 0.8)',\n      backgroundColor: 'rgba(255, 255, 255, 0.1)',\n      tension: 0.4,\n      pointBackgroundColor: context => {\n        const value = context.raw;\n        return value === 1 ? '#FFD700' : '#FF6B6B';\n      },\n      pointRadius: 6\n    }]\n  };\n\n  // 图表配置\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        min: -1.5,\n        max: 1.5,\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: 'rgba(255, 255, 255, 0.8)',\n          callback: function (value) {\n            if (value === 1) return '正面';\n            if (value === -1) return '负面';\n            return '';\n          }\n        }\n      },\n      x: {\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: 'rgba(255, 255, 255, 0.8)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: '情绪变化曲线',\n        color: 'rgba(255, 255, 255, 0.9)',\n        font: {\n          size: 16\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(EmotionChart, \"aW/6lq35noP8VJrK3G9P8gm4OYM=\");\n_c2 = EmotionChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChartContainer\");\n$RefreshReg$(_c2, \"EmotionChart\");","map":{"version":3,"names":["React","useRef","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","styled","jsxDEV","_jsxDEV","register","ChartContainer","div","_c","EmotionChart","celestialBodies","onClose","_s","chartRef","sortedBodies","sort","a","b","timestamp","formatTime","date","Date","getHours","String","getMinutes","padStart","data","labels","map","body","datasets","label","type","borderColor","backgroundColor","tension","pointBackgroundColor","context","value","raw","pointRadius","options","responsive","maintainAspectRatio","scales","y","min","max","grid","color","ticks","callback","x","plugins","legend","display","title","text","font","size","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/src/components/EmotionChart.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartData,\n  ChartOptions\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { CelestialBody } from '../types';\n\n// 注册 Chart.js 组件\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ChartContainer = styled.div`\n  background: rgba(0, 8, 20, 0.95);\n  padding: 20px;\n  border-radius: 15px;\n  width: 800px;\n  height: 400px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n`;\n\ninterface EmotionChartProps {\n  celestialBodies: CelestialBody[];\n  onClose: () => void;\n}\n\nexport const EmotionChart: React.FC<EmotionChartProps> = ({\n  celestialBodies,\n  onClose\n}) => {\n  const chartRef = useRef<ChartJS<'line'>>(null);\n\n  // 按时间排序并处理数据\n  const sortedBodies = [...celestialBodies].sort((a, b) => a.timestamp - b.timestamp);\n  \n  // 转换时间戳为可读格式\n  const formatTime = (timestamp: number) => {\n    const date = new Date(timestamp);\n    return `${date.getHours()}:${String(date.getMinutes()).padStart(2, '0')}`;\n  };\n\n  // 准备图表数据\n  const data: ChartData<'line'> = {\n    labels: sortedBodies.map(body => formatTime(body.timestamp)),\n    datasets: [\n      {\n        label: '情绪曲线',\n        data: sortedBodies.map(body => body.type === 'positive' ? 1 : -1),\n        borderColor: 'rgba(255, 255, 255, 0.8)',\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\n        tension: 0.4,\n        pointBackgroundColor: (context: any) => {\n          const value = context.raw;\n          return value === 1 ? '#FFD700' : '#FF6B6B';\n        },\n        pointRadius: 6\n      }\n    ]\n  };\n\n  // 图表配置\n  const options: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        min: -1.5,\n        max: 1.5,\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: 'rgba(255, 255, 255, 0.8)',\n          callback: function(value) {\n            if (value === 1) return '正面';\n            if (value === -1) return '负面';\n            return '';\n          }\n        }\n      },\n      x: {\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: 'rgba(255, 255, 255, 0.8)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: '情绪变化曲线',\n        color: 'rgba(255, 255, 255, 0.9)',\n        font: {\n          size: 16\n        }\n      }\n    }\n  };\n\n  return (\n    <ChartContainer className=\"chart-container\">\n      <Line ref={chartRef} data={data} options={options} />\n    </ChartContainer>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}