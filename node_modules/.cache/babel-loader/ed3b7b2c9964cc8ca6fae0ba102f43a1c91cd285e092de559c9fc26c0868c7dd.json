{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst {\n  defaultContainer\n} = require('./container');\n\n/**\n * Plugin to convert an array to a hashmap where every item existing in the\n * array is mapped to a 1.\n */\nclass ArrToObj {\n  /**\n   * Constructor of the class\n   * @param {object} container Parent container, if not defined then the\n   *    default container is used.\n   */\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'arrToObj';\n  }\n\n  /**\n   * Static method to convert an array to a hashmap object.\n   * @param {object[]} arr Input array.\n   * @returns {object} Output object.\n   */\n  static arrToObj(arr) {\n    const result = {};\n    for (let i = 0; i < arr.length; i += 1) {\n      result[arr[i]] = 1;\n    }\n    return result;\n  }\n  run(input) {\n    if (Array.isArray(input)) {\n      return ArrToObj.arrToObj(input);\n    }\n    input.tokens = ArrToObj.arrToObj(input.tokens);\n    return input;\n  }\n}\nmodule.exports = ArrToObj;","map":{"version":3,"names":["defaultContainer","require","ArrToObj","constructor","container","name","arrToObj","arr","result","i","length","run","input","Array","isArray","tokens","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/core/src/arr-to-obj.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst { defaultContainer } = require('./container');\n\n/**\n * Plugin to convert an array to a hashmap where every item existing in the\n * array is mapped to a 1.\n */\nclass ArrToObj {\n  /**\n   * Constructor of the class\n   * @param {object} container Parent container, if not defined then the\n   *    default container is used.\n   */\n  constructor(container = defaultContainer) {\n    this.container = container.container || container;\n    this.name = 'arrToObj';\n  }\n\n  /**\n   * Static method to convert an array to a hashmap object.\n   * @param {object[]} arr Input array.\n   * @returns {object} Output object.\n   */\n  static arrToObj(arr) {\n    const result = {};\n    for (let i = 0; i < arr.length; i += 1) {\n      result[arr[i]] = 1;\n    }\n    return result;\n  }\n\n  run(input) {\n    if (Array.isArray(input)) {\n      return ArrToObj.arrToObj(input);\n    }\n    input.tokens = ArrToObj.arrToObj(input.tokens);\n    return input;\n  }\n}\n\nmodule.exports = ArrToObj;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;EAAEA;AAAiB,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAEnD;AACA;AACA;AACA;AACA,MAAMC,QAAQ,CAAC;EACb;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACC,SAAS,GAAGJ,gBAAgB,EAAE;IACxC,IAAI,CAACI,SAAS,GAAGA,SAAS,CAACA,SAAS,IAAIA,SAAS;IACjD,IAAI,CAACC,IAAI,GAAG,UAAU;EACxB;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOC,QAAQA,CAACC,GAAG,EAAE;IACnB,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACtCD,MAAM,CAACD,GAAG,CAACE,CAAC,CAAC,CAAC,GAAG,CAAC;IACpB;IACA,OAAOD,MAAM;EACf;EAEAG,GAAGA,CAACC,KAAK,EAAE;IACT,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxB,OAAOV,QAAQ,CAACI,QAAQ,CAACM,KAAK,CAAC;IACjC;IACAA,KAAK,CAACG,MAAM,GAAGb,QAAQ,CAACI,QAAQ,CAACM,KAAK,CAACG,MAAM,CAAC;IAC9C,OAAOH,KAAK;EACd;AACF;AAEAI,MAAM,CAACC,OAAO,GAAGf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}