{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst dict = require('./dict.json');\nconst namesDict = require('./names-dict.json');\nconst {\n  conjugate\n} = require('./korean-conjugation');\nconst dictionary = {};\nconst names = {};\nlet initialized = false;\nfunction build() {\n  const keys = Object.keys(dict);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    const words = dict[key];\n    for (let j = 0; j < words.length; j += 1) {\n      dictionary[words[j]] = {\n        type: key\n      };\n      if (key === 'Verb') {\n        const conjugations = Object.keys(conjugate(words[j], false));\n        for (let k = 0; k < conjugations.length; k += 1) {\n          if (conjugations[k] !== words[j]) {\n            dictionary[conjugations[k]] = {\n              type: key,\n              root: words[j]\n            };\n          }\n        }\n      }\n    }\n  }\n}\nfunction buildNames() {\n  const keys = Object.keys(namesDict);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    names[key] = {};\n    const words = namesDict[key];\n    for (let j = 0; j < words.length; j += 1) {\n      names[key][words[j]] = 1;\n    }\n  }\n}\nfunction initDicts() {\n  if (!initialized) {\n    build();\n    buildNames();\n    initialized = true;\n  }\n}\nmodule.exports = {\n  initDicts,\n  dictionary,\n  names\n};","map":{"version":3,"names":["dict","require","namesDict","conjugate","dictionary","names","initialized","build","keys","Object","i","length","key","words","j","type","conjugations","k","root","buildNames","initDicts","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-ko/src/korean-dictionary.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst dict = require('./dict.json');\nconst namesDict = require('./names-dict.json');\nconst { conjugate } = require('./korean-conjugation');\n\nconst dictionary = {};\nconst names = {};\nlet initialized = false;\n\nfunction build() {\n  const keys = Object.keys(dict);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    const words = dict[key];\n    for (let j = 0; j < words.length; j += 1) {\n      dictionary[words[j]] = { type: key };\n      if (key === 'Verb') {\n        const conjugations = Object.keys(conjugate(words[j], false));\n        for (let k = 0; k < conjugations.length; k += 1) {\n          if (conjugations[k] !== words[j]) {\n            dictionary[conjugations[k]] = { type: key, root: words[j] };\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction buildNames() {\n  const keys = Object.keys(namesDict);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    names[key] = {};\n    const words = namesDict[key];\n    for (let j = 0; j < words.length; j += 1) {\n      names[key][words[j]] = 1;\n    }\n  }\n}\n\nfunction initDicts() {\n  if (!initialized) {\n    build();\n    buildNames();\n    initialized = true;\n  }\n}\n\nmodule.exports = {\n  initDicts,\n  dictionary,\n  names,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,aAAa,CAAC;AACnC,MAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC9C,MAAM;EAAEE;AAAU,CAAC,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAErD,MAAMG,UAAU,GAAG,CAAC,CAAC;AACrB,MAAMC,KAAK,GAAG,CAAC,CAAC;AAChB,IAAIC,WAAW,GAAG,KAAK;AAEvB,SAASC,KAAKA,CAAA,EAAG;EACf,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACR,IAAI,CAAC;EAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACvC,MAAME,GAAG,GAAGJ,IAAI,CAACE,CAAC,CAAC;IACnB,MAAMG,KAAK,GAAGb,IAAI,CAACY,GAAG,CAAC;IACvB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACF,MAAM,EAAEG,CAAC,IAAI,CAAC,EAAE;MACxCV,UAAU,CAACS,KAAK,CAACC,CAAC,CAAC,CAAC,GAAG;QAAEC,IAAI,EAAEH;MAAI,CAAC;MACpC,IAAIA,GAAG,KAAK,MAAM,EAAE;QAClB,MAAMI,YAAY,GAAGP,MAAM,CAACD,IAAI,CAACL,SAAS,CAACU,KAAK,CAACC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5D,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,YAAY,CAACL,MAAM,EAAEM,CAAC,IAAI,CAAC,EAAE;UAC/C,IAAID,YAAY,CAACC,CAAC,CAAC,KAAKJ,KAAK,CAACC,CAAC,CAAC,EAAE;YAChCV,UAAU,CAACY,YAAY,CAACC,CAAC,CAAC,CAAC,GAAG;cAAEF,IAAI,EAAEH,GAAG;cAAEM,IAAI,EAAEL,KAAK,CAACC,CAAC;YAAE,CAAC;UAC7D;QACF;MACF;IACF;EACF;AACF;AAEA,SAASK,UAAUA,CAAA,EAAG;EACpB,MAAMX,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACN,SAAS,CAAC;EACnC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACvC,MAAME,GAAG,GAAGJ,IAAI,CAACE,CAAC,CAAC;IACnBL,KAAK,CAACO,GAAG,CAAC,GAAG,CAAC,CAAC;IACf,MAAMC,KAAK,GAAGX,SAAS,CAACU,GAAG,CAAC;IAC5B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACF,MAAM,EAAEG,CAAC,IAAI,CAAC,EAAE;MACxCT,KAAK,CAACO,GAAG,CAAC,CAACC,KAAK,CAACC,CAAC,CAAC,CAAC,GAAG,CAAC;IAC1B;EACF;AACF;AAEA,SAASM,SAASA,CAAA,EAAG;EACnB,IAAI,CAACd,WAAW,EAAE;IAChBC,KAAK,CAAC,CAAC;IACPY,UAAU,CAAC,CAAC;IACZb,WAAW,GAAG,IAAI;EACpB;AACF;AAEAe,MAAM,CAACC,OAAO,GAAG;EACfF,SAAS;EACThB,UAAU;EACVC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}