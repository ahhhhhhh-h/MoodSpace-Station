{"ast":null,"code":"var _jsxFileName = \"/Users/zyq/Desktop/\\u5927\\u4E8C\\u4E0B/\\u6691\\u671F\\u5B9E\\u4E60/moonshot project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Moon } from './components/Moon';\nimport { InputSection } from './components/InputSection';\nimport { ControlPanel } from './components/ControlPanel';\nimport { FlowerSelector } from './components/FlowerSelector';\nimport { backgroundImage, plantButtonIcon, radioIcon } from './assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #000814;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n_c = AppContainer;\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: url(${backgroundImage}) no-repeat center center fixed;\n  background-size: cover;\n  z-index: 0;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: radial-gradient(circle at center, rgba(0, 18, 51, 0.7) 0%, rgba(0, 8, 20, 0.9) 100%);\n  }\n`;\n_c2 = Background;\nconst ContentWrapper = styled.div`\n  position: relative;\n  z-index: 1;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\n// 独立的种花按钮\n_c3 = ContentWrapper;\nconst PlantFlowerButton = styled.button`\n  position: absolute;\n  top: 100px;\n  right: 20px;\n  width: 110px;\n  height: 40px;\n  background: rgba(255, 255, 255, 0.1) url(${plantButtonIcon}) no-repeat center center;\n  background-size: 110px 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 20px;\n  transition: all 0.3s;\n  \n  &:hover {\n    transform: scale(1.1);\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n_c4 = PlantFlowerButton;\nconst RadioButton = styled.button`\n  position: absolute;\n  top: 150px;\n  right: 20px;\n  width: 110px;\n  height: 40px;\n  background: rgba(255, 255, 255, 0.1) url(${radioIcon}) no-repeat center center;\n  background-size: 110px 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 20px;\n  transition: all 0.3s;\n  opacity: ${props => props.isOn ? 1 : 0.5};\n  \n  &:hover {\n    transform: scale(1.1);\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\n// 情感分析相关的常量和类型\n_c5 = RadioButton;\nconst EMOTION_CONFIG = {\n  // 积极情绪词库\n  positiveWords: [\n  // 表示快乐\n  '开心', '快乐', '高兴', '喜悦', '欢乐', '兴奋', '愉快', '欣喜', '雀跃',\n  // 表示满意\n  '满意', '满足', '称心', '如意', '痛快', '舒服', '惬意', '安心',\n  // 表示喜爱\n  '喜欢', '爱', '热爱', '钟爱', '宝贝', '亲爱', '可爱', '喜爱', '中意',\n  // 表示赞美\n  '优秀', '棒', '好', '强', '厉害', '了不起', '出色', '精彩', '绝妙',\n  // 表示感激\n  '感恩', '感谢', '谢谢', '谢意', '感激', '感动',\n  // 表示希望\n  '期待', '希望', '盼望', '憧憬', '向往',\n  // 英文情感词\n  'happy', 'love', 'great', 'good', 'excellent', 'wonderful', 'amazing', 'awesome', 'perfect', 'fantastic', 'beautiful', 'nice', 'grateful', 'blessed', 'excited', 'joy', 'delighted', 'pleased', 'glad', 'satisfied'],\n  // 消极情绪词库\n  negativeWords: [\n  // 表示悲伤\n  '难过', '伤心', '痛苦', '悲伤', '哀伤', '忧伤', '心痛', '黯然', '凄凉',\n  // 表示不满\n  '讨厌', '烦', '糟糕', '失望', '不满', '不爽', '恼火', '生气', '愤怒',\n  // 表示焦虑\n  '焦虑', '担心', '忧虑', '烦恼', '苦恼', '不安', '慌', '怕', '害怕',\n  // 表示疲惫\n  '累', '疲惫', '困', '乏', '倦', '疲倦', '厌倦',\n  // 表示痛苦\n  '痛', '苦', '折磨', '煎熬', '痛苦', '难受',\n  // 英文情感词\n  'sad', 'hate', 'bad', 'terrible', 'awful', 'worried', 'anxious', 'depressed', 'angry', 'upset', 'tired', 'exhausted', 'frustrated', 'disappointed', 'unhappy', 'miserable', 'lonely', 'scared', 'afraid', 'stressed'],\n  // 程度词及其权重\n  degreeWords: {\n    '非常': 2,\n    '很': 1.5,\n    '特别': 1.8,\n    '真': 1.5,\n    '太': 1.8,\n    '好': 1.5,\n    '极': 2,\n    '超': 1.8,\n    'very': 1.8,\n    'really': 1.5,\n    'so': 1.5,\n    'extremely': 2,\n    'absolutely': 2\n  },\n  // 否定词\n  negativePrefix: ['不', '没', '无', '别', '莫', '勿', '未', '非', 'not', 'no', 'never', \"don't\", \"doesn't\", \"didn't\", \"won't\", \"wouldn't\", \"shouldn't\", \"can't\", \"cannot\"],\n  // 表情符号\n  emoticons: {\n    positive: ['😊', '😄', '😃', '😀', '😁', '😆', '😅', '😂', '🤣', '☺️', '😌', '😍', '🥰', '😘', '😗', '😙', '😚', '😋', '😛', '😝', '😜', '🤪', '🤗', '🤓', '😎', '🥳', '🤩', '✨', '💫', '⭐️', '🌟', '✅', '❤️', '🧡', '💛', '💚', '💙', '🤍', '♥️'],\n    negative: ['😞', '😔', '😟', '😕', '🙁', '☹️', '😣', '😖', '😫', '😩', '🥺', '😢', '😭', '😤', '😠', '😡', '🤬', '😱', '😨', '😰', '😥', '😓', '🤯', '😳', '😶', '😑', '😐', '🙄', '😯', '😦', '😧', '😮', '😲', '🥱', '😴', '🤤', '😪', '😵', '🤢', '🤮']\n  }\n};\n\n// 改进的情绪判断函数\nconst analyzeEmotion = text => {\n  // 转换为小写进行匹配\n  const lowerText = text.toLowerCase();\n  let positiveScore = 0;\n  let negativeScore = 0;\n\n  // 检查表情符号\n  for (const emoji of EMOTION_CONFIG.emoticons.positive) {\n    if (text.includes(emoji)) positiveScore += 1;\n  }\n  for (const emoji of EMOTION_CONFIG.emoticons.negative) {\n    if (text.includes(emoji)) negativeScore += 1;\n  }\n\n  // 分词处理（简单按空格和标点分词）\n  const words = text.split(/[\\s,.!?，。！？、]/);\n  let hasNegation = false;\n  let degreeMultiplier = 1;\n  for (let i = 0; i < words.length; i++) {\n    const word = words[i].toLowerCase();\n\n    // 检查是否有否定词\n    if (EMOTION_CONFIG.negativePrefix.some(prefix => word.includes(prefix))) {\n      hasNegation = !hasNegation; // 双重否定变肯定\n      continue;\n    }\n\n    // 检查程度词\n    const degreeWord = Object.keys(EMOTION_CONFIG.degreeWords).find(degree => word.includes(degree));\n    if (degreeWord) {\n      degreeMultiplier = EMOTION_CONFIG.degreeWords[degreeWord];\n      continue;\n    }\n\n    // 计算情感得分\n    if (EMOTION_CONFIG.positiveWords.some(w => word.includes(w))) {\n      const score = degreeMultiplier;\n      positiveScore += hasNegation ? -score : score;\n      hasNegation = false;\n      degreeMultiplier = 1;\n    }\n    if (EMOTION_CONFIG.negativeWords.some(w => word.includes(w))) {\n      const score = degreeMultiplier;\n      negativeScore += hasNegation ? -score : score;\n      hasNegation = false;\n      degreeMultiplier = 1;\n    }\n  }\n\n  // 根据得分判断情绪类型\n  if (positiveScore > negativeScore) {\n    return 'positive';\n  } else if (negativeScore > positiveScore) {\n    return 'negative';\n  } else {\n    // 如果分数相等，根据文本长度和内容特征进行启发式判断\n    const textLength = text.length;\n    const hasExclamation = text.includes('!') || text.includes('！');\n    const hasQuestion = text.includes('?') || text.includes('？');\n    if (hasExclamation && !hasQuestion) {\n      return 'positive'; // 感叹句倾向于表达积极情绪\n    } else if (hasQuestion && !hasExclamation) {\n      return 'negative'; // 疑问句倾向于表达消极情绪或疑虑\n    } else {\n      // 如果还是无法判断，保持随机\n      return Math.random() > 0.5 ? 'positive' : 'negative';\n    }\n  }\n};\nexport const App = () => {\n  _s();\n  const [celestialBodies, setCelestialBodies] = useState([]);\n  const [flowers, setFlowers] = useState([]);\n  const [starCount, setStarCount] = useState(0);\n  const [isRadioOn, setIsRadioOn] = useState(false);\n  const [showFlowerSelector, setShowFlowerSelector] = useState(false);\n  const handleEmotionSubmit = (text, visibility, isStarred) => {\n    // 分析情绪\n    const emotionType = analyzeEmotion(text);\n\n    // 创建新的星体\n    const newCelestialBody = {\n      id: Date.now().toString(),\n      type: emotionType,\n      content: text,\n      timestamp: Date.now(),\n      isStarred,\n      visibility\n    };\n\n    // 更新星体列表\n    setCelestialBodies(prev => [...prev, newCelestialBody]);\n\n    // 如果是正面情绪，增加星星计数\n    if (emotionType === 'positive') {\n      setStarCount(prev => prev + 1);\n    }\n\n    // 如果标记为永久保存，无论情绪类型都增加星星计数\n    if (isStarred) {\n      setStarCount(prev => prev + 1);\n    }\n  };\n  const handlePlantFlower = () => {\n    setShowFlowerSelector(true);\n  };\n  const plantFlowerOnMoon = flower => {\n    setFlowers(prev => [...prev, flower]);\n    if (starCount >= 3) {\n      setStarCount(prev => prev - 3);\n    }\n  };\n  const closeFlowerSelector = () => {\n    setShowFlowerSelector(false);\n  };\n  const handleClear = () => {\n    // 只清除非永久保存的星体\n    setCelestialBodies(prev => prev.filter(body => body.isStarred));\n    setFlowers([]);\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ControlPanel, {\n        starCount: starCount,\n        onExport: () => console.log('Export'),\n        onClear: handleClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlantFlowerButton, {\n        onClick: handlePlantFlower,\n        title: \"\\u79CD\\u82B1\",\n        disabled: starCount < 3,\n        style: {\n          opacity: starCount < 3 ? 0.5 : 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n        onClick: () => setIsRadioOn(!isRadioOn),\n        isOn: isRadioOn,\n        title: \"\\u7535\\u53F0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Moon, {\n        celestialBodies: celestialBodies,\n        flowers: flowers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSection, {\n        onSubmit: handleEmotionSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), showFlowerSelector && /*#__PURE__*/_jsxDEV(FlowerSelector, {\n        onPlantFlower: plantFlowerOnMoon,\n        onClose: closeFlowerSelector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vLVB7sDYh2EbdsjIAptXJ6pB0fo=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"ContentWrapper\");\n$RefreshReg$(_c4, \"PlantFlowerButton\");\n$RefreshReg$(_c5, \"RadioButton\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","styled","Moon","InputSection","ControlPanel","FlowerSelector","backgroundImage","plantButtonIcon","radioIcon","jsxDEV","_jsxDEV","AppContainer","div","_c","Background","_c2","ContentWrapper","_c3","PlantFlowerButton","button","_c4","RadioButton","props","isOn","_c5","EMOTION_CONFIG","positiveWords","negativeWords","degreeWords","negativePrefix","emoticons","positive","negative","analyzeEmotion","text","lowerText","toLowerCase","positiveScore","negativeScore","emoji","includes","words","split","hasNegation","degreeMultiplier","i","length","word","some","prefix","degreeWord","Object","keys","find","degree","w","score","textLength","hasExclamation","hasQuestion","Math","random","App","_s","celestialBodies","setCelestialBodies","flowers","setFlowers","starCount","setStarCount","isRadioOn","setIsRadioOn","showFlowerSelector","setShowFlowerSelector","handleEmotionSubmit","visibility","isStarred","emotionType","newCelestialBody","id","Date","now","toString","type","content","timestamp","prev","handlePlantFlower","plantFlowerOnMoon","flower","closeFlowerSelector","handleClear","filter","body","children","fileName","_jsxFileName","lineNumber","columnNumber","onExport","console","log","onClear","onClick","title","disabled","style","opacity","onSubmit","onPlantFlower","onClose","_c6","$RefreshReg$"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Moon } from './components/Moon';\nimport { InputSection } from './components/InputSection';\nimport { ControlPanel } from './components/ControlPanel';\nimport { FlowerSelector } from './components/FlowerSelector';\nimport { CelestialBody, Flower, EmotionType } from './types';\nimport { backgroundImage, plantButtonIcon, radioIcon } from './assets';\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #000814;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: url(${backgroundImage}) no-repeat center center fixed;\n  background-size: cover;\n  z-index: 0;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: radial-gradient(circle at center, rgba(0, 18, 51, 0.7) 0%, rgba(0, 8, 20, 0.9) 100%);\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  position: relative;\n  z-index: 1;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\n// 独立的种花按钮\nconst PlantFlowerButton = styled.button`\n  position: absolute;\n  top: 100px;\n  right: 20px;\n  width: 110px;\n  height: 40px;\n  background: rgba(255, 255, 255, 0.1) url(${plantButtonIcon}) no-repeat center center;\n  background-size: 110px 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 20px;\n  transition: all 0.3s;\n  \n  &:hover {\n    transform: scale(1.1);\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nconst RadioButton = styled.button<{ isOn: boolean }>`\n  position: absolute;\n  top: 150px;\n  right: 20px;\n  width: 110px;\n  height: 40px;\n  background: rgba(255, 255, 255, 0.1) url(${radioIcon}) no-repeat center center;\n  background-size: 110px 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 20px;\n  transition: all 0.3s;\n  opacity: ${props => props.isOn ? 1 : 0.5};\n  \n  &:hover {\n    transform: scale(1.1);\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\n// 情感分析相关的常量和类型\ninterface DegreeWords {\n  [key: string]: number;\n}\n\nconst EMOTION_CONFIG = {\n  // 积极情绪词库\n  positiveWords: [\n    // 表示快乐\n    '开心', '快乐', '高兴', '喜悦', '欢乐', '兴奋', '愉快', '欣喜', '雀跃',\n    // 表示满意\n    '满意', '满足', '称心', '如意', '痛快', '舒服', '惬意', '安心',\n    // 表示喜爱\n    '喜欢', '爱', '热爱', '钟爱', '宝贝', '亲爱', '可爱', '喜爱', '中意',\n    // 表示赞美\n    '优秀', '棒', '好', '强', '厉害', '了不起', '出色', '精彩', '绝妙',\n    // 表示感激\n    '感恩', '感谢', '谢谢', '谢意', '感激', '感动',\n    // 表示希望\n    '期待', '希望', '盼望', '憧憬', '向往',\n    // 英文情感词\n    'happy', 'love', 'great', 'good', 'excellent', 'wonderful', 'amazing', 'awesome',\n    'perfect', 'fantastic', 'beautiful', 'nice', 'grateful', 'blessed', 'excited',\n    'joy', 'delighted', 'pleased', 'glad', 'satisfied'\n  ],\n  \n  // 消极情绪词库\n  negativeWords: [\n    // 表示悲伤\n    '难过', '伤心', '痛苦', '悲伤', '哀伤', '忧伤', '心痛', '黯然', '凄凉',\n    // 表示不满\n    '讨厌', '烦', '糟糕', '失望', '不满', '不爽', '恼火', '生气', '愤怒',\n    // 表示焦虑\n    '焦虑', '担心', '忧虑', '烦恼', '苦恼', '不安', '慌', '怕', '害怕',\n    // 表示疲惫\n    '累', '疲惫', '困', '乏', '倦', '疲倦', '厌倦',\n    // 表示痛苦\n    '痛', '苦', '折磨', '煎熬', '痛苦', '难受',\n    // 英文情感词\n    'sad', 'hate', 'bad', 'terrible', 'awful', 'worried', 'anxious', 'depressed',\n    'angry', 'upset', 'tired', 'exhausted', 'frustrated', 'disappointed', 'unhappy',\n    'miserable', 'lonely', 'scared', 'afraid', 'stressed'\n  ],\n  \n  // 程度词及其权重\n  degreeWords: {\n    '非常': 2,\n    '很': 1.5,\n    '特别': 1.8,\n    '真': 1.5,\n    '太': 1.8,\n    '好': 1.5,\n    '极': 2,\n    '超': 1.8,\n    'very': 1.8,\n    'really': 1.5,\n    'so': 1.5,\n    'extremely': 2,\n    'absolutely': 2\n  } as DegreeWords,\n  \n  // 否定词\n  negativePrefix: [\n    '不', '没', '无', '别', '莫', '勿', '未', '非',\n    'not', 'no', 'never', \"don't\", \"doesn't\", \"didn't\", \"won't\", \"wouldn't\", \"shouldn't\", \"can't\", \"cannot\"\n  ],\n  \n  // 表情符号\n  emoticons: {\n    positive: ['😊', '😄', '😃', '😀', '😁', '😆', '😅', '😂', '🤣', '☺️', '😌', '😍', '🥰', '😘', '😗', '😙', '😚', '😋', '😛', '😝', '😜', '🤪', '🤗', '🤓', '😎', '🥳', '🤩', '✨', '💫', '⭐️', '🌟', '✅', '❤️', '🧡', '💛', '💚', '💙', '🤍', '♥️'],\n    negative: ['😞', '😔', '😟', '😕', '🙁', '☹️', '😣', '😖', '😫', '😩', '🥺', '😢', '😭', '😤', '😠', '😡', '🤬', '😱', '😨', '😰', '😥', '😓', '🤯', '😳', '😶', '😑', '😐', '🙄', '😯', '😦', '😧', '😮', '😲', '🥱', '😴', '🤤', '😪', '😵', '🤢', '🤮']\n  }\n} as const;\n\n// 改进的情绪判断函数\nconst analyzeEmotion = (text: string): EmotionType => {\n  // 转换为小写进行匹配\n  const lowerText = text.toLowerCase();\n  let positiveScore = 0;\n  let negativeScore = 0;\n  \n  // 检查表情符号\n  for (const emoji of EMOTION_CONFIG.emoticons.positive) {\n    if (text.includes(emoji)) positiveScore += 1;\n  }\n  for (const emoji of EMOTION_CONFIG.emoticons.negative) {\n    if (text.includes(emoji)) negativeScore += 1;\n  }\n  \n  // 分词处理（简单按空格和标点分词）\n  const words = text.split(/[\\s,.!?，。！？、]/);\n  let hasNegation = false;\n  let degreeMultiplier = 1;\n  \n  for (let i = 0; i < words.length; i++) {\n    const word = words[i].toLowerCase();\n    \n    // 检查是否有否定词\n    if (EMOTION_CONFIG.negativePrefix.some(prefix => word.includes(prefix))) {\n      hasNegation = !hasNegation; // 双重否定变肯定\n      continue;\n    }\n    \n    // 检查程度词\n    const degreeWord = Object.keys(EMOTION_CONFIG.degreeWords).find(degree => word.includes(degree));\n    if (degreeWord) {\n      degreeMultiplier = EMOTION_CONFIG.degreeWords[degreeWord];\n      continue;\n    }\n    \n    // 计算情感得分\n    if (EMOTION_CONFIG.positiveWords.some(w => word.includes(w))) {\n      const score = degreeMultiplier;\n      positiveScore += hasNegation ? -score : score;\n      hasNegation = false;\n      degreeMultiplier = 1;\n    }\n    \n    if (EMOTION_CONFIG.negativeWords.some(w => word.includes(w))) {\n      const score = degreeMultiplier;\n      negativeScore += hasNegation ? -score : score;\n      hasNegation = false;\n      degreeMultiplier = 1;\n    }\n  }\n  \n  // 根据得分判断情绪类型\n  if (positiveScore > negativeScore) {\n    return 'positive';\n  } else if (negativeScore > positiveScore) {\n    return 'negative';\n  } else {\n    // 如果分数相等，根据文本长度和内容特征进行启发式判断\n    const textLength = text.length;\n    const hasExclamation = text.includes('!') || text.includes('！');\n    const hasQuestion = text.includes('?') || text.includes('？');\n    \n    if (hasExclamation && !hasQuestion) {\n      return 'positive'; // 感叹句倾向于表达积极情绪\n    } else if (hasQuestion && !hasExclamation) {\n      return 'negative'; // 疑问句倾向于表达消极情绪或疑虑\n    } else {\n      // 如果还是无法判断，保持随机\n      return Math.random() > 0.5 ? 'positive' : 'negative';\n    }\n  }\n};\n\nexport const App: React.FC = () => {\n  const [celestialBodies, setCelestialBodies] = useState<CelestialBody[]>([]);\n  const [flowers, setFlowers] = useState<Flower[]>([]);\n  const [starCount, setStarCount] = useState(0);\n  const [isRadioOn, setIsRadioOn] = useState(false);\n  const [showFlowerSelector, setShowFlowerSelector] = useState(false);\n\n  const handleEmotionSubmit = (text: string, visibility: 'private' | 'friends' | 'broadcast', isStarred: boolean) => {\n    // 分析情绪\n    const emotionType = analyzeEmotion(text);\n    \n    // 创建新的星体\n    const newCelestialBody: CelestialBody = {\n      id: Date.now().toString(),\n      type: emotionType,\n      content: text,\n      timestamp: Date.now(),\n      isStarred,\n      visibility\n    };\n\n    // 更新星体列表\n    setCelestialBodies(prev => [...prev, newCelestialBody]);\n\n    // 如果是正面情绪，增加星星计数\n    if (emotionType === 'positive') {\n      setStarCount(prev => prev + 1);\n    }\n\n    // 如果标记为永久保存，无论情绪类型都增加星星计数\n    if (isStarred) {\n      setStarCount(prev => prev + 1);\n    }\n  };\n\n  const handlePlantFlower = () => {\n    setShowFlowerSelector(true);\n  };\n\n  const plantFlowerOnMoon = (flower: Flower) => {\n    setFlowers(prev => [...prev, flower]);\n    if (starCount >= 3) {\n      setStarCount(prev => prev - 3);\n    }\n  };\n\n  const closeFlowerSelector = () => {\n    setShowFlowerSelector(false);\n  };\n\n  const handleClear = () => {\n    // 只清除非永久保存的星体\n    setCelestialBodies(prev => prev.filter(body => body.isStarred));\n    setFlowers([]);\n  };\n\n  return (\n    <AppContainer>\n      <Background />\n      <ContentWrapper>\n        <ControlPanel \n          starCount={starCount}\n          onExport={() => console.log('Export')}\n          onClear={handleClear}\n        />\n        \n        {/* 独立的种花按钮和电台按钮 */}\n        <PlantFlowerButton \n          onClick={handlePlantFlower} \n          title=\"种花\" \n          disabled={starCount < 3}\n          style={{ opacity: starCount < 3 ? 0.5 : 1 }}\n        />\n        \n        <RadioButton \n          onClick={() => setIsRadioOn(!isRadioOn)}\n          isOn={isRadioOn}\n          title=\"电台\"\n        />\n        \n        <Moon celestialBodies={celestialBodies} flowers={flowers} />\n        <InputSection onSubmit={handleEmotionSubmit} />\n        \n        {showFlowerSelector && (\n          <FlowerSelector\n            onPlantFlower={plantFlowerOnMoon}\n            onClose={closeFlowerSelector}\n          />\n        )}\n      </ContentWrapper>\n    </AppContainer>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}