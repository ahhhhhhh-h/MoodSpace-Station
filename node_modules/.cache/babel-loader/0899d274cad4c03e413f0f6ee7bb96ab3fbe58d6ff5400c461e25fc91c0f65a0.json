{"ast":null,"code":"var _EmotionAnalyzer;\nimport { debounce } from 'lodash';\nexport class EmotionAnalyzer {\n  constructor() {\n    this.apiKey = 'sk-EixB2HOXxiXcawawgVO7JhHo45pfs7CdMOqJy2o7uMvQs8Kn';\n    // ✅ 填自己的\n    this.apiUrl = 'https://api.moonshot.cn/v1/chat/completions';\n    this.cache = {};\n    // 这里内部做了防抖（debouncedActualAnalyze）\n    this.debouncedAnalyze = debounce(async text => {\n      return await this.actualAnalyze(text);\n    }, 500);\n  }\n  static getInstance() {\n    if (!EmotionAnalyzer.instance) {\n      EmotionAnalyzer.instance = new EmotionAnalyzer();\n    }\n    return EmotionAnalyzer.instance;\n  }\n\n  // 🔥 新版 analyzeEmotion，不直接debounce\n  async analyzeEmotion(text) {\n    if (!text.trim()) return 'received';\n    if (this.cache[text]) {\n      console.log('[EmotionAnalyzer] 使用缓存');\n      return this.cache[text];\n    }\n    return await this.safeAnalyze(text);\n  }\n  async safeAnalyze(text) {\n    return new Promise(resolve => {\n      this.debouncedAnalyze(text).then(result => {\n        resolve(result !== null && result !== void 0 ? result : 'received'); // 万一debounce里返回undefined，兜底\n      });\n    });\n  }\n  async actualAnalyze(text) {\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag, _data$choices$$messag2;\n      const prompt = `\n请判断下列中文内容的情绪类别，只返回：\n- positive（积极）\n- negative（消极）\n- received（中性）\n\n文本内容：\n\"${text}\"\n`;\n      const response = await fetch(this.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'moonshot-v1-8k',\n          messages: [{\n            role: 'user',\n            content: prompt\n          }],\n          temperature: 0.2\n        })\n      });\n      if (!response.ok) {\n        console.error('情绪识别API HTTP错误:', response.status, response.statusText);\n        if (response.status === 429) {\n          alert('请求太频繁啦，请稍等一下🌙');\n        }\n        return 'received';\n      }\n      const data = await response.json();\n      const reply = (_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : (_data$choices$$messag2 = _data$choices$$messag.content) === null || _data$choices$$messag2 === void 0 ? void 0 : _data$choices$$messag2.trim().toLowerCase();\n      let result = 'received';\n      if (reply !== null && reply !== void 0 && reply.includes('positive')) result = 'positive';else if (reply !== null && reply !== void 0 && reply.includes('negative')) result = 'negative';\n      this.cache[text] = result;\n      return result;\n    } catch (error) {\n      console.error('情绪识别出错:', error);\n      alert('网络错误，暂时无法识别情绪，请稍后再试🚀');\n      return 'received';\n    }\n  }\n}\n_EmotionAnalyzer = EmotionAnalyzer;\nEmotionAnalyzer.instance = void 0;","map":{"version":3,"names":["debounce","EmotionAnalyzer","constructor","apiKey","apiUrl","cache","debouncedAnalyze","text","actualAnalyze","getInstance","instance","analyzeEmotion","trim","console","log","safeAnalyze","Promise","resolve","then","result","_data$choices","_data$choices$","_data$choices$$messag","_data$choices$$messag2","prompt","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","temperature","ok","error","status","statusText","alert","data","json","reply","choices","message","toLowerCase","includes","_EmotionAnalyzer"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/src/utils/EmotionAnalyzer.ts"],"sourcesContent":["import { debounce } from 'lodash';\nimport { EmotionType } from '../types';\n\nexport class EmotionAnalyzer {\n  private static instance: EmotionAnalyzer;\n  private apiKey: string = 'sk-EixB2HOXxiXcawawgVO7JhHo45pfs7CdMOqJy2o7uMvQs8Kn'; // ✅ 填自己的\n  private apiUrl: string = 'https://api.moonshot.cn/v1/chat/completions';\n\n  private cache: Record<string, EmotionType> = {};\n\n  private constructor() {}\n\n  public static getInstance(): EmotionAnalyzer {\n    if (!EmotionAnalyzer.instance) {\n      EmotionAnalyzer.instance = new EmotionAnalyzer();\n    }\n    return EmotionAnalyzer.instance;\n  }\n\n  // 🔥 新版 analyzeEmotion，不直接debounce\n  public async analyzeEmotion(text: string): Promise<EmotionType> {\n    if (!text.trim()) return 'received';\n\n    if (this.cache[text]) {\n      console.log('[EmotionAnalyzer] 使用缓存');\n      return this.cache[text];\n    }\n\n    return await this.safeAnalyze(text);\n  }\n\n  // 这里内部做了防抖（debouncedActualAnalyze）\n  private debouncedAnalyze = debounce(async (text: string) => {\n    return await this.actualAnalyze(text);\n  }, 500);\n\n  private async safeAnalyze(text: string): Promise<EmotionType> {\n    return new Promise((resolve) => {\n      this.debouncedAnalyze(text).then(result => {\n        resolve(result ?? 'received');  // 万一debounce里返回undefined，兜底\n      });\n    });\n  }\n\n  private async actualAnalyze(text: string): Promise<EmotionType> {\n    try {\n      const prompt = `\n请判断下列中文内容的情绪类别，只返回：\n- positive（积极）\n- negative（消极）\n- received（中性）\n\n文本内容：\n\"${text}\"\n`;\n\n      const response = await fetch(this.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'moonshot-v1-8k',\n          messages: [{ role: 'user', content: prompt }],\n          temperature: 0.2,\n        }),\n      });\n\n      if (!response.ok) {\n        console.error('情绪识别API HTTP错误:', response.status, response.statusText);\n        if (response.status === 429) {\n          alert('请求太频繁啦，请稍等一下🌙');\n        }\n        return 'received';\n      }\n\n      const data = await response.json();\n      const reply = data.choices?.[0]?.message?.content?.trim().toLowerCase();\n\n      let result: EmotionType = 'received';\n      if (reply?.includes('positive')) result = 'positive';\n      else if (reply?.includes('negative')) result = 'negative';\n\n      this.cache[text] = result;\n      return result;\n\n    } catch (error) {\n      console.error('情绪识别出错:', error);\n      alert('网络错误，暂时无法识别情绪，请稍后再试🚀');\n      return 'received';\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}