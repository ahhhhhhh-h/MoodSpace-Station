{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  BaseStemmer,\n  Tokenizer,\n  defaultContainer,\n  containerBootstrap\n} = require('@nlpjs/core-loader');\nconst LangAll = require('@nlpjs/lang-all');\nconst cultures = {\n  ar: 'ar-ae',\n  // Arabic\n  bn: 'bn-bd',\n  // Bengali\n  ca: 'ca-es',\n  // Catalan\n  cs: 'cs-cz',\n  // Czech\n  da: 'da-dk',\n  // Danish\n  el: 'el-gr',\n  // Greek\n  en: 'en-us',\n  // English\n  eu: 'eu-es',\n  // Basque\n  fa: 'fa-ir',\n  // Farsi\n  ga: 'ga-ie',\n  // Irish\n  gl: 'gl-es',\n  // Galician\n  hi: 'hi-in',\n  // Hindi\n  hy: 'hy-am',\n  // Armenian\n  ja: 'ja-jp',\n  // Japanese\n  ko: 'ko-kr',\n  // Korean\n  pl: 'pl-pl',\n  // Polish\n  lt: 'lt-lt',\n  // Lithuanian\n  ne: 'ne-ne',\n  // Nepali\n  pt: 'pt-br',\n  // Portuguese\n  sr: 'sr-rs',\n  // Serbian\n  sv: 'sv-se',\n  // Swedish\n  ta: 'ta-in',\n  // Tamil\n  tl: 'tl-ph',\n  // Tagalog\n  uk: 'uk-ua',\n  // Ukraine\n  zh: 'zh-cn',\n  // Chinese\n  id: 'id-id',\n  // Indonesian,\n  ms: 'id-id' // Malay\n};\nclass NlpUtil {\n  /**\n   * Given a locale, get the 2 character one.\n   * @param {String} locale Locale of the language.\n   * @returns {String} Locale in 2 character length.\n   */\n  static getTruncatedLocale(locale) {\n    return locale ? locale.substr(0, 2).toLowerCase() : undefined;\n  }\n  static getStemmer(locale) {\n    if (!locale) {\n      return new BaseStemmer();\n    }\n    const name = `Stemmer${locale.slice(0, 1).toUpperCase()}${locale.slice(1)}`;\n    const Stemmer = LangAll[name];\n    return Stemmer ? new Stemmer() : new BaseStemmer();\n  }\n  static getTokenizer(locale) {\n    if (!locale) {\n      return new Tokenizer();\n    }\n    const name = `Tokenizer${locale.slice(0, 1).toUpperCase()}${locale.slice(1)}`;\n    const TokenizerClass = LangAll[name];\n    return TokenizerClass ? new TokenizerClass(undefined, true) : new Tokenizer(undefined, true);\n  }\n  static getCulture(locale) {\n    if (!locale) {\n      return 'en-us';\n    }\n    return cultures[locale] || `${locale}-${locale}`;\n  }\n}\nNlpUtil.useAutoStemmer = true;\nNlpUtil.autoStemmers = {};\nNlpUtil.useAlternative = {};\nNlpUtil.useNoneFeature = {\n  bn: false,\n  el: true,\n  en: true,\n  hi: false,\n  fa: false,\n  fr: true,\n  ru: true,\n  es: true,\n  gl: true,\n  it: true,\n  nl: true,\n  no: true,\n  pt: true,\n  pl: true,\n  sv: true,\n  tl: true,\n  id: true,\n  ja: false,\n  ar: false,\n  hy: false,\n  eu: true,\n  ca: true,\n  cs: true,\n  da: true,\n  fi: true,\n  de: true,\n  hu: true,\n  ga: true,\n  ro: true,\n  sl: true,\n  ta: false,\n  th: false,\n  tr: true,\n  zh: false\n};\nNlpUtil.tokenizers = {};\ncontainerBootstrap({}, true, defaultContainer);\ndefaultContainer.use(LangAll.LangAll);\nmodule.exports = NlpUtil;","map":{"version":3,"names":["BaseStemmer","Tokenizer","defaultContainer","containerBootstrap","require","LangAll","cultures","ar","bn","ca","cs","da","el","en","eu","fa","ga","gl","hi","hy","ja","ko","pl","lt","ne","pt","sr","sv","ta","tl","uk","zh","id","ms","NlpUtil","getTruncatedLocale","locale","substr","toLowerCase","undefined","getStemmer","name","slice","toUpperCase","Stemmer","getTokenizer","TokenizerClass","getCulture","useAutoStemmer","autoStemmers","useAlternative","useNoneFeature","fr","ru","es","it","nl","no","fi","de","hu","ro","sl","th","tr","tokenizers","use","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/node-nlp/src/nlp/nlp-util.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  BaseStemmer,\n  Tokenizer,\n  defaultContainer,\n  containerBootstrap,\n} = require('@nlpjs/core-loader');\nconst LangAll = require('@nlpjs/lang-all');\n\nconst cultures = {\n  ar: 'ar-ae', // Arabic\n  bn: 'bn-bd', // Bengali\n  ca: 'ca-es', // Catalan\n  cs: 'cs-cz', // Czech\n  da: 'da-dk', // Danish\n  el: 'el-gr', // Greek\n  en: 'en-us', // English\n  eu: 'eu-es', // Basque\n  fa: 'fa-ir', // Farsi\n  ga: 'ga-ie', // Irish\n  gl: 'gl-es', // Galician\n  hi: 'hi-in', // Hindi\n  hy: 'hy-am', // Armenian\n  ja: 'ja-jp', // Japanese\n  ko: 'ko-kr', // Korean\n  pl: 'pl-pl', // Polish\n  lt: 'lt-lt', // Lithuanian\n  ne: 'ne-ne', // Nepali\n  pt: 'pt-br', // Portuguese\n  sr: 'sr-rs', // Serbian\n  sv: 'sv-se', // Swedish\n  ta: 'ta-in', // Tamil\n  tl: 'tl-ph', // Tagalog\n  uk: 'uk-ua', // Ukraine\n  zh: 'zh-cn', // Chinese\n  id: 'id-id', // Indonesian,\n  ms: 'id-id', // Malay\n};\n\nclass NlpUtil {\n  /**\n   * Given a locale, get the 2 character one.\n   * @param {String} locale Locale of the language.\n   * @returns {String} Locale in 2 character length.\n   */\n  static getTruncatedLocale(locale) {\n    return locale ? locale.substr(0, 2).toLowerCase() : undefined;\n  }\n\n  static getStemmer(locale) {\n    if (!locale) {\n      return new BaseStemmer();\n    }\n    const name = `Stemmer${locale.slice(0, 1).toUpperCase()}${locale.slice(1)}`;\n    const Stemmer = LangAll[name];\n    return Stemmer ? new Stemmer() : new BaseStemmer();\n  }\n\n  static getTokenizer(locale) {\n    if (!locale) {\n      return new Tokenizer();\n    }\n    const name = `Tokenizer${locale.slice(0, 1).toUpperCase()}${locale.slice(\n      1\n    )}`;\n    const TokenizerClass = LangAll[name];\n    return TokenizerClass\n      ? new TokenizerClass(undefined, true)\n      : new Tokenizer(undefined, true);\n  }\n\n  static getCulture(locale) {\n    if (!locale) {\n      return 'en-us';\n    }\n    return cultures[locale] || `${locale}-${locale}`;\n  }\n}\n\nNlpUtil.useAutoStemmer = true;\nNlpUtil.autoStemmers = {};\n\nNlpUtil.useAlternative = {};\n\nNlpUtil.useNoneFeature = {\n  bn: false,\n  el: true,\n  en: true,\n  hi: false,\n  fa: false,\n  fr: true,\n  ru: true,\n  es: true,\n  gl: true,\n  it: true,\n  nl: true,\n  no: true,\n  pt: true,\n  pl: true,\n  sv: true,\n  tl: true,\n  id: true,\n  ja: false,\n  ar: false,\n  hy: false,\n  eu: true,\n  ca: true,\n  cs: true,\n  da: true,\n  fi: true,\n  de: true,\n  hu: true,\n  ga: true,\n  ro: true,\n  sl: true,\n  ta: false,\n  th: false,\n  tr: true,\n  zh: false,\n};\n\nNlpUtil.tokenizers = {};\n\ncontainerBootstrap({}, true, defaultContainer);\ndefaultContainer.use(LangAll.LangAll);\n\nmodule.exports = NlpUtil;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}