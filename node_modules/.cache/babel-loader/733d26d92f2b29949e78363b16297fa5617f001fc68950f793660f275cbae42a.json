{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  decomposeHangul,\n  codaMap,\n  composeHangul\n} = require('./hangul');\nconst {\n  initDicts,\n  names\n} = require('./korean-dictionary');\nfunction isName(word) {\n  initDicts();\n  if (names.Full[word] || names.Given[word]) {\n    return true;\n  }\n  if (word.length === 3 && names.Family[word[0]] && names.Given[word.slice(1, 3)]) {\n    return true;\n  }\n  if (word.length === 4 && names.Family[word.slice(0, 2)] && names.Given[word.slice(2, 4)]) {\n    return true;\n  }\n  return false;\n}\nfunction isKoreanNumber(word) {\n  return /^[일이삼사오육칠팔구천백십해경조억만]*[일이삼사오육칠팔구천백십해경조억만원배분초]$/.test(word);\n}\nfunction isKoreanNameVariation(word) {\n  if (isName(word)) {\n    return true;\n  }\n  if (word.length < 3 || word.length > 5) {\n    return false;\n  }\n  const decomposed = [...word].map(c => decomposeHangul(c));\n  const lastChar = decomposed[decomposed.length - 1];\n  if (!codaMap[lastChar.onset]) {\n    return false;\n  }\n  if (lastChar.onset === 'ㅇ' || lastChar.vowel !== 'ㅣ' || lastChar.coda !== ' ') {\n    return false;\n  }\n  if (decomposed[decomposed.length - 2].coda !== ' ') {\n    return false;\n  }\n  const recovered = decomposed.map((hc, i) => {\n    if (i === word.length - 1) {\n      return '이';\n    }\n    if (i === word.length - 2) {\n      return composeHangul(hc.onset, hc.vowel, lastChar.onset);\n    }\n    return composeHangul(hc.onset, hc.vowel, hc.coda);\n  }).join('');\n  return isName(recovered) || isName(recovered.slice(0, -1));\n}\nmodule.exports = {\n  isName,\n  isKoreanNumber,\n  isKoreanNameVariation\n};","map":{"version":3,"names":["decomposeHangul","codaMap","composeHangul","require","initDicts","names","isName","word","Full","Given","length","Family","slice","isKoreanNumber","test","isKoreanNameVariation","decomposed","map","c","lastChar","onset","vowel","coda","recovered","hc","i","join","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-ko/src/korean-substantive.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { decomposeHangul, codaMap, composeHangul } = require('./hangul');\nconst { initDicts, names } = require('./korean-dictionary');\n\nfunction isName(word) {\n  initDicts();\n  if (names.Full[word] || names.Given[word]) {\n    return true;\n  }\n  if (\n    word.length === 3 &&\n    names.Family[word[0]] &&\n    names.Given[word.slice(1, 3)]\n  ) {\n    return true;\n  }\n  if (\n    word.length === 4 &&\n    names.Family[word.slice(0, 2)] &&\n    names.Given[word.slice(2, 4)]\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction isKoreanNumber(word) {\n  return /^[일이삼사오육칠팔구천백십해경조억만]*[일이삼사오육칠팔구천백십해경조억만원배분초]$/.test(\n    word\n  );\n}\n\nfunction isKoreanNameVariation(word) {\n  if (isName(word)) {\n    return true;\n  }\n  if (word.length < 3 || word.length > 5) {\n    return false;\n  }\n  const decomposed = [...word].map((c) => decomposeHangul(c));\n  const lastChar = decomposed[decomposed.length - 1];\n  if (!codaMap[lastChar.onset]) {\n    return false;\n  }\n  if (\n    lastChar.onset === 'ㅇ' ||\n    lastChar.vowel !== 'ㅣ' ||\n    lastChar.coda !== ' '\n  ) {\n    return false;\n  }\n  if (decomposed[decomposed.length - 2].coda !== ' ') {\n    return false;\n  }\n  const recovered = decomposed\n    .map((hc, i) => {\n      if (i === word.length - 1) {\n        return '이';\n      }\n      if (i === word.length - 2) {\n        return composeHangul(hc.onset, hc.vowel, lastChar.onset);\n      }\n      return composeHangul(hc.onset, hc.vowel, hc.coda);\n    })\n    .join('');\n  return isName(recovered) || isName(recovered.slice(0, -1));\n}\n\nmodule.exports = {\n  isName,\n  isKoreanNumber,\n  isKoreanNameVariation,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}