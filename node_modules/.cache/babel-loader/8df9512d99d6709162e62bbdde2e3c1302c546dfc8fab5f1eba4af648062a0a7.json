{"ast":null,"code":"var _EmotionAnalyzer;export class EmotionAnalyzer{constructor(){// ✅ 这里填你的 DeepSeek 真实 API Key\nthis.apiKey='sk-b7d7e06604e44a5e965959754c904de5';// ✅ DeepSeek的标准接口地址（基本和OpenAI一样）\nthis.apiUrl='https://api.deepseek.com/v1/chat/completions';}static getInstance(){if(!EmotionAnalyzer.instance){EmotionAnalyzer.instance=new EmotionAnalyzer();}return EmotionAnalyzer.instance;}async analyzeEmotion(text){try{var _data$choices,_data$choices$,_data$choices$$messag,_data$choices$$messag2;if(!text.trim()){return'received';}const prompt=`\n请判断下列中文内容的情绪类别，只返回以下三种英文结果：\n- positive（积极）\n- negative（消极）\n- received（中性）\n\n不要输出多余文字，只返回其中一个词即可。\n\n文本内容：\n\"${text}\"\n`;const response=await fetch(this.apiUrl,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${this.apiKey}`},body:JSON.stringify({model:'deepseek-chat',// DeepSeek使用的基础对话模型\nmessages:[{role:'user',content:prompt}],temperature:0.2,// 让回答更稳定，不要乱说\nmax_tokens:20// 控制返回内容短一点\n})});if(!response.ok){console.error('DeepSeek情绪识别API HTTP错误:',response.status,response.statusText);return'received';}const data=await response.json();const reply=(_data$choices=data.choices)===null||_data$choices===void 0?void 0:(_data$choices$=_data$choices[0])===null||_data$choices$===void 0?void 0:(_data$choices$$messag=_data$choices$.message)===null||_data$choices$$messag===void 0?void 0:(_data$choices$$messag2=_data$choices$$messag.content)===null||_data$choices$$messag2===void 0?void 0:_data$choices$$messag2.trim().toLowerCase();// 根据DeepSeek返回的文本，判断情绪类型\nif(reply!==null&&reply!==void 0&&reply.includes('positive')){return'positive';}if(reply!==null&&reply!==void 0&&reply.includes('negative')){return'negative';}return'received';}catch(error){console.error('DeepSeek情绪识别出错:',error);return'received';}}}_EmotionAnalyzer=EmotionAnalyzer;EmotionAnalyzer.instance=void 0;","map":{"version":3,"names":["EmotionAnalyzer","constructor","apiKey","apiUrl","getInstance","instance","analyzeEmotion","text","_data$choices","_data$choices$","_data$choices$$messag","_data$choices$$messag2","trim","prompt","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","temperature","max_tokens","ok","console","error","status","statusText","data","json","reply","choices","message","toLowerCase","includes","_EmotionAnalyzer"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/src/utils/EmotionAnalyzer.ts"],"sourcesContent":["import { EmotionType } from '../types';\n\nexport class EmotionAnalyzer {\n  private static instance: EmotionAnalyzer;\n\n  // ✅ 这里填你的 DeepSeek 真实 API Key\n  private apiKey: string = 'sk-b7d7e06604e44a5e965959754c904de5';\n\n  // ✅ DeepSeek的标准接口地址（基本和OpenAI一样）\n  private apiUrl: string = 'https://api.deepseek.com/v1/chat/completions';\n\n  private constructor() {}\n\n  public static getInstance(): EmotionAnalyzer {\n    if (!EmotionAnalyzer.instance) {\n      EmotionAnalyzer.instance = new EmotionAnalyzer();\n    }\n    return EmotionAnalyzer.instance;\n  }\n\n  public async analyzeEmotion(text: string): Promise<EmotionType> {\n    try {\n      if (!text.trim()) {\n        return 'received';\n      }\n\n      const prompt = `\n请判断下列中文内容的情绪类别，只返回以下三种英文结果：\n- positive（积极）\n- negative（消极）\n- received（中性）\n\n不要输出多余文字，只返回其中一个词即可。\n\n文本内容：\n\"${text}\"\n`;\n\n      const response = await fetch(this.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'deepseek-chat',  // DeepSeek使用的基础对话模型\n          messages: [{ role: 'user', content: prompt }],\n          temperature: 0.2,         // 让回答更稳定，不要乱说\n          max_tokens: 20             // 控制返回内容短一点\n        }),\n      });\n\n      if (!response.ok) {\n        console.error('DeepSeek情绪识别API HTTP错误:', response.status, response.statusText);\n        return 'received';\n      }\n\n      const data = await response.json();\n      const reply = data.choices?.[0]?.message?.content?.trim().toLowerCase();\n\n      // 根据DeepSeek返回的文本，判断情绪类型\n      if (reply?.includes('positive')) {\n        return 'positive';\n      }\n      if (reply?.includes('negative')) {\n        return 'negative';\n      }\n      return 'received';\n    } catch (error) {\n      console.error('DeepSeek情绪识别出错:', error);\n      return 'received';\n    }\n  }\n}\n"],"mappings":"qBAEA,MAAO,MAAM,CAAAA,eAAgB,CASnBC,WAAWA,CAAA,CAAG,CANtB;AAAA,KACQC,MAAM,CAAW,qCAAqC,CAE9D;AAAA,KACQC,MAAM,CAAW,8CAA8C,CAEhD,CAEvB,MAAc,CAAAC,WAAWA,CAAA,CAAoB,CAC3C,GAAI,CAACJ,eAAe,CAACK,QAAQ,CAAE,CAC7BL,eAAe,CAACK,QAAQ,CAAG,GAAI,CAAAL,eAAe,CAAC,CAAC,CAClD,CACA,MAAO,CAAAA,eAAe,CAACK,QAAQ,CACjC,CAEA,KAAa,CAAAC,cAAcA,CAACC,IAAY,CAAwB,CAC9D,GAAI,KAAAC,aAAA,CAAAC,cAAA,CAAAC,qBAAA,CAAAC,sBAAA,CACF,GAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,CAAC,CAAE,CAChB,MAAO,UAAU,CACnB,CAEA,KAAM,CAAAC,MAAM,CAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAGN,IAAI;AACP,CAAC,CAEK,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,IAAI,CAACZ,MAAM,CAAE,CACxCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UAAU,IAAI,CAACf,MAAM,EACxC,CAAC,CACDgB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,KAAK,CAAE,eAAe,CAAG;AACzBC,QAAQ,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,OAAO,CAAEX,MAAO,CAAC,CAAC,CAC7CY,WAAW,CAAE,GAAG,CAAU;AAC1BC,UAAU,CAAE,EAAe;AAC7B,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACZ,QAAQ,CAACa,EAAE,CAAE,CAChBC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAEf,QAAQ,CAACgB,MAAM,CAAEhB,QAAQ,CAACiB,UAAU,CAAC,CAC9E,MAAO,UAAU,CACnB,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAlB,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,KAAK,EAAA1B,aAAA,CAAGwB,IAAI,CAACG,OAAO,UAAA3B,aAAA,kBAAAC,cAAA,CAAZD,aAAA,CAAe,CAAC,CAAC,UAAAC,cAAA,kBAAAC,qBAAA,CAAjBD,cAAA,CAAmB2B,OAAO,UAAA1B,qBAAA,kBAAAC,sBAAA,CAA1BD,qBAAA,CAA4Bc,OAAO,UAAAb,sBAAA,iBAAnCA,sBAAA,CAAqCC,IAAI,CAAC,CAAC,CAACyB,WAAW,CAAC,CAAC,CAEvE;AACA,GAAIH,KAAK,SAALA,KAAK,WAALA,KAAK,CAAEI,QAAQ,CAAC,UAAU,CAAC,CAAE,CAC/B,MAAO,UAAU,CACnB,CACA,GAAIJ,KAAK,SAALA,KAAK,WAALA,KAAK,CAAEI,QAAQ,CAAC,UAAU,CAAC,CAAE,CAC/B,MAAO,UAAU,CACnB,CACA,MAAO,UAAU,CACnB,CAAE,MAAOT,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,MAAO,UAAU,CACnB,CACF,CACF,CAACU,gBAAA,CAvEYvC,eAAe,CAAfA,eAAe,CACXK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}