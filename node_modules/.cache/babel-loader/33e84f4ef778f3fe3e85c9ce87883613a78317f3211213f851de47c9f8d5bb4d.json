{"ast":null,"code":"var _EmotionAnalyzer;\nexport class EmotionAnalyzer {\n  constructor() {\n    this.apiKey = 'sk-EixB2HOXxiXcawawgVO7JhHo45pfs7CdMOqJy2o7uMvQs8Kn';\n    // 🔥 填你自己的API Key\n    this.apiUrl = 'https://api.moonshot.cn/v1/chat/completions';\n  }\n  static getInstance() {\n    if (!EmotionAnalyzer.instance) {\n      EmotionAnalyzer.instance = new EmotionAnalyzer();\n    }\n    return EmotionAnalyzer.instance;\n  }\n  async analyzeEmotion(text) {\n    try {\n      var _data$choices$0$messa;\n      const prompt = `\n请判断下列中文内容的情绪类别，只返回：\n- positive（积极）\n- negative（消极）\n- received（中性）\n\n文本内容：\n\"${text}\"\n`;\n      const response = await fetch(this.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'moonshot-v1-8k',\n          messages: [{\n            role: 'user',\n            content: prompt\n          }],\n          temperature: 0.2\n        })\n      });\n      if (!response.ok) {\n        console.error('情绪识别API HTTP错误:', response.status, response.statusText);\n        return 'received';\n      }\n      const data = await response.json();\n      if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n        console.error('情绪识别API返回异常:', data);\n        return 'received';\n      }\n      const reply = (_data$choices$0$messa = data.choices[0].message.content) === null || _data$choices$0$messa === void 0 ? void 0 : _data$choices$0$messa.trim().toLowerCase();\n      if (reply !== null && reply !== void 0 && reply.includes('positive')) return 'positive';\n      if (reply !== null && reply !== void 0 && reply.includes('negative')) return 'negative';\n      return 'received';\n    } catch (error) {\n      console.error('情绪识别出错:', error);\n      return 'received';\n    }\n  }\n}\n_EmotionAnalyzer = EmotionAnalyzer;\nEmotionAnalyzer.instance = void 0;","map":{"version":3,"names":["EmotionAnalyzer","constructor","apiKey","apiUrl","getInstance","instance","analyzeEmotion","text","_data$choices$0$messa","prompt","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","temperature","ok","console","error","status","statusText","data","json","choices","message","reply","trim","toLowerCase","includes","_EmotionAnalyzer"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/src/utils/EmotionAnalyzer.ts"],"sourcesContent":["import { EmotionType } from '../types';\n\nexport class EmotionAnalyzer {\n  private static instance: EmotionAnalyzer;\n  private apiKey: string = 'sk-EixB2HOXxiXcawawgVO7JhHo45pfs7CdMOqJy2o7uMvQs8Kn'; // 🔥 填你自己的API Key\n  private apiUrl: string = 'https://api.moonshot.cn/v1/chat/completions';\n\n  private constructor() {}\n\n  public static getInstance(): EmotionAnalyzer {\n    if (!EmotionAnalyzer.instance) {\n      EmotionAnalyzer.instance = new EmotionAnalyzer();\n    }\n    return EmotionAnalyzer.instance;\n  }\n\n  public async analyzeEmotion(text: string): Promise<EmotionType> {\n    try {\n      const prompt = `\n请判断下列中文内容的情绪类别，只返回：\n- positive（积极）\n- negative（消极）\n- received（中性）\n\n文本内容：\n\"${text}\"\n`;\n\n      const response = await fetch(this.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`,\n        },\n        body: JSON.stringify({\n          model: 'moonshot-v1-8k',\n          messages: [{ role: 'user', content: prompt }],\n          temperature: 0.2,\n        }),\n      });\n\n      if (!response.ok) {\n        console.error('情绪识别API HTTP错误:', response.status, response.statusText);\n        return 'received';\n      }\n\n      const data = await response.json();\n      if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n        console.error('情绪识别API返回异常:', data);\n        return 'received';\n      }\n      const reply = data.choices[0].message.content?.trim().toLowerCase();\n\n      if (reply?.includes('positive')) return 'positive';\n      if (reply?.includes('negative')) return 'negative';\n      return 'received';\n    } catch (error) {\n      console.error('情绪识别出错:', error);\n      return 'received';\n    }\n  }\n}\n"],"mappings":";AAEA,OAAO,MAAMA,eAAe,CAAC;EAKnBC,WAAWA,CAAA,EAAG;IAAA,KAHdC,MAAM,GAAW,qDAAqD;IAAE;IAAA,KACxEC,MAAM,GAAW,6CAA6C;EAE/C;EAEvB,OAAcC,WAAWA,CAAA,EAAoB;IAC3C,IAAI,CAACJ,eAAe,CAACK,QAAQ,EAAE;MAC7BL,eAAe,CAACK,QAAQ,GAAG,IAAIL,eAAe,CAAC,CAAC;IAClD;IACA,OAAOA,eAAe,CAACK,QAAQ;EACjC;EAEA,MAAaC,cAAcA,CAACC,IAAY,EAAwB;IAC9D,IAAI;MAAA,IAAAC,qBAAA;MACF,MAAMC,MAAM,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAGF,IAAI;AACP,CAAC;MAEK,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,IAAI,CAACR,MAAM,EAAE;QACxCS,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAU,IAAI,CAACX,MAAM;QACxC,CAAC;QACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,gBAAgB;UACvBC,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEX;UAAO,CAAC,CAAC;UAC7CY,WAAW,EAAE;QACf,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEd,QAAQ,CAACe,MAAM,EAAEf,QAAQ,CAACgB,UAAU,CAAC;QACtE,OAAO,UAAU;MACnB;MAEA,MAAMC,IAAI,GAAG,MAAMjB,QAAQ,CAACkB,IAAI,CAAC,CAAC;MAClC,IAAI,CAACD,IAAI,CAACE,OAAO,IAAI,CAACF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,IAAI,CAACF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;QACjEP,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEG,IAAI,CAAC;QACnC,OAAO,UAAU;MACnB;MACA,MAAMI,KAAK,IAAAvB,qBAAA,GAAGmB,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACV,OAAO,cAAAZ,qBAAA,uBAA/BA,qBAAA,CAAiCwB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAEnE,IAAIF,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEG,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAO,UAAU;MAClD,IAAIH,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEG,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAO,UAAU;MAClD,OAAO,UAAU;IACnB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B,OAAO,UAAU;IACnB;EACF;AACF;AAACW,gBAAA,GA3DYnC,eAAe;AAAfA,eAAe,CACXK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}