{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  Normalizer\n} = require('@nlpjs/core');\nconst {\n  converters,\n  fixCompositeSymbols\n} = require('./helper');\nclass NormalizerJa extends Normalizer {\n  constructor(container) {\n    super(container);\n    this.name = 'normalizer-ja';\n  }\n  normalize(text) {\n    let str = text.replace(/(..)々々/g, '$1$1').replace(/(.)々/g, '$1$1');\n    str = converters.normalize(str);\n    str = converters.fixFullwidthKana(str);\n    str = fixCompositeSymbols(str);\n    return str;\n  }\n  run(srcInput) {\n    const input = srcInput;\n    input.text = this.normalize(input.text, input);\n    return input;\n  }\n}\nmodule.exports = NormalizerJa;","map":{"version":3,"names":["Normalizer","require","converters","fixCompositeSymbols","NormalizerJa","constructor","container","name","normalize","text","str","replace","fixFullwidthKana","run","srcInput","input","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/lang-ja/src/normalizer-ja.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Normalizer } = require('@nlpjs/core');\nconst { converters, fixCompositeSymbols } = require('./helper');\n\nclass NormalizerJa extends Normalizer {\n  constructor(container) {\n    super(container);\n    this.name = 'normalizer-ja';\n  }\n\n  normalize(text) {\n    let str = text.replace(/(..)々々/g, '$1$1').replace(/(.)々/g, '$1$1');\n    str = converters.normalize(str);\n    str = converters.fixFullwidthKana(str);\n    str = fixCompositeSymbols(str);\n    return str;\n  }\n\n  run(srcInput) {\n    const input = srcInput;\n    input.text = this.normalize(input.text, input);\n    return input;\n  }\n}\n\nmodule.exports = NormalizerJa;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC7C,MAAM;EAAEC,UAAU;EAAEC;AAAoB,CAAC,GAAGF,OAAO,CAAC,UAAU,CAAC;AAE/D,MAAMG,YAAY,SAASJ,UAAU,CAAC;EACpCK,WAAWA,CAACC,SAAS,EAAE;IACrB,KAAK,CAACA,SAAS,CAAC;IAChB,IAAI,CAACC,IAAI,GAAG,eAAe;EAC7B;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,IAAIC,GAAG,GAAGD,IAAI,CAACE,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAACA,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IAClED,GAAG,GAAGR,UAAU,CAACM,SAAS,CAACE,GAAG,CAAC;IAC/BA,GAAG,GAAGR,UAAU,CAACU,gBAAgB,CAACF,GAAG,CAAC;IACtCA,GAAG,GAAGP,mBAAmB,CAACO,GAAG,CAAC;IAC9B,OAAOA,GAAG;EACZ;EAEAG,GAAGA,CAACC,QAAQ,EAAE;IACZ,MAAMC,KAAK,GAAGD,QAAQ;IACtBC,KAAK,CAACN,IAAI,GAAG,IAAI,CAACD,SAAS,CAACO,KAAK,CAACN,IAAI,EAAEM,KAAK,CAAC;IAC9C,OAAOA,KAAK;EACd;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}