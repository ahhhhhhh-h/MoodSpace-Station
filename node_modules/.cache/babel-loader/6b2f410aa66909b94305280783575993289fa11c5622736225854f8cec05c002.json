{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst ConversationContext = require('./conversation-context');\n\n/**\n * In memory conversation context manager.\n */\nclass MemoryConversationContext extends ConversationContext {\n  /**\n   * Constructor of the class.\n   * @param {Object} settings Settings for the instance.\n   */\n  constructor(settings) {\n    super(settings);\n    this.conversationContexts = {};\n  }\n\n  /**\n   * Gets the conversation context from the session.\n   * @param {Object} session Chatbot session of the conversation.\n   * @returns {Promise<Object>} Promise to resolve the conversation context.\n   */\n  getConversationContext(session) {\n    return new Promise((resolve, reject) => {\n      const conversationId = this.getConversationId(session);\n      if (!conversationId) {\n        reject(new Error('No conversation id found'));\n      }\n      if (!this.conversationContexts[conversationId]) {\n        this.conversationContexts[conversationId] = {};\n      }\n      resolve(this.conversationContexts[conversationId]);\n    });\n  }\n  setConversationContext(session, context) {\n    return new Promise((resolve, reject) => {\n      const conversationId = this.getConversationId(session);\n      if (!conversationId) {\n        reject(new Error('No conversation id found'));\n      }\n      this.conversationContexts[conversationId] = context;\n      resolve();\n    });\n  }\n}\nmodule.exports = MemoryConversationContext;","map":{"version":3,"names":["ConversationContext","require","MemoryConversationContext","constructor","settings","conversationContexts","getConversationContext","session","Promise","resolve","reject","conversationId","getConversationId","Error","setConversationContext","context","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/node-nlp/src/recognizer/memory-conversation-context.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst ConversationContext = require('./conversation-context');\n\n/**\n * In memory conversation context manager.\n */\nclass MemoryConversationContext extends ConversationContext {\n  /**\n   * Constructor of the class.\n   * @param {Object} settings Settings for the instance.\n   */\n  constructor(settings) {\n    super(settings);\n    this.conversationContexts = {};\n  }\n\n  /**\n   * Gets the conversation context from the session.\n   * @param {Object} session Chatbot session of the conversation.\n   * @returns {Promise<Object>} Promise to resolve the conversation context.\n   */\n  getConversationContext(session) {\n    return new Promise((resolve, reject) => {\n      const conversationId = this.getConversationId(session);\n      if (!conversationId) {\n        reject(new Error('No conversation id found'));\n      }\n      if (!this.conversationContexts[conversationId]) {\n        this.conversationContexts[conversationId] = {};\n      }\n      resolve(this.conversationContexts[conversationId]);\n    });\n  }\n\n  setConversationContext(session, context) {\n    return new Promise((resolve, reject) => {\n      const conversationId = this.getConversationId(session);\n      if (!conversationId) {\n        reject(new Error('No conversation id found'));\n      }\n      this.conversationContexts[conversationId] = context;\n      resolve();\n    });\n  }\n}\n\nmodule.exports = MemoryConversationContext;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;;AAE7D;AACA;AACA;AACA,MAAMC,yBAAyB,SAASF,mBAAmB,CAAC;EAC1D;AACF;AACA;AACA;EACEG,WAAWA,CAACC,QAAQ,EAAE;IACpB,KAAK,CAACA,QAAQ,CAAC;IACf,IAAI,CAACC,oBAAoB,GAAG,CAAC,CAAC;EAChC;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CAACC,OAAO,EAAE;IAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAACL,OAAO,CAAC;MACtD,IAAI,CAACI,cAAc,EAAE;QACnBD,MAAM,CAAC,IAAIG,KAAK,CAAC,0BAA0B,CAAC,CAAC;MAC/C;MACA,IAAI,CAAC,IAAI,CAACR,oBAAoB,CAACM,cAAc,CAAC,EAAE;QAC9C,IAAI,CAACN,oBAAoB,CAACM,cAAc,CAAC,GAAG,CAAC,CAAC;MAChD;MACAF,OAAO,CAAC,IAAI,CAACJ,oBAAoB,CAACM,cAAc,CAAC,CAAC;IACpD,CAAC,CAAC;EACJ;EAEAG,sBAAsBA,CAACP,OAAO,EAAEQ,OAAO,EAAE;IACvC,OAAO,IAAIP,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAACL,OAAO,CAAC;MACtD,IAAI,CAACI,cAAc,EAAE;QACnBD,MAAM,CAAC,IAAIG,KAAK,CAAC,0BAA0B,CAAC,CAAC;MAC/C;MACA,IAAI,CAACR,oBAAoB,CAACM,cAAc,CAAC,GAAGI,OAAO;MACnDN,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;EACJ;AACF;AAEAO,MAAM,CAACC,OAAO,GAAGf,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}