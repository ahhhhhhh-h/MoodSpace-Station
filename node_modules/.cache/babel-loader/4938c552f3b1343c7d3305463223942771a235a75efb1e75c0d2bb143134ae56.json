{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst {\n  Clonable\n} = require('@nlpjs/core');\nclass NlgManager extends Clonable {\n  constructor(settings = {}, container) {\n    super({\n      settings: {},\n      container: settings.container || container\n    }, container);\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'nlg-manager';\n    }\n    this.registerDefault();\n    this.applySettings(this.settings, this.container.getConfiguration(this.settings.tag));\n    this.responses = {};\n    this.applySettings(this, {\n      pipelineFind: this.getPipeline(`${this.settings.tag}-find`)\n    });\n  }\n  registerDefault() {\n    this.container.registerConfiguration('nlg-manager', {}, false);\n  }\n  findAllAnswers(srcInput) {\n    const input = srcInput;\n    if (this.responses[input.locale]) {\n      input.answers = this.responses[input.locale][input.intent] || [];\n    } else {\n      input.answers = [];\n    }\n    return input;\n  }\n  filterAnswers(srcInput) {\n    const input = srcInput;\n    const {\n      answers\n    } = input;\n    if (answers && answers.length) {\n      const evaluator = this.container.get('Evaluator');\n      if (evaluator) {\n        const context = input.context || {};\n        const filtered = [];\n        for (let i = 0; i < answers.length; i += 1) {\n          const answer = answers[i];\n          if (answer.opts) {\n            const condition = typeof answer.opts === 'string' ? answer.opts : answer.opts.condition;\n            if (condition) {\n              if (evaluator.evaluate(condition, context) === true) {\n                filtered.push(answer);\n              }\n            } else {\n              filtered.push(answer);\n            }\n          } else {\n            filtered.push(answer);\n          }\n        }\n        input.answers = filtered;\n      }\n    }\n    return input;\n  }\n  chooseRandom(srcInput) {\n    const input = srcInput;\n    const {\n      answers\n    } = input;\n    if (answers && answers.length) {\n      input.answer = answers[Math.floor(Math.random() * answers.length)].answer;\n    }\n    return input;\n  }\n  renderText(srcText, context) {\n    if (!srcText) {\n      return srcText;\n    }\n    let text = srcText.answer || srcText;\n    let matchFound;\n    do {\n      const match = /\\((?:[^()]+)\\|(?:[^()]+)\\)/g.exec(text);\n      if (match) {\n        for (let i = 0; i < match.length; i += 1) {\n          const source = match[i];\n          const options = source.substring(1, source.length - 1).split('|');\n          text = text.replace(source, options[Math.floor(Math.random() * options.length)]);\n        }\n        matchFound = true;\n      } else {\n        matchFound = false;\n      }\n    } while (matchFound);\n    if (srcText.answer) {\n      srcText.answer = text;\n    } else {\n      srcText = text;\n    }\n    const template = this.container.get('Template');\n    if (template && context) {\n      return template.compile(srcText, context);\n    }\n    return srcText;\n  }\n  renderRandom(srcInput) {\n    const input = srcInput;\n    const {\n      answers,\n      context\n    } = input;\n    for (let i = 0; i < answers.length; i += 1) {\n      answers[i] = this.renderText(answers[i], context);\n    }\n    return input;\n  }\n  indexOfAnswer(locale, intent, answer, opts) {\n    if (!this.responses[locale]) {\n      return -1;\n    }\n    if (!this.responses[locale][intent]) {\n      return -1;\n    }\n    const potential = this.responses[locale][intent];\n    for (let i = 0; i < potential.length; i += 1) {\n      const response = potential[i];\n      if (response.answer === answer && JSON.stringify(response.opts) === JSON.stringify(opts)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  add(locale, intent, answer, opts) {\n    const index = this.indexOfAnswer(locale, intent, answer, opts);\n    if (index !== -1) {\n      return this.responses[locale][intent][index];\n    }\n    if (!this.responses[locale]) {\n      this.responses[locale] = {};\n    }\n    if (!this.responses[locale][intent]) {\n      this.responses[locale][intent] = [];\n    }\n    const obj = {\n      answer,\n      opts\n    };\n    this.responses[locale][intent].push(obj);\n    return obj;\n  }\n  remove(locale, intent, answer, opts) {\n    const index = this.indexOfAnswer(locale, intent, answer, opts);\n    if (index !== -1) {\n      this.responses[locale][intent].splice(index, 1);\n    }\n  }\n  defaultPipelineFind(input) {\n    let output = this.findAllAnswers(input);\n    output = this.filterAnswers(output);\n    output = this.renderRandom(output);\n    output = this.chooseRandom(output);\n    return output;\n  }\n  find(locale, intent, context, settings) {\n    const input = {\n      locale,\n      intent,\n      context,\n      settings: settings || this.settings\n    };\n    if (this.pipelineFind) {\n      return this.runPipeline(input, this.pipelineFind);\n    }\n    return this.defaultPipelineFind(input);\n  }\n  run(srcInput, settings) {\n    return this.find(srcInput.locale, srcInput.intent, srcInput.context, settings);\n  }\n  toJSON() {\n    const result = {\n      settings: {\n        ...this.settings\n      },\n      responses: this.responses\n    };\n    delete result.settings.container;\n    return result;\n  }\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.responses = json.responses;\n  }\n}\nmodule.exports = NlgManager;","map":{"version":3,"names":["Clonable","require","NlgManager","constructor","settings","container","applySettings","tag","registerDefault","getConfiguration","responses","pipelineFind","getPipeline","registerConfiguration","findAllAnswers","srcInput","input","locale","answers","intent","filterAnswers","length","evaluator","get","context","filtered","i","answer","opts","condition","evaluate","push","chooseRandom","Math","floor","random","renderText","srcText","text","matchFound","match","exec","source","options","substring","split","replace","template","compile","renderRandom","indexOfAnswer","potential","response","JSON","stringify","add","index","obj","remove","splice","defaultPipelineFind","output","find","runPipeline","run","toJSON","result","fromJSON","json","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/nlg/src/nlg-manager.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst { Clonable } = require('@nlpjs/core');\n\nclass NlgManager extends Clonable {\n  constructor(settings = {}, container) {\n    super(\n      {\n        settings: {},\n        container: settings.container || container,\n      },\n      container\n    );\n    this.applySettings(this.settings, settings);\n    if (!this.settings.tag) {\n      this.settings.tag = 'nlg-manager';\n    }\n    this.registerDefault();\n    this.applySettings(\n      this.settings,\n      this.container.getConfiguration(this.settings.tag)\n    );\n    this.responses = {};\n    this.applySettings(this, {\n      pipelineFind: this.getPipeline(`${this.settings.tag}-find`),\n    });\n  }\n\n  registerDefault() {\n    this.container.registerConfiguration('nlg-manager', {}, false);\n  }\n\n  findAllAnswers(srcInput) {\n    const input = srcInput;\n    if (this.responses[input.locale]) {\n      input.answers = this.responses[input.locale][input.intent] || [];\n    } else {\n      input.answers = [];\n    }\n    return input;\n  }\n\n  filterAnswers(srcInput) {\n    const input = srcInput;\n    const { answers } = input;\n    if (answers && answers.length) {\n      const evaluator = this.container.get('Evaluator');\n      if (evaluator) {\n        const context = input.context || {};\n        const filtered = [];\n        for (let i = 0; i < answers.length; i += 1) {\n          const answer = answers[i];\n          if (answer.opts) {\n            const condition =\n              typeof answer.opts === 'string'\n                ? answer.opts\n                : answer.opts.condition;\n            if (condition) {\n              if (evaluator.evaluate(condition, context) === true) {\n                filtered.push(answer);\n              }\n            } else {\n              filtered.push(answer);\n            }\n          } else {\n            filtered.push(answer);\n          }\n        }\n        input.answers = filtered;\n      }\n    }\n    return input;\n  }\n\n  chooseRandom(srcInput) {\n    const input = srcInput;\n    const { answers } = input;\n    if (answers && answers.length) {\n      input.answer = answers[Math.floor(Math.random() * answers.length)].answer;\n    }\n    return input;\n  }\n\n  renderText(srcText, context) {\n    if (!srcText) {\n      return srcText;\n    }\n    let text = srcText.answer || srcText;\n    let matchFound;\n    do {\n      const match = /\\((?:[^()]+)\\|(?:[^()]+)\\)/g.exec(text);\n      if (match) {\n        for (let i = 0; i < match.length; i += 1) {\n          const source = match[i];\n          const options = source.substring(1, source.length - 1).split('|');\n          text = text.replace(\n            source,\n            options[Math.floor(Math.random() * options.length)]\n          );\n        }\n        matchFound = true;\n      } else {\n        matchFound = false;\n      }\n    } while (matchFound);\n    if (srcText.answer) {\n      srcText.answer = text;\n    } else {\n      srcText = text;\n    }\n    const template = this.container.get('Template');\n    if (template && context) {\n      return template.compile(srcText, context);\n    }\n    return srcText;\n  }\n\n  renderRandom(srcInput) {\n    const input = srcInput;\n    const { answers, context } = input;\n    for (let i = 0; i < answers.length; i += 1) {\n      answers[i] = this.renderText(answers[i], context);\n    }\n    return input;\n  }\n\n  indexOfAnswer(locale, intent, answer, opts) {\n    if (!this.responses[locale]) {\n      return -1;\n    }\n    if (!this.responses[locale][intent]) {\n      return -1;\n    }\n    const potential = this.responses[locale][intent];\n    for (let i = 0; i < potential.length; i += 1) {\n      const response = potential[i];\n      if (\n        response.answer === answer &&\n        JSON.stringify(response.opts) === JSON.stringify(opts)\n      ) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  add(locale, intent, answer, opts) {\n    const index = this.indexOfAnswer(locale, intent, answer, opts);\n    if (index !== -1) {\n      return this.responses[locale][intent][index];\n    }\n    if (!this.responses[locale]) {\n      this.responses[locale] = {};\n    }\n    if (!this.responses[locale][intent]) {\n      this.responses[locale][intent] = [];\n    }\n    const obj = { answer, opts };\n    this.responses[locale][intent].push(obj);\n    return obj;\n  }\n\n  remove(locale, intent, answer, opts) {\n    const index = this.indexOfAnswer(locale, intent, answer, opts);\n    if (index !== -1) {\n      this.responses[locale][intent].splice(index, 1);\n    }\n  }\n\n  defaultPipelineFind(input) {\n    let output = this.findAllAnswers(input);\n    output = this.filterAnswers(output);\n    output = this.renderRandom(output);\n    output = this.chooseRandom(output);\n    return output;\n  }\n\n  find(locale, intent, context, settings) {\n    const input = {\n      locale,\n      intent,\n      context,\n      settings: settings || this.settings,\n    };\n    if (this.pipelineFind) {\n      return this.runPipeline(input, this.pipelineFind);\n    }\n    return this.defaultPipelineFind(input);\n  }\n\n  run(srcInput, settings) {\n    return this.find(\n      srcInput.locale,\n      srcInput.intent,\n      srcInput.context,\n      settings\n    );\n  }\n\n  toJSON() {\n    const result = {\n      settings: { ...this.settings },\n      responses: this.responses,\n    };\n    delete result.settings.container;\n    return result;\n  }\n\n  fromJSON(json) {\n    this.applySettings(this.settings, json.settings);\n    this.responses = json.responses;\n  }\n}\n\nmodule.exports = NlgManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}