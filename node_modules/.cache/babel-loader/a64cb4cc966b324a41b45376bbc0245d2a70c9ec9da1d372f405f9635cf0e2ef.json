{"ast":null,"code":"/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst fs = require('fs');\nconst path = require('path');\nconst {\n  hasUnicode,\n  unicodeToArray,\n  asciiToArray,\n  stringToArray,\n  compareWildcars,\n  loadEnvFromJson\n} = require('@nlpjs/core');\nfunction listFiles(folderPath, recursive = true) {\n  if (fs.existsSync(folderPath)) {\n    const all = fs.readdirSync(folderPath).map(x => path.join(folderPath, x));\n    const files = all.filter(x => fs.statSync(x).isFile());\n    if (recursive) {\n      const dirs = all.filter(x => !files.includes(x));\n      const dirFiles = dirs.reduce((prev, current) => prev.concat(listFiles(current)), []);\n      return [...files, ...dirFiles];\n    }\n    return files;\n  }\n  return [];\n}\nfunction getAbsolutePath(relative) {\n  if (path.isAbsolute(relative)) {\n    return relative;\n  }\n  return path.normalize(path.join(process.cwd(), relative));\n}\nfunction listFilesAbsolute(folderPath, recursive = true) {\n  const files = listFiles(folderPath, recursive);\n  return files.map(x => getAbsolutePath(x));\n}\nfunction loadEnv(fileName = '.env') {\n  const absolutePath = getAbsolutePath(fileName);\n  if (fs.existsSync(absolutePath)) {\n    const content = fs.readFileSync(absolutePath, 'utf8');\n    const lines = content.split(/\\n|\\r|\\r\\n/);\n    for (let i = 0; i < lines.length; i += 1) {\n      const line = lines[i];\n      const keyValueArr = line.match(/^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/);\n      if (keyValueArr) {\n        const key = keyValueArr[1];\n        let val = keyValueArr[2] || '';\n        const endVal = val.length - 1;\n        const isDoubleQuoted = val[0] === '\"' && val[endVal] === '\"';\n        const isSingleQuoted = val[0] === \"'\" && val[endVal] === \"'\";\n        if (isSingleQuoted || isDoubleQuoted) {\n          val = val.substring(1, endVal);\n          if (isDoubleQuoted) {\n            val = val.replace(/\\\\n/g, '\\n');\n          }\n        } else {\n          val = val.trim();\n        }\n        if (process.env[key] === undefined) {\n          process.env[key] = val;\n        }\n      }\n    }\n  }\n}\nmodule.exports = {\n  hasUnicode,\n  unicodeToArray,\n  asciiToArray,\n  stringToArray,\n  compareWildcars,\n  getAbsolutePath,\n  listFiles,\n  listFilesAbsolute,\n  loadEnv,\n  loadEnvFromJson\n};","map":{"version":3,"names":["fs","require","path","hasUnicode","unicodeToArray","asciiToArray","stringToArray","compareWildcars","loadEnvFromJson","listFiles","folderPath","recursive","existsSync","all","readdirSync","map","x","join","files","filter","statSync","isFile","dirs","includes","dirFiles","reduce","prev","current","concat","getAbsolutePath","relative","isAbsolute","normalize","process","cwd","listFilesAbsolute","loadEnv","fileName","absolutePath","content","readFileSync","lines","split","i","length","line","keyValueArr","match","key","val","endVal","isDoubleQuoted","isSingleQuoted","substring","replace","trim","env","undefined","module","exports"],"sources":["/Users/zyq/Desktop/大二下/暑期实习/moonshot project/node_modules/@nlpjs/core-loader/src/helper.js"],"sourcesContent":["/*\n * Copyright (c) AXA Group Operations Spain S.A.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst fs = require('fs');\nconst path = require('path');\n\nconst {\n  hasUnicode,\n  unicodeToArray,\n  asciiToArray,\n  stringToArray,\n  compareWildcars,\n  loadEnvFromJson,\n} = require('@nlpjs/core');\n\nfunction listFiles(folderPath, recursive = true) {\n  if (fs.existsSync(folderPath)) {\n    const all = fs.readdirSync(folderPath).map((x) => path.join(folderPath, x));\n    const files = all.filter((x) => fs.statSync(x).isFile());\n    if (recursive) {\n      const dirs = all.filter((x) => !files.includes(x));\n      const dirFiles = dirs.reduce(\n        (prev, current) => prev.concat(listFiles(current)),\n        []\n      );\n      return [...files, ...dirFiles];\n    }\n    return files;\n  }\n  return [];\n}\n\nfunction getAbsolutePath(relative) {\n  if (path.isAbsolute(relative)) {\n    return relative;\n  }\n  return path.normalize(path.join(process.cwd(), relative));\n}\n\nfunction listFilesAbsolute(folderPath, recursive = true) {\n  const files = listFiles(folderPath, recursive);\n  return files.map((x) => getAbsolutePath(x));\n}\n\nfunction loadEnv(fileName = '.env') {\n  const absolutePath = getAbsolutePath(fileName);\n  if (fs.existsSync(absolutePath)) {\n    const content = fs.readFileSync(absolutePath, 'utf8');\n    const lines = content.split(/\\n|\\r|\\r\\n/);\n    for (let i = 0; i < lines.length; i += 1) {\n      const line = lines[i];\n      const keyValueArr = line.match(/^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/);\n      if (keyValueArr) {\n        const key = keyValueArr[1];\n        let val = keyValueArr[2] || '';\n        const endVal = val.length - 1;\n        const isDoubleQuoted = val[0] === '\"' && val[endVal] === '\"';\n        const isSingleQuoted = val[0] === \"'\" && val[endVal] === \"'\";\n        if (isSingleQuoted || isDoubleQuoted) {\n          val = val.substring(1, endVal);\n          if (isDoubleQuoted) {\n            val = val.replace(/\\\\n/g, '\\n');\n          }\n        } else {\n          val = val.trim();\n        }\n        if (process.env[key] === undefined) {\n          process.env[key] = val;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  hasUnicode,\n  unicodeToArray,\n  asciiToArray,\n  stringToArray,\n  compareWildcars,\n  getAbsolutePath,\n  listFiles,\n  listFilesAbsolute,\n  loadEnv,\n  loadEnvFromJson,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}